#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mars.FleetAllocation.DataContext
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="MARSPortal")]
	public partial class FaoDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertPlannedDeletionDaily(PlannedDeletionDaily instance);
    partial void UpdatePlannedDeletionDaily(PlannedDeletionDaily instance);
    partial void DeletePlannedDeletionDaily(PlannedDeletionDaily instance);
    partial void InsertPredictionModelUtilizationFactor(PredictionModelUtilizationFactor instance);
    partial void UpdatePredictionModelUtilizationFactor(PredictionModelUtilizationFactor instance);
    partial void DeletePredictionModelUtilizationFactor(PredictionModelUtilizationFactor instance);
    partial void InsertLOCATION(LOCATION instance);
    partial void UpdateLOCATION(LOCATION instance);
    partial void DeleteLOCATION(LOCATION instance);
    partial void InsertCAR_GROUP(CAR_GROUP instance);
    partial void UpdateCAR_GROUP(CAR_GROUP instance);
    partial void DeleteCAR_GROUP(CAR_GROUP instance);
    partial void InsertCAR_CLASS(CAR_CLASS instance);
    partial void UpdateCAR_CLASS(CAR_CLASS instance);
    partial void DeleteCAR_CLASS(CAR_CLASS instance);
    partial void InsertCAR_SEGMENT(CAR_SEGMENT instance);
    partial void UpdateCAR_SEGMENT(CAR_SEGMENT instance);
    partial void DeleteCAR_SEGMENT(CAR_SEGMENT instance);
    partial void InsertCMS_LOCATION_GROUP(CMS_LOCATION_GROUP instance);
    partial void UpdateCMS_LOCATION_GROUP(CMS_LOCATION_GROUP instance);
    partial void DeleteCMS_LOCATION_GROUP(CMS_LOCATION_GROUP instance);
    partial void InsertCMS_POOL(CMS_POOL instance);
    partial void UpdateCMS_POOL(CMS_POOL instance);
    partial void DeleteCMS_POOL(CMS_POOL instance);
    partial void InsertCOUNTRy(COUNTRy instance);
    partial void UpdateCOUNTRy(COUNTRy instance);
    partial void DeleteCOUNTRy(COUNTRy instance);
    partial void InsertMARS_CMS_FORECAST(MARS_CMS_FORECAST instance);
    partial void UpdateMARS_CMS_FORECAST(MARS_CMS_FORECAST instance);
    partial void DeleteMARS_CMS_FORECAST(MARS_CMS_FORECAST instance);
    partial void InsertIsoWeekOfYear(IsoWeekOfYear instance);
    partial void UpdateIsoWeekOfYear(IsoWeekOfYear instance);
    partial void DeleteIsoWeekOfYear(IsoWeekOfYear instance);
    partial void InsertCommercialCarSegment(CommercialCarSegment instance);
    partial void UpdateCommercialCarSegment(CommercialCarSegment instance);
    partial void DeleteCommercialCarSegment(CommercialCarSegment instance);
    partial void InsertCmsToLocationLevelPercent(CmsToLocationLevelPercent instance);
    partial void UpdateCmsToLocationLevelPercent(CmsToLocationLevelPercent instance);
    partial void DeleteCmsToLocationLevelPercent(CmsToLocationLevelPercent instance);
    partial void InsertFleetHistory(FleetHistory instance);
    partial void UpdateFleetHistory(FleetHistory instance);
    partial void DeleteFleetHistory(FleetHistory instance);
    partial void InsertResAddition(ResAddition instance);
    partial void UpdateResAddition(ResAddition instance);
    partial void DeleteResAddition(ResAddition instance);
    partial void InsertResDeletion(ResDeletion instance);
    partial void UpdateResDeletion(ResDeletion instance);
    partial void DeleteResDeletion(ResDeletion instance);
    partial void InsertOPS_AREA(OPS_AREA instance);
    partial void UpdateOPS_AREA(OPS_AREA instance);
    partial void DeleteOPS_AREA(OPS_AREA instance);
    partial void InsertOPS_REGION(OPS_REGION instance);
    partial void UpdateOPS_REGION(OPS_REGION instance);
    partial void DeleteOPS_REGION(OPS_REGION instance);
    partial void InsertWeekDay(WeekDay instance);
    partial void UpdateWeekDay(WeekDay instance);
    partial void DeleteWeekDay(WeekDay instance);
    partial void InsertWeeklyLimitOnCarSegment(WeeklyLimitOnCarSegment instance);
    partial void UpdateWeeklyLimitOnCarSegment(WeeklyLimitOnCarSegment instance);
    partial void DeleteWeeklyLimitOnCarSegment(WeeklyLimitOnCarSegment instance);
    partial void InsertRevenueByCommercialCarSegment(RevenueByCommercialCarSegment instance);
    partial void UpdateRevenueByCommercialCarSegment(RevenueByCommercialCarSegment instance);
    partial void DeleteRevenueByCommercialCarSegment(RevenueByCommercialCarSegment instance);
    partial void InsertLifecycleHoldingCost(LifecycleHoldingCost instance);
    partial void UpdateLifecycleHoldingCost(LifecycleHoldingCost instance);
    partial void DeleteLifecycleHoldingCost(LifecycleHoldingCost instance);
    partial void InsertFleetSizeFutureTrend(FleetSizeFutureTrend instance);
    partial void UpdateFleetSizeFutureTrend(FleetSizeFutureTrend instance);
    partial void DeleteFleetSizeFutureTrend(FleetSizeFutureTrend instance);
    partial void InsertMonthlyLimitOnCarGroup(MonthlyLimitOnCarGroup instance);
    partial void UpdateMonthlyLimitOnCarGroup(MonthlyLimitOnCarGroup instance);
    partial void DeleteMonthlyLimitOnCarGroup(MonthlyLimitOnCarGroup instance);
    partial void InsertIsoWeekToMonth(IsoWeekToMonth instance);
    partial void UpdateIsoWeekToMonth(IsoWeekToMonth instance);
    partial void DeleteIsoWeekToMonth(IsoWeekToMonth instance);
    partial void InsertMARS_CMS_NECESSARY_FLEET(MARS_CMS_NECESSARY_FLEET instance);
    partial void UpdateMARS_CMS_NECESSARY_FLEET(MARS_CMS_NECESSARY_FLEET instance);
    partial void DeleteMARS_CMS_NECESSARY_FLEET(MARS_CMS_NECESSARY_FLEET instance);
    partial void InsertMinCommercialSegmentScenario(MinCommercialSegmentScenario instance);
    partial void UpdateMinCommercialSegmentScenario(MinCommercialSegmentScenario instance);
    partial void DeleteMinCommercialSegmentScenario(MinCommercialSegmentScenario instance);
    partial void InsertMaxFleetFactorScenario(MaxFleetFactorScenario instance);
    partial void UpdateMaxFleetFactorScenario(MaxFleetFactorScenario instance);
    partial void DeleteMaxFleetFactorScenario(MaxFleetFactorScenario instance);
    partial void InsertMarsUser(MarsUser instance);
    partial void UpdateMarsUser(MarsUser instance);
    partial void DeleteMarsUser(MarsUser instance);
    partial void InsertMinCommercialSegment(MinCommercialSegment instance);
    partial void UpdateMinCommercialSegment(MinCommercialSegment instance);
    partial void DeleteMinCommercialSegment(MinCommercialSegment instance);
    partial void InsertMaxFleetFactor(MaxFleetFactor instance);
    partial void UpdateMaxFleetFactor(MaxFleetFactor instance);
    partial void DeleteMaxFleetFactor(MaxFleetFactor instance);
    partial void InsertCurrencyUsdRate(CurrencyUsdRate instance);
    partial void UpdateCurrencyUsdRate(CurrencyUsdRate instance);
    partial void DeleteCurrencyUsdRate(CurrencyUsdRate instance);
    partial void InsertAdditionPlan(AdditionPlan instance);
    partial void UpdateAdditionPlan(AdditionPlan instance);
    partial void DeleteAdditionPlan(AdditionPlan instance);
    partial void InsertAdditionPlanMinMaxValue(AdditionPlanMinMaxValue instance);
    partial void UpdateAdditionPlanMinMaxValue(AdditionPlanMinMaxValue instance);
    partial void DeleteAdditionPlanMinMaxValue(AdditionPlanMinMaxValue instance);
    partial void InsertAdditionPlanEntry(AdditionPlanEntry instance);
    partial void UpdateAdditionPlanEntry(AdditionPlanEntry instance);
    partial void DeleteAdditionPlanEntry(AdditionPlanEntry instance);
    #endregion
		
		public FaoDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["Rad.Properties.Settings.ApplicationDataBase"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public FaoDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public FaoDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public FaoDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public FaoDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<PlannedDeletionDaily> PlannedDeletionDailies
		{
			get
			{
				return this.GetTable<PlannedDeletionDaily>();
			}
		}
		
		public System.Data.Linq.Table<PredictionModelUtilizationFactor> PredictionModelUtilizationFactors
		{
			get
			{
				return this.GetTable<PredictionModelUtilizationFactor>();
			}
		}
		
		public System.Data.Linq.Table<LOCATION> LOCATIONs
		{
			get
			{
				return this.GetTable<LOCATION>();
			}
		}
		
		public System.Data.Linq.Table<CAR_GROUP> CAR_GROUPs
		{
			get
			{
				return this.GetTable<CAR_GROUP>();
			}
		}
		
		public System.Data.Linq.Table<CAR_CLASS> CAR_CLASSes
		{
			get
			{
				return this.GetTable<CAR_CLASS>();
			}
		}
		
		public System.Data.Linq.Table<CAR_SEGMENT> CAR_SEGMENTs
		{
			get
			{
				return this.GetTable<CAR_SEGMENT>();
			}
		}
		
		public System.Data.Linq.Table<CMS_LOCATION_GROUP> CMS_LOCATION_GROUPs
		{
			get
			{
				return this.GetTable<CMS_LOCATION_GROUP>();
			}
		}
		
		public System.Data.Linq.Table<CMS_POOL> CMS_POOLs
		{
			get
			{
				return this.GetTable<CMS_POOL>();
			}
		}
		
		public System.Data.Linq.Table<COUNTRy> COUNTRies
		{
			get
			{
				return this.GetTable<COUNTRy>();
			}
		}
		
		public System.Data.Linq.Table<MARS_CMS_FORECAST> MARS_CMS_FORECASTs
		{
			get
			{
				return this.GetTable<MARS_CMS_FORECAST>();
			}
		}
		
		public System.Data.Linq.Table<IsoWeekOfYear> IsoWeekOfYears
		{
			get
			{
				return this.GetTable<IsoWeekOfYear>();
			}
		}
		
		public System.Data.Linq.Table<CommercialCarSegment> CommercialCarSegments
		{
			get
			{
				return this.GetTable<CommercialCarSegment>();
			}
		}
		
		public System.Data.Linq.Table<CmsToLocationLevelPercent> CmsToLocationLevelPercents
		{
			get
			{
				return this.GetTable<CmsToLocationLevelPercent>();
			}
		}
		
		public System.Data.Linq.Table<FleetHistory> FleetHistories
		{
			get
			{
				return this.GetTable<FleetHistory>();
			}
		}
		
		public System.Data.Linq.Table<ResAddition> ResAdditions
		{
			get
			{
				return this.GetTable<ResAddition>();
			}
		}
		
		public System.Data.Linq.Table<ResDeletion> ResDeletions
		{
			get
			{
				return this.GetTable<ResDeletion>();
			}
		}
		
		public System.Data.Linq.Table<OPS_AREA> OPS_AREAs
		{
			get
			{
				return this.GetTable<OPS_AREA>();
			}
		}
		
		public System.Data.Linq.Table<OPS_REGION> OPS_REGIONs
		{
			get
			{
				return this.GetTable<OPS_REGION>();
			}
		}
		
		public System.Data.Linq.Table<WeekDay> WeekDays
		{
			get
			{
				return this.GetTable<WeekDay>();
			}
		}
		
		public System.Data.Linq.Table<WeeklyLimitOnCarSegment> WeeklyLimitOnCarSegments
		{
			get
			{
				return this.GetTable<WeeklyLimitOnCarSegment>();
			}
		}
		
		public System.Data.Linq.Table<RevenueByCommercialCarSegment> RevenueByCommercialCarSegments
		{
			get
			{
				return this.GetTable<RevenueByCommercialCarSegment>();
			}
		}
		
		public System.Data.Linq.Table<LifecycleHoldingCost> LifecycleHoldingCosts
		{
			get
			{
				return this.GetTable<LifecycleHoldingCost>();
			}
		}
		
		public System.Data.Linq.Table<FleetSizeFutureTrend> FleetSizeFutureTrends
		{
			get
			{
				return this.GetTable<FleetSizeFutureTrend>();
			}
		}
		
		public System.Data.Linq.Table<MonthlyLimitOnCarGroup> MonthlyLimitOnCarGroups
		{
			get
			{
				return this.GetTable<MonthlyLimitOnCarGroup>();
			}
		}
		
		public System.Data.Linq.Table<IsoWeekToMonth> IsoWeekToMonths
		{
			get
			{
				return this.GetTable<IsoWeekToMonth>();
			}
		}
		
		public System.Data.Linq.Table<MARS_CMS_NECESSARY_FLEET> MARS_CMS_NECESSARY_FLEETs
		{
			get
			{
				return this.GetTable<MARS_CMS_NECESSARY_FLEET>();
			}
		}
		
		public System.Data.Linq.Table<MinCommercialSegmentScenario> MinCommercialSegmentScenarios
		{
			get
			{
				return this.GetTable<MinCommercialSegmentScenario>();
			}
		}
		
		public System.Data.Linq.Table<MaxFleetFactorScenario> MaxFleetFactorScenarios
		{
			get
			{
				return this.GetTable<MaxFleetFactorScenario>();
			}
		}
		
		public System.Data.Linq.Table<MarsUser> MarsUsers
		{
			get
			{
				return this.GetTable<MarsUser>();
			}
		}
		
		public System.Data.Linq.Table<MinCommercialSegment> MinCommercialSegments
		{
			get
			{
				return this.GetTable<MinCommercialSegment>();
			}
		}
		
		public System.Data.Linq.Table<MaxFleetFactor> MaxFleetFactors
		{
			get
			{
				return this.GetTable<MaxFleetFactor>();
			}
		}
		
		public System.Data.Linq.Table<CurrencyUsdRate> CurrencyUsdRates
		{
			get
			{
				return this.GetTable<CurrencyUsdRate>();
			}
		}
		
		public System.Data.Linq.Table<AdditionPlan> AdditionPlans
		{
			get
			{
				return this.GetTable<AdditionPlan>();
			}
		}
		
		public System.Data.Linq.Table<AdditionPlanMinMaxValue> AdditionPlanMinMaxValues
		{
			get
			{
				return this.GetTable<AdditionPlanMinMaxValue>();
			}
		}
		
		public System.Data.Linq.Table<AdditionPlanEntry> AdditionPlanEntries
		{
			get
			{
				return this.GetTable<AdditionPlanEntry>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Fao.DuplicateMinCommSeg")]
		public int DuplicateMinCommSeg([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> newScenarioId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> oldScenarioId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), newScenarioId, oldScenarioId);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Fao.DuplicateMaxFleet")]
		public int DuplicateMaxFleet([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> newScenarioId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> oldScenarioId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), newScenarioId, oldScenarioId);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Fao.UpdateMaxFleetFactors")]
		public int UpdateMaxFleetFactors([global::System.Data.Linq.Mapping.ParameterAttribute(Name="MaxFleetFactorScenarioId", DbType="Int")] System.Nullable<int> maxFleetFactorScenarioId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LocationId", DbType="Int")] System.Nullable<int> locationId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LocationGroupId", DbType="Int")] System.Nullable<int> locationGroupId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PoolId", DbType="Int")] System.Nullable<int> poolId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LocationCountry", DbType="VarChar(2)")] string locationCountry, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CarGroupId", DbType="Int")] System.Nullable<int> carGroupId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CarClassId", DbType="Int")] System.Nullable<int> carClassId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CarSegmentId", DbType="Int")] System.Nullable<int> carSegmentId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="OwningCountry", DbType="VarChar(2)")] string owningCountry, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DayOfWeekIds", DbType="VarChar(50)")] string dayOfWeekIds, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MarsUserId", DbType="Int")] System.Nullable<int> marsUserId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="NonRevPercentage", DbType="Float")] System.Nullable<double> nonRevPercentage, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UtilizationPercentage", DbType="Float")] System.Nullable<double> utilizationPercentage)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), maxFleetFactorScenarioId, locationId, locationGroupId, poolId, locationCountry, carGroupId, carClassId, carSegmentId, owningCountry, dayOfWeekIds, marsUserId, nonRevPercentage, utilizationPercentage);
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Fao.PlannedDeletionDaily")]
	public partial class PlannedDeletionDaily : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PlannedDeletionDailyId;
		
		private int _FileUploadId;
		
		private int _LocationId;
		
		private int _CarGroupId;
		
		private int _Deletions;
		
		private byte _Week;
		
		private short _Year;
		
		private EntityRef<LOCATION> _LOCATION;
		
		private EntityRef<CAR_GROUP> _CAR_GROUP;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPlannedDeletionDailyIdChanging(int value);
    partial void OnPlannedDeletionDailyIdChanged();
    partial void OnFileUploadIdChanging(int value);
    partial void OnFileUploadIdChanged();
    partial void OnLocationIdChanging(int value);
    partial void OnLocationIdChanged();
    partial void OnCarGroupIdChanging(int value);
    partial void OnCarGroupIdChanged();
    partial void OnDeletionsChanging(int value);
    partial void OnDeletionsChanged();
    partial void OnWeekChanging(byte value);
    partial void OnWeekChanged();
    partial void OnYearChanging(short value);
    partial void OnYearChanged();
    #endregion
		
		public PlannedDeletionDaily()
		{
			this._LOCATION = default(EntityRef<LOCATION>);
			this._CAR_GROUP = default(EntityRef<CAR_GROUP>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlannedDeletionDailyId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PlannedDeletionDailyId
		{
			get
			{
				return this._PlannedDeletionDailyId;
			}
			set
			{
				if ((this._PlannedDeletionDailyId != value))
				{
					this.OnPlannedDeletionDailyIdChanging(value);
					this.SendPropertyChanging();
					this._PlannedDeletionDailyId = value;
					this.SendPropertyChanged("PlannedDeletionDailyId");
					this.OnPlannedDeletionDailyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileUploadId", DbType="Int NOT NULL")]
		public int FileUploadId
		{
			get
			{
				return this._FileUploadId;
			}
			set
			{
				if ((this._FileUploadId != value))
				{
					this.OnFileUploadIdChanging(value);
					this.SendPropertyChanging();
					this._FileUploadId = value;
					this.SendPropertyChanged("FileUploadId");
					this.OnFileUploadIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationId", DbType="Int NOT NULL")]
		public int LocationId
		{
			get
			{
				return this._LocationId;
			}
			set
			{
				if ((this._LocationId != value))
				{
					if (this._LOCATION.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLocationIdChanging(value);
					this.SendPropertyChanging();
					this._LocationId = value;
					this.SendPropertyChanged("LocationId");
					this.OnLocationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarGroupId", DbType="Int NOT NULL")]
		public int CarGroupId
		{
			get
			{
				return this._CarGroupId;
			}
			set
			{
				if ((this._CarGroupId != value))
				{
					if (this._CAR_GROUP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCarGroupIdChanging(value);
					this.SendPropertyChanging();
					this._CarGroupId = value;
					this.SendPropertyChanged("CarGroupId");
					this.OnCarGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deletions", DbType="Int NOT NULL")]
		public int Deletions
		{
			get
			{
				return this._Deletions;
			}
			set
			{
				if ((this._Deletions != value))
				{
					this.OnDeletionsChanging(value);
					this.SendPropertyChanging();
					this._Deletions = value;
					this.SendPropertyChanged("Deletions");
					this.OnDeletionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Week", DbType="TinyInt NOT NULL")]
		public byte Week
		{
			get
			{
				return this._Week;
			}
			set
			{
				if ((this._Week != value))
				{
					this.OnWeekChanging(value);
					this.SendPropertyChanging();
					this._Week = value;
					this.SendPropertyChanged("Week");
					this.OnWeekChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="SmallInt NOT NULL")]
		public short Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOCATION_PlannedDeletionDaily", Storage="_LOCATION", ThisKey="LocationId", OtherKey="dim_Location_id", IsForeignKey=true)]
		public LOCATION LOCATION
		{
			get
			{
				return this._LOCATION.Entity;
			}
			set
			{
				LOCATION previousValue = this._LOCATION.Entity;
				if (((previousValue != value) 
							|| (this._LOCATION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOCATION.Entity = null;
						previousValue.PlannedDeletionDailies.Remove(this);
					}
					this._LOCATION.Entity = value;
					if ((value != null))
					{
						value.PlannedDeletionDailies.Add(this);
						this._LocationId = value.dim_Location_id;
					}
					else
					{
						this._LocationId = default(int);
					}
					this.SendPropertyChanged("LOCATION");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CAR_GROUP_PlannedDeletionDaily", Storage="_CAR_GROUP", ThisKey="CarGroupId", OtherKey="car_group_id", IsForeignKey=true)]
		public CAR_GROUP CAR_GROUP
		{
			get
			{
				return this._CAR_GROUP.Entity;
			}
			set
			{
				CAR_GROUP previousValue = this._CAR_GROUP.Entity;
				if (((previousValue != value) 
							|| (this._CAR_GROUP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CAR_GROUP.Entity = null;
						previousValue.PlannedDeletionDailies.Remove(this);
					}
					this._CAR_GROUP.Entity = value;
					if ((value != null))
					{
						value.PlannedDeletionDailies.Add(this);
						this._CarGroupId = value.car_group_id;
					}
					else
					{
						this._CarGroupId = default(int);
					}
					this.SendPropertyChanged("CAR_GROUP");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Fao.PredictionModelUtilizationFactor")]
	public partial class PredictionModelUtilizationFactor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PredictionModelUtilizationFactorId;
		
		private int _PredictionModelId;
		
		private int _LocationId;
		
		private int _CarGroupId;
		
		private byte _DayOfWeek;
		
		private double _Percentage;
		
		private EntityRef<LOCATION> _LOCATION;
		
		private EntityRef<CAR_GROUP> _CAR_GROUP;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPredictionModelUtilizationFactorIdChanging(int value);
    partial void OnPredictionModelUtilizationFactorIdChanged();
    partial void OnPredictionModelIdChanging(int value);
    partial void OnPredictionModelIdChanged();
    partial void OnLocationIdChanging(int value);
    partial void OnLocationIdChanged();
    partial void OnCarGroupIdChanging(int value);
    partial void OnCarGroupIdChanged();
    partial void OnDayOfWeekChanging(byte value);
    partial void OnDayOfWeekChanged();
    partial void OnPercentageChanging(double value);
    partial void OnPercentageChanged();
    #endregion
		
		public PredictionModelUtilizationFactor()
		{
			this._LOCATION = default(EntityRef<LOCATION>);
			this._CAR_GROUP = default(EntityRef<CAR_GROUP>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PredictionModelUtilizationFactorId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PredictionModelUtilizationFactorId
		{
			get
			{
				return this._PredictionModelUtilizationFactorId;
			}
			set
			{
				if ((this._PredictionModelUtilizationFactorId != value))
				{
					this.OnPredictionModelUtilizationFactorIdChanging(value);
					this.SendPropertyChanging();
					this._PredictionModelUtilizationFactorId = value;
					this.SendPropertyChanged("PredictionModelUtilizationFactorId");
					this.OnPredictionModelUtilizationFactorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PredictionModelId", DbType="Int NOT NULL")]
		public int PredictionModelId
		{
			get
			{
				return this._PredictionModelId;
			}
			set
			{
				if ((this._PredictionModelId != value))
				{
					this.OnPredictionModelIdChanging(value);
					this.SendPropertyChanging();
					this._PredictionModelId = value;
					this.SendPropertyChanged("PredictionModelId");
					this.OnPredictionModelIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationId", DbType="Int NOT NULL")]
		public int LocationId
		{
			get
			{
				return this._LocationId;
			}
			set
			{
				if ((this._LocationId != value))
				{
					if (this._LOCATION.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLocationIdChanging(value);
					this.SendPropertyChanging();
					this._LocationId = value;
					this.SendPropertyChanged("LocationId");
					this.OnLocationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarGroupId", DbType="Int NOT NULL")]
		public int CarGroupId
		{
			get
			{
				return this._CarGroupId;
			}
			set
			{
				if ((this._CarGroupId != value))
				{
					if (this._CAR_GROUP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCarGroupIdChanging(value);
					this.SendPropertyChanging();
					this._CarGroupId = value;
					this.SendPropertyChanged("CarGroupId");
					this.OnCarGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DayOfWeek", DbType="TinyInt NOT NULL")]
		public byte DayOfWeek
		{
			get
			{
				return this._DayOfWeek;
			}
			set
			{
				if ((this._DayOfWeek != value))
				{
					this.OnDayOfWeekChanging(value);
					this.SendPropertyChanging();
					this._DayOfWeek = value;
					this.SendPropertyChanged("DayOfWeek");
					this.OnDayOfWeekChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Percentage", DbType="Float NOT NULL")]
		public double Percentage
		{
			get
			{
				return this._Percentage;
			}
			set
			{
				if ((this._Percentage != value))
				{
					this.OnPercentageChanging(value);
					this.SendPropertyChanging();
					this._Percentage = value;
					this.SendPropertyChanged("Percentage");
					this.OnPercentageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOCATION_PredictionModelUtilizationFactor", Storage="_LOCATION", ThisKey="LocationId", OtherKey="dim_Location_id", IsForeignKey=true)]
		public LOCATION LOCATION
		{
			get
			{
				return this._LOCATION.Entity;
			}
			set
			{
				LOCATION previousValue = this._LOCATION.Entity;
				if (((previousValue != value) 
							|| (this._LOCATION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOCATION.Entity = null;
						previousValue.PredictionModelUtilizationFactors.Remove(this);
					}
					this._LOCATION.Entity = value;
					if ((value != null))
					{
						value.PredictionModelUtilizationFactors.Add(this);
						this._LocationId = value.dim_Location_id;
					}
					else
					{
						this._LocationId = default(int);
					}
					this.SendPropertyChanged("LOCATION");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CAR_GROUP_PredictionModelUtilizationFactor", Storage="_CAR_GROUP", ThisKey="CarGroupId", OtherKey="car_group_id", IsForeignKey=true)]
		public CAR_GROUP CAR_GROUP
		{
			get
			{
				return this._CAR_GROUP.Entity;
			}
			set
			{
				CAR_GROUP previousValue = this._CAR_GROUP.Entity;
				if (((previousValue != value) 
							|| (this._CAR_GROUP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CAR_GROUP.Entity = null;
						previousValue.PredictionModelUtilizationFactors.Remove(this);
					}
					this._CAR_GROUP.Entity = value;
					if ((value != null))
					{
						value.PredictionModelUtilizationFactors.Add(this);
						this._CarGroupId = value.car_group_id;
					}
					else
					{
						this._CarGroupId = default(int);
					}
					this.SendPropertyChanged("CAR_GROUP");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOCATIONS")]
	public partial class LOCATION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _location1;
		
		private string _location_dw;
		
		private string _real_location_name;
		
		private string _location_name;
		
		private string _location_name_dw;
		
		private bool _active;
		
		private string _ap_dt_rr;
		
		private string _cal;
		
		private System.Nullable<int> _cms_location_group_id;
		
		private int _ops_area_id;
		
		private string _served_by_locn;
		
		private System.Nullable<int> _turnaround_hours;
		
		private string _ownarea;
		
		private string _location_area_id;
		
		private string _city_desc;
		
		private string _country;
		
		private int _dim_Location_id;
		
		private System.Nullable<int> _CompanyId;
		
		private EntitySet<PlannedDeletionDaily> _PlannedDeletionDailies;
		
		private EntitySet<PredictionModelUtilizationFactor> _PredictionModelUtilizationFactors;
		
		private EntitySet<CmsToLocationLevelPercent> _CmsToLocationLevelPercents;
		
		private EntitySet<FleetHistory> _FleetHistories;
		
		private EntitySet<ResAddition> _ResAdditions;
		
		private EntitySet<ResDeletion> _ResDeletions;
		
		private EntitySet<RevenueByCommercialCarSegment> _RevenueByCommercialCarSegments;
		
		private EntitySet<MinCommercialSegment> _MinCommercialSegments;
		
		private EntitySet<MaxFleetFactor> _MaxFleetFactors;
		
		private EntitySet<AdditionPlanMinMaxValue> _AdditionPlanMinMaxValues;
		
		private EntitySet<AdditionPlanEntry> _AdditionPlanEntries;
		
		private EntityRef<CMS_LOCATION_GROUP> _CMS_LOCATION_GROUP;
		
		private EntityRef<COUNTRy> _COUNTRy1;
		
		private EntityRef<OPS_AREA> _OPS_AREA;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onlocation1Changing(string value);
    partial void Onlocation1Changed();
    partial void Onlocation_dwChanging(string value);
    partial void Onlocation_dwChanged();
    partial void Onreal_location_nameChanging(string value);
    partial void Onreal_location_nameChanged();
    partial void Onlocation_nameChanging(string value);
    partial void Onlocation_nameChanged();
    partial void Onlocation_name_dwChanging(string value);
    partial void Onlocation_name_dwChanged();
    partial void OnactiveChanging(bool value);
    partial void OnactiveChanged();
    partial void Onap_dt_rrChanging(string value);
    partial void Onap_dt_rrChanged();
    partial void OncalChanging(string value);
    partial void OncalChanged();
    partial void Oncms_location_group_idChanging(System.Nullable<int> value);
    partial void Oncms_location_group_idChanged();
    partial void Onops_area_idChanging(int value);
    partial void Onops_area_idChanged();
    partial void Onserved_by_locnChanging(string value);
    partial void Onserved_by_locnChanged();
    partial void Onturnaround_hoursChanging(System.Nullable<int> value);
    partial void Onturnaround_hoursChanged();
    partial void OnownareaChanging(string value);
    partial void OnownareaChanged();
    partial void Onlocation_area_idChanging(string value);
    partial void Onlocation_area_idChanged();
    partial void Oncity_descChanging(string value);
    partial void Oncity_descChanged();
    partial void OncountryChanging(string value);
    partial void OncountryChanged();
    partial void Ondim_Location_idChanging(int value);
    partial void Ondim_Location_idChanged();
    partial void OnCompanyIdChanging(System.Nullable<int> value);
    partial void OnCompanyIdChanged();
    #endregion
		
		public LOCATION()
		{
			this._PlannedDeletionDailies = new EntitySet<PlannedDeletionDaily>(new Action<PlannedDeletionDaily>(this.attach_PlannedDeletionDailies), new Action<PlannedDeletionDaily>(this.detach_PlannedDeletionDailies));
			this._PredictionModelUtilizationFactors = new EntitySet<PredictionModelUtilizationFactor>(new Action<PredictionModelUtilizationFactor>(this.attach_PredictionModelUtilizationFactors), new Action<PredictionModelUtilizationFactor>(this.detach_PredictionModelUtilizationFactors));
			this._CmsToLocationLevelPercents = new EntitySet<CmsToLocationLevelPercent>(new Action<CmsToLocationLevelPercent>(this.attach_CmsToLocationLevelPercents), new Action<CmsToLocationLevelPercent>(this.detach_CmsToLocationLevelPercents));
			this._FleetHistories = new EntitySet<FleetHistory>(new Action<FleetHistory>(this.attach_FleetHistories), new Action<FleetHistory>(this.detach_FleetHistories));
			this._ResAdditions = new EntitySet<ResAddition>(new Action<ResAddition>(this.attach_ResAdditions), new Action<ResAddition>(this.detach_ResAdditions));
			this._ResDeletions = new EntitySet<ResDeletion>(new Action<ResDeletion>(this.attach_ResDeletions), new Action<ResDeletion>(this.detach_ResDeletions));
			this._RevenueByCommercialCarSegments = new EntitySet<RevenueByCommercialCarSegment>(new Action<RevenueByCommercialCarSegment>(this.attach_RevenueByCommercialCarSegments), new Action<RevenueByCommercialCarSegment>(this.detach_RevenueByCommercialCarSegments));
			this._MinCommercialSegments = new EntitySet<MinCommercialSegment>(new Action<MinCommercialSegment>(this.attach_MinCommercialSegments), new Action<MinCommercialSegment>(this.detach_MinCommercialSegments));
			this._MaxFleetFactors = new EntitySet<MaxFleetFactor>(new Action<MaxFleetFactor>(this.attach_MaxFleetFactors), new Action<MaxFleetFactor>(this.detach_MaxFleetFactors));
			this._AdditionPlanMinMaxValues = new EntitySet<AdditionPlanMinMaxValue>(new Action<AdditionPlanMinMaxValue>(this.attach_AdditionPlanMinMaxValues), new Action<AdditionPlanMinMaxValue>(this.detach_AdditionPlanMinMaxValues));
			this._AdditionPlanEntries = new EntitySet<AdditionPlanEntry>(new Action<AdditionPlanEntry>(this.attach_AdditionPlanEntries), new Action<AdditionPlanEntry>(this.detach_AdditionPlanEntries));
			this._CMS_LOCATION_GROUP = default(EntityRef<CMS_LOCATION_GROUP>);
			this._COUNTRy1 = default(EntityRef<COUNTRy>);
			this._OPS_AREA = default(EntityRef<OPS_AREA>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="location", Storage="_location1", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string location1
		{
			get
			{
				return this._location1;
			}
			set
			{
				if ((this._location1 != value))
				{
					this.Onlocation1Changing(value);
					this.SendPropertyChanging();
					this._location1 = value;
					this.SendPropertyChanged("location1");
					this.Onlocation1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_location_dw", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string location_dw
		{
			get
			{
				return this._location_dw;
			}
			set
			{
				if ((this._location_dw != value))
				{
					this.Onlocation_dwChanging(value);
					this.SendPropertyChanging();
					this._location_dw = value;
					this.SendPropertyChanged("location_dw");
					this.Onlocation_dwChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_real_location_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string real_location_name
		{
			get
			{
				return this._real_location_name;
			}
			set
			{
				if ((this._real_location_name != value))
				{
					this.Onreal_location_nameChanging(value);
					this.SendPropertyChanging();
					this._real_location_name = value;
					this.SendPropertyChanged("real_location_name");
					this.Onreal_location_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_location_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string location_name
		{
			get
			{
				return this._location_name;
			}
			set
			{
				if ((this._location_name != value))
				{
					this.Onlocation_nameChanging(value);
					this.SendPropertyChanging();
					this._location_name = value;
					this.SendPropertyChanged("location_name");
					this.Onlocation_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_location_name_dw", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string location_name_dw
		{
			get
			{
				return this._location_name_dw;
			}
			set
			{
				if ((this._location_name_dw != value))
				{
					this.Onlocation_name_dwChanging(value);
					this.SendPropertyChanging();
					this._location_name_dw = value;
					this.SendPropertyChanged("location_name_dw");
					this.Onlocation_name_dwChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_active", DbType="Bit NOT NULL")]
		public bool active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ap_dt_rr", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		public string ap_dt_rr
		{
			get
			{
				return this._ap_dt_rr;
			}
			set
			{
				if ((this._ap_dt_rr != value))
				{
					this.Onap_dt_rrChanging(value);
					this.SendPropertyChanging();
					this._ap_dt_rr = value;
					this.SendPropertyChanged("ap_dt_rr");
					this.Onap_dt_rrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cal", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string cal
		{
			get
			{
				return this._cal;
			}
			set
			{
				if ((this._cal != value))
				{
					this.OncalChanging(value);
					this.SendPropertyChanging();
					this._cal = value;
					this.SendPropertyChanged("cal");
					this.OncalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cms_location_group_id", DbType="Int")]
		public System.Nullable<int> cms_location_group_id
		{
			get
			{
				return this._cms_location_group_id;
			}
			set
			{
				if ((this._cms_location_group_id != value))
				{
					if (this._CMS_LOCATION_GROUP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncms_location_group_idChanging(value);
					this.SendPropertyChanging();
					this._cms_location_group_id = value;
					this.SendPropertyChanged("cms_location_group_id");
					this.Oncms_location_group_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ops_area_id", DbType="Int NOT NULL")]
		public int ops_area_id
		{
			get
			{
				return this._ops_area_id;
			}
			set
			{
				if ((this._ops_area_id != value))
				{
					if (this._OPS_AREA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onops_area_idChanging(value);
					this.SendPropertyChanging();
					this._ops_area_id = value;
					this.SendPropertyChanged("ops_area_id");
					this.Onops_area_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_served_by_locn", DbType="VarChar(50)")]
		public string served_by_locn
		{
			get
			{
				return this._served_by_locn;
			}
			set
			{
				if ((this._served_by_locn != value))
				{
					this.Onserved_by_locnChanging(value);
					this.SendPropertyChanging();
					this._served_by_locn = value;
					this.SendPropertyChanged("served_by_locn");
					this.Onserved_by_locnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_turnaround_hours", DbType="Int")]
		public System.Nullable<int> turnaround_hours
		{
			get
			{
				return this._turnaround_hours;
			}
			set
			{
				if ((this._turnaround_hours != value))
				{
					this.Onturnaround_hoursChanging(value);
					this.SendPropertyChanging();
					this._turnaround_hours = value;
					this.SendPropertyChanged("turnaround_hours");
					this.Onturnaround_hoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ownarea", DbType="VarChar(5)")]
		public string ownarea
		{
			get
			{
				return this._ownarea;
			}
			set
			{
				if ((this._ownarea != value))
				{
					this.OnownareaChanging(value);
					this.SendPropertyChanging();
					this._ownarea = value;
					this.SendPropertyChanged("ownarea");
					this.OnownareaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_location_area_id", DbType="VarChar(10)")]
		public string location_area_id
		{
			get
			{
				return this._location_area_id;
			}
			set
			{
				if ((this._location_area_id != value))
				{
					this.Onlocation_area_idChanging(value);
					this.SendPropertyChanging();
					this._location_area_id = value;
					this.SendPropertyChanged("location_area_id");
					this.Onlocation_area_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city_desc", DbType="VarChar(50)")]
		public string city_desc
		{
			get
			{
				return this._city_desc;
			}
			set
			{
				if ((this._city_desc != value))
				{
					this.Oncity_descChanging(value);
					this.SendPropertyChanging();
					this._city_desc = value;
					this.SendPropertyChanged("city_desc");
					this.Oncity_descChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_country", DbType="VarChar(10)")]
		public string country
		{
			get
			{
				return this._country;
			}
			set
			{
				if ((this._country != value))
				{
					if (this._COUNTRy1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncountryChanging(value);
					this.SendPropertyChanging();
					this._country = value;
					this.SendPropertyChanged("country");
					this.OncountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dim_Location_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int dim_Location_id
		{
			get
			{
				return this._dim_Location_id;
			}
			set
			{
				if ((this._dim_Location_id != value))
				{
					this.Ondim_Location_idChanging(value);
					this.SendPropertyChanging();
					this._dim_Location_id = value;
					this.SendPropertyChanged("dim_Location_id");
					this.Ondim_Location_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", DbType="Int")]
		public System.Nullable<int> CompanyId
		{
			get
			{
				return this._CompanyId;
			}
			set
			{
				if ((this._CompanyId != value))
				{
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._CompanyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOCATION_PlannedDeletionDaily", Storage="_PlannedDeletionDailies", ThisKey="dim_Location_id", OtherKey="LocationId")]
		public EntitySet<PlannedDeletionDaily> PlannedDeletionDailies
		{
			get
			{
				return this._PlannedDeletionDailies;
			}
			set
			{
				this._PlannedDeletionDailies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOCATION_PredictionModelUtilizationFactor", Storage="_PredictionModelUtilizationFactors", ThisKey="dim_Location_id", OtherKey="LocationId")]
		public EntitySet<PredictionModelUtilizationFactor> PredictionModelUtilizationFactors
		{
			get
			{
				return this._PredictionModelUtilizationFactors;
			}
			set
			{
				this._PredictionModelUtilizationFactors.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOCATION_CmsToLocationLevelPercent", Storage="_CmsToLocationLevelPercents", ThisKey="dim_Location_id", OtherKey="LocationId")]
		public EntitySet<CmsToLocationLevelPercent> CmsToLocationLevelPercents
		{
			get
			{
				return this._CmsToLocationLevelPercents;
			}
			set
			{
				this._CmsToLocationLevelPercents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOCATION_FleetHistory", Storage="_FleetHistories", ThisKey="dim_Location_id", OtherKey="LocationId")]
		public EntitySet<FleetHistory> FleetHistories
		{
			get
			{
				return this._FleetHistories;
			}
			set
			{
				this._FleetHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOCATION_ResAddition", Storage="_ResAdditions", ThisKey="dim_Location_id", OtherKey="LocId")]
		public EntitySet<ResAddition> ResAdditions
		{
			get
			{
				return this._ResAdditions;
			}
			set
			{
				this._ResAdditions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOCATION_ResDeletion", Storage="_ResDeletions", ThisKey="dim_Location_id", OtherKey="LocId")]
		public EntitySet<ResDeletion> ResDeletions
		{
			get
			{
				return this._ResDeletions;
			}
			set
			{
				this._ResDeletions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOCATION_RevenueByCommercialCarSegment", Storage="_RevenueByCommercialCarSegments", ThisKey="dim_Location_id", OtherKey="LocationId")]
		public EntitySet<RevenueByCommercialCarSegment> RevenueByCommercialCarSegments
		{
			get
			{
				return this._RevenueByCommercialCarSegments;
			}
			set
			{
				this._RevenueByCommercialCarSegments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOCATION_MinCommercialSegment", Storage="_MinCommercialSegments", ThisKey="dim_Location_id", OtherKey="LocationId")]
		public EntitySet<MinCommercialSegment> MinCommercialSegments
		{
			get
			{
				return this._MinCommercialSegments;
			}
			set
			{
				this._MinCommercialSegments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOCATION_MaxFleetFactor", Storage="_MaxFleetFactors", ThisKey="dim_Location_id", OtherKey="LocationId")]
		public EntitySet<MaxFleetFactor> MaxFleetFactors
		{
			get
			{
				return this._MaxFleetFactors;
			}
			set
			{
				this._MaxFleetFactors.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOCATION_AdditionPlanMinMaxValue", Storage="_AdditionPlanMinMaxValues", ThisKey="dim_Location_id", OtherKey="LocationId")]
		public EntitySet<AdditionPlanMinMaxValue> AdditionPlanMinMaxValues
		{
			get
			{
				return this._AdditionPlanMinMaxValues;
			}
			set
			{
				this._AdditionPlanMinMaxValues.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOCATION_AdditionPlanEntry", Storage="_AdditionPlanEntries", ThisKey="dim_Location_id", OtherKey="LocationId")]
		public EntitySet<AdditionPlanEntry> AdditionPlanEntries
		{
			get
			{
				return this._AdditionPlanEntries;
			}
			set
			{
				this._AdditionPlanEntries.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CMS_LOCATION_GROUP_LOCATION", Storage="_CMS_LOCATION_GROUP", ThisKey="cms_location_group_id", OtherKey="cms_location_group_id", IsForeignKey=true)]
		public CMS_LOCATION_GROUP CMS_LOCATION_GROUP
		{
			get
			{
				return this._CMS_LOCATION_GROUP.Entity;
			}
			set
			{
				CMS_LOCATION_GROUP previousValue = this._CMS_LOCATION_GROUP.Entity;
				if (((previousValue != value) 
							|| (this._CMS_LOCATION_GROUP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CMS_LOCATION_GROUP.Entity = null;
						previousValue.LOCATIONs.Remove(this);
					}
					this._CMS_LOCATION_GROUP.Entity = value;
					if ((value != null))
					{
						value.LOCATIONs.Add(this);
						this._cms_location_group_id = value.cms_location_group_id;
					}
					else
					{
						this._cms_location_group_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("CMS_LOCATION_GROUP");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="COUNTRy_LOCATION", Storage="_COUNTRy1", ThisKey="country", OtherKey="country1", IsForeignKey=true)]
		public COUNTRy COUNTRy1
		{
			get
			{
				return this._COUNTRy1.Entity;
			}
			set
			{
				COUNTRy previousValue = this._COUNTRy1.Entity;
				if (((previousValue != value) 
							|| (this._COUNTRy1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._COUNTRy1.Entity = null;
						previousValue.LOCATIONs.Remove(this);
					}
					this._COUNTRy1.Entity = value;
					if ((value != null))
					{
						value.LOCATIONs.Add(this);
						this._country = value.country1;
					}
					else
					{
						this._country = default(string);
					}
					this.SendPropertyChanged("COUNTRy1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OPS_AREA_LOCATION", Storage="_OPS_AREA", ThisKey="ops_area_id", OtherKey="ops_area_id", IsForeignKey=true)]
		public OPS_AREA OPS_AREA
		{
			get
			{
				return this._OPS_AREA.Entity;
			}
			set
			{
				OPS_AREA previousValue = this._OPS_AREA.Entity;
				if (((previousValue != value) 
							|| (this._OPS_AREA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OPS_AREA.Entity = null;
						previousValue.LOCATIONs.Remove(this);
					}
					this._OPS_AREA.Entity = value;
					if ((value != null))
					{
						value.LOCATIONs.Add(this);
						this._ops_area_id = value.ops_area_id;
					}
					else
					{
						this._ops_area_id = default(int);
					}
					this.SendPropertyChanged("OPS_AREA");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PlannedDeletionDailies(PlannedDeletionDaily entity)
		{
			this.SendPropertyChanging();
			entity.LOCATION = this;
		}
		
		private void detach_PlannedDeletionDailies(PlannedDeletionDaily entity)
		{
			this.SendPropertyChanging();
			entity.LOCATION = null;
		}
		
		private void attach_PredictionModelUtilizationFactors(PredictionModelUtilizationFactor entity)
		{
			this.SendPropertyChanging();
			entity.LOCATION = this;
		}
		
		private void detach_PredictionModelUtilizationFactors(PredictionModelUtilizationFactor entity)
		{
			this.SendPropertyChanging();
			entity.LOCATION = null;
		}
		
		private void attach_CmsToLocationLevelPercents(CmsToLocationLevelPercent entity)
		{
			this.SendPropertyChanging();
			entity.LOCATION = this;
		}
		
		private void detach_CmsToLocationLevelPercents(CmsToLocationLevelPercent entity)
		{
			this.SendPropertyChanging();
			entity.LOCATION = null;
		}
		
		private void attach_FleetHistories(FleetHistory entity)
		{
			this.SendPropertyChanging();
			entity.LOCATION = this;
		}
		
		private void detach_FleetHistories(FleetHistory entity)
		{
			this.SendPropertyChanging();
			entity.LOCATION = null;
		}
		
		private void attach_ResAdditions(ResAddition entity)
		{
			this.SendPropertyChanging();
			entity.LOCATION = this;
		}
		
		private void detach_ResAdditions(ResAddition entity)
		{
			this.SendPropertyChanging();
			entity.LOCATION = null;
		}
		
		private void attach_ResDeletions(ResDeletion entity)
		{
			this.SendPropertyChanging();
			entity.LOCATION = this;
		}
		
		private void detach_ResDeletions(ResDeletion entity)
		{
			this.SendPropertyChanging();
			entity.LOCATION = null;
		}
		
		private void attach_RevenueByCommercialCarSegments(RevenueByCommercialCarSegment entity)
		{
			this.SendPropertyChanging();
			entity.LOCATION = this;
		}
		
		private void detach_RevenueByCommercialCarSegments(RevenueByCommercialCarSegment entity)
		{
			this.SendPropertyChanging();
			entity.LOCATION = null;
		}
		
		private void attach_MinCommercialSegments(MinCommercialSegment entity)
		{
			this.SendPropertyChanging();
			entity.LOCATION = this;
		}
		
		private void detach_MinCommercialSegments(MinCommercialSegment entity)
		{
			this.SendPropertyChanging();
			entity.LOCATION = null;
		}
		
		private void attach_MaxFleetFactors(MaxFleetFactor entity)
		{
			this.SendPropertyChanging();
			entity.LOCATION = this;
		}
		
		private void detach_MaxFleetFactors(MaxFleetFactor entity)
		{
			this.SendPropertyChanging();
			entity.LOCATION = null;
		}
		
		private void attach_AdditionPlanMinMaxValues(AdditionPlanMinMaxValue entity)
		{
			this.SendPropertyChanging();
			entity.LOCATION = this;
		}
		
		private void detach_AdditionPlanMinMaxValues(AdditionPlanMinMaxValue entity)
		{
			this.SendPropertyChanging();
			entity.LOCATION = null;
		}
		
		private void attach_AdditionPlanEntries(AdditionPlanEntry entity)
		{
			this.SendPropertyChanging();
			entity.LOCATION = this;
		}
		
		private void detach_AdditionPlanEntries(AdditionPlanEntry entity)
		{
			this.SendPropertyChanging();
			entity.LOCATION = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CAR_GROUPS")]
	public partial class CAR_GROUP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _car_group_id;
		
		private string _car_group1;
		
		private string _car_group_gold;
		
		private int _car_class_id;
		
		private int _sort_car_group;
		
		private string _car_group_fivestar;
		
		private string _car_group_presidentCircle;
		
		private string _car_group_platinum;
		
		private System.Nullable<bool> _IsActive;
		
		private EntitySet<PlannedDeletionDaily> _PlannedDeletionDailies;
		
		private EntitySet<PredictionModelUtilizationFactor> _PredictionModelUtilizationFactors;
		
		private EntitySet<MARS_CMS_FORECAST> _MARS_CMS_FORECASTs;
		
		private EntitySet<CmsToLocationLevelPercent> _CmsToLocationLevelPercents;
		
		private EntitySet<FleetHistory> _FleetHistories;
		
		private EntitySet<ResAddition> _ResAdditions;
		
		private EntitySet<ResDeletion> _ResDeletions;
		
		private EntitySet<RevenueByCommercialCarSegment> _RevenueByCommercialCarSegments;
		
		private EntitySet<LifecycleHoldingCost> _LifecycleHoldingCosts;
		
		private EntitySet<FleetSizeFutureTrend> _FleetSizeFutureTrends;
		
		private EntitySet<MonthlyLimitOnCarGroup> _MonthlyLimitOnCarGroups;
		
		private EntitySet<MARS_CMS_NECESSARY_FLEET> _MARS_CMS_NECESSARY_FLEETs;
		
		private EntitySet<MaxFleetFactor> _MaxFleetFactors;
		
		private EntitySet<AdditionPlanMinMaxValue> _AdditionPlanMinMaxValues;
		
		private EntitySet<AdditionPlanEntry> _AdditionPlanEntries;
		
		private EntityRef<CAR_CLASS> _CAR_CLASS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncar_group_idChanging(int value);
    partial void Oncar_group_idChanged();
    partial void Oncar_group1Changing(string value);
    partial void Oncar_group1Changed();
    partial void Oncar_group_goldChanging(string value);
    partial void Oncar_group_goldChanged();
    partial void Oncar_class_idChanging(int value);
    partial void Oncar_class_idChanged();
    partial void Onsort_car_groupChanging(int value);
    partial void Onsort_car_groupChanged();
    partial void Oncar_group_fivestarChanging(string value);
    partial void Oncar_group_fivestarChanged();
    partial void Oncar_group_presidentCircleChanging(string value);
    partial void Oncar_group_presidentCircleChanged();
    partial void Oncar_group_platinumChanging(string value);
    partial void Oncar_group_platinumChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    #endregion
		
		public CAR_GROUP()
		{
			this._PlannedDeletionDailies = new EntitySet<PlannedDeletionDaily>(new Action<PlannedDeletionDaily>(this.attach_PlannedDeletionDailies), new Action<PlannedDeletionDaily>(this.detach_PlannedDeletionDailies));
			this._PredictionModelUtilizationFactors = new EntitySet<PredictionModelUtilizationFactor>(new Action<PredictionModelUtilizationFactor>(this.attach_PredictionModelUtilizationFactors), new Action<PredictionModelUtilizationFactor>(this.detach_PredictionModelUtilizationFactors));
			this._MARS_CMS_FORECASTs = new EntitySet<MARS_CMS_FORECAST>(new Action<MARS_CMS_FORECAST>(this.attach_MARS_CMS_FORECASTs), new Action<MARS_CMS_FORECAST>(this.detach_MARS_CMS_FORECASTs));
			this._CmsToLocationLevelPercents = new EntitySet<CmsToLocationLevelPercent>(new Action<CmsToLocationLevelPercent>(this.attach_CmsToLocationLevelPercents), new Action<CmsToLocationLevelPercent>(this.detach_CmsToLocationLevelPercents));
			this._FleetHistories = new EntitySet<FleetHistory>(new Action<FleetHistory>(this.attach_FleetHistories), new Action<FleetHistory>(this.detach_FleetHistories));
			this._ResAdditions = new EntitySet<ResAddition>(new Action<ResAddition>(this.attach_ResAdditions), new Action<ResAddition>(this.detach_ResAdditions));
			this._ResDeletions = new EntitySet<ResDeletion>(new Action<ResDeletion>(this.attach_ResDeletions), new Action<ResDeletion>(this.detach_ResDeletions));
			this._RevenueByCommercialCarSegments = new EntitySet<RevenueByCommercialCarSegment>(new Action<RevenueByCommercialCarSegment>(this.attach_RevenueByCommercialCarSegments), new Action<RevenueByCommercialCarSegment>(this.detach_RevenueByCommercialCarSegments));
			this._LifecycleHoldingCosts = new EntitySet<LifecycleHoldingCost>(new Action<LifecycleHoldingCost>(this.attach_LifecycleHoldingCosts), new Action<LifecycleHoldingCost>(this.detach_LifecycleHoldingCosts));
			this._FleetSizeFutureTrends = new EntitySet<FleetSizeFutureTrend>(new Action<FleetSizeFutureTrend>(this.attach_FleetSizeFutureTrends), new Action<FleetSizeFutureTrend>(this.detach_FleetSizeFutureTrends));
			this._MonthlyLimitOnCarGroups = new EntitySet<MonthlyLimitOnCarGroup>(new Action<MonthlyLimitOnCarGroup>(this.attach_MonthlyLimitOnCarGroups), new Action<MonthlyLimitOnCarGroup>(this.detach_MonthlyLimitOnCarGroups));
			this._MARS_CMS_NECESSARY_FLEETs = new EntitySet<MARS_CMS_NECESSARY_FLEET>(new Action<MARS_CMS_NECESSARY_FLEET>(this.attach_MARS_CMS_NECESSARY_FLEETs), new Action<MARS_CMS_NECESSARY_FLEET>(this.detach_MARS_CMS_NECESSARY_FLEETs));
			this._MaxFleetFactors = new EntitySet<MaxFleetFactor>(new Action<MaxFleetFactor>(this.attach_MaxFleetFactors), new Action<MaxFleetFactor>(this.detach_MaxFleetFactors));
			this._AdditionPlanMinMaxValues = new EntitySet<AdditionPlanMinMaxValue>(new Action<AdditionPlanMinMaxValue>(this.attach_AdditionPlanMinMaxValues), new Action<AdditionPlanMinMaxValue>(this.detach_AdditionPlanMinMaxValues));
			this._AdditionPlanEntries = new EntitySet<AdditionPlanEntry>(new Action<AdditionPlanEntry>(this.attach_AdditionPlanEntries), new Action<AdditionPlanEntry>(this.detach_AdditionPlanEntries));
			this._CAR_CLASS = default(EntityRef<CAR_CLASS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_car_group_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int car_group_id
		{
			get
			{
				return this._car_group_id;
			}
			set
			{
				if ((this._car_group_id != value))
				{
					this.Oncar_group_idChanging(value);
					this.SendPropertyChanging();
					this._car_group_id = value;
					this.SendPropertyChanged("car_group_id");
					this.Oncar_group_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="car_group", Storage="_car_group1", DbType="VarChar(3) NOT NULL", CanBeNull=false)]
		public string car_group1
		{
			get
			{
				return this._car_group1;
			}
			set
			{
				if ((this._car_group1 != value))
				{
					this.Oncar_group1Changing(value);
					this.SendPropertyChanging();
					this._car_group1 = value;
					this.SendPropertyChanged("car_group1");
					this.Oncar_group1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_car_group_gold", DbType="VarChar(3)")]
		public string car_group_gold
		{
			get
			{
				return this._car_group_gold;
			}
			set
			{
				if ((this._car_group_gold != value))
				{
					this.Oncar_group_goldChanging(value);
					this.SendPropertyChanging();
					this._car_group_gold = value;
					this.SendPropertyChanged("car_group_gold");
					this.Oncar_group_goldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_car_class_id", DbType="Int NOT NULL")]
		public int car_class_id
		{
			get
			{
				return this._car_class_id;
			}
			set
			{
				if ((this._car_class_id != value))
				{
					if (this._CAR_CLASS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncar_class_idChanging(value);
					this.SendPropertyChanging();
					this._car_class_id = value;
					this.SendPropertyChanged("car_class_id");
					this.Oncar_class_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sort_car_group", DbType="Int NOT NULL")]
		public int sort_car_group
		{
			get
			{
				return this._sort_car_group;
			}
			set
			{
				if ((this._sort_car_group != value))
				{
					this.Onsort_car_groupChanging(value);
					this.SendPropertyChanging();
					this._sort_car_group = value;
					this.SendPropertyChanged("sort_car_group");
					this.Onsort_car_groupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_car_group_fivestar", DbType="VarChar(3)")]
		public string car_group_fivestar
		{
			get
			{
				return this._car_group_fivestar;
			}
			set
			{
				if ((this._car_group_fivestar != value))
				{
					this.Oncar_group_fivestarChanging(value);
					this.SendPropertyChanging();
					this._car_group_fivestar = value;
					this.SendPropertyChanged("car_group_fivestar");
					this.Oncar_group_fivestarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_car_group_presidentCircle", DbType="VarChar(3)")]
		public string car_group_presidentCircle
		{
			get
			{
				return this._car_group_presidentCircle;
			}
			set
			{
				if ((this._car_group_presidentCircle != value))
				{
					this.Oncar_group_presidentCircleChanging(value);
					this.SendPropertyChanging();
					this._car_group_presidentCircle = value;
					this.SendPropertyChanged("car_group_presidentCircle");
					this.Oncar_group_presidentCircleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_car_group_platinum", DbType="VarChar(3)")]
		public string car_group_platinum
		{
			get
			{
				return this._car_group_platinum;
			}
			set
			{
				if ((this._car_group_platinum != value))
				{
					this.Oncar_group_platinumChanging(value);
					this.SendPropertyChanging();
					this._car_group_platinum = value;
					this.SendPropertyChanged("car_group_platinum");
					this.Oncar_group_platinumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CAR_GROUP_PlannedDeletionDaily", Storage="_PlannedDeletionDailies", ThisKey="car_group_id", OtherKey="CarGroupId")]
		public EntitySet<PlannedDeletionDaily> PlannedDeletionDailies
		{
			get
			{
				return this._PlannedDeletionDailies;
			}
			set
			{
				this._PlannedDeletionDailies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CAR_GROUP_PredictionModelUtilizationFactor", Storage="_PredictionModelUtilizationFactors", ThisKey="car_group_id", OtherKey="CarGroupId")]
		public EntitySet<PredictionModelUtilizationFactor> PredictionModelUtilizationFactors
		{
			get
			{
				return this._PredictionModelUtilizationFactors;
			}
			set
			{
				this._PredictionModelUtilizationFactors.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CAR_GROUP_MARS_CMS_FORECAST", Storage="_MARS_CMS_FORECASTs", ThisKey="car_group_id", OtherKey="CAR_CLASS_ID")]
		public EntitySet<MARS_CMS_FORECAST> MARS_CMS_FORECASTs
		{
			get
			{
				return this._MARS_CMS_FORECASTs;
			}
			set
			{
				this._MARS_CMS_FORECASTs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CAR_GROUP_CmsToLocationLevelPercent", Storage="_CmsToLocationLevelPercents", ThisKey="car_group_id", OtherKey="CarGroupId")]
		public EntitySet<CmsToLocationLevelPercent> CmsToLocationLevelPercents
		{
			get
			{
				return this._CmsToLocationLevelPercents;
			}
			set
			{
				this._CmsToLocationLevelPercents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CAR_GROUP_FleetHistory", Storage="_FleetHistories", ThisKey="car_group_id", OtherKey="CarGroupId")]
		public EntitySet<FleetHistory> FleetHistories
		{
			get
			{
				return this._FleetHistories;
			}
			set
			{
				this._FleetHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CAR_GROUP_ResAddition", Storage="_ResAdditions", ThisKey="car_group_id", OtherKey="CarGrpId")]
		public EntitySet<ResAddition> ResAdditions
		{
			get
			{
				return this._ResAdditions;
			}
			set
			{
				this._ResAdditions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CAR_GROUP_ResDeletion", Storage="_ResDeletions", ThisKey="car_group_id", OtherKey="CarGrpId")]
		public EntitySet<ResDeletion> ResDeletions
		{
			get
			{
				return this._ResDeletions;
			}
			set
			{
				this._ResDeletions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CAR_GROUP_RevenueByCommercialCarSegment", Storage="_RevenueByCommercialCarSegments", ThisKey="car_group_id", OtherKey="CarGroupId")]
		public EntitySet<RevenueByCommercialCarSegment> RevenueByCommercialCarSegments
		{
			get
			{
				return this._RevenueByCommercialCarSegments;
			}
			set
			{
				this._RevenueByCommercialCarSegments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CAR_GROUP_LifecycleHoldingCost", Storage="_LifecycleHoldingCosts", ThisKey="car_group_id", OtherKey="CarGroupId")]
		public EntitySet<LifecycleHoldingCost> LifecycleHoldingCosts
		{
			get
			{
				return this._LifecycleHoldingCosts;
			}
			set
			{
				this._LifecycleHoldingCosts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CAR_GROUP_FleetSizeFutureTrend", Storage="_FleetSizeFutureTrends", ThisKey="car_group_id", OtherKey="CarGrpId")]
		public EntitySet<FleetSizeFutureTrend> FleetSizeFutureTrends
		{
			get
			{
				return this._FleetSizeFutureTrends;
			}
			set
			{
				this._FleetSizeFutureTrends.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CAR_GROUP_MonthlyLimitOnCarGroup", Storage="_MonthlyLimitOnCarGroups", ThisKey="car_group_id", OtherKey="CarGroupId")]
		public EntitySet<MonthlyLimitOnCarGroup> MonthlyLimitOnCarGroups
		{
			get
			{
				return this._MonthlyLimitOnCarGroups;
			}
			set
			{
				this._MonthlyLimitOnCarGroups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CAR_GROUP_MARS_CMS_NECESSARY_FLEET", Storage="_MARS_CMS_NECESSARY_FLEETs", ThisKey="car_group_id", OtherKey="CAR_CLASS_ID")]
		public EntitySet<MARS_CMS_NECESSARY_FLEET> MARS_CMS_NECESSARY_FLEETs
		{
			get
			{
				return this._MARS_CMS_NECESSARY_FLEETs;
			}
			set
			{
				this._MARS_CMS_NECESSARY_FLEETs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CAR_GROUP_MaxFleetFactor", Storage="_MaxFleetFactors", ThisKey="car_group_id", OtherKey="CarGroupId")]
		public EntitySet<MaxFleetFactor> MaxFleetFactors
		{
			get
			{
				return this._MaxFleetFactors;
			}
			set
			{
				this._MaxFleetFactors.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CAR_GROUP_AdditionPlanMinMaxValue", Storage="_AdditionPlanMinMaxValues", ThisKey="car_group_id", OtherKey="CarGroupId")]
		public EntitySet<AdditionPlanMinMaxValue> AdditionPlanMinMaxValues
		{
			get
			{
				return this._AdditionPlanMinMaxValues;
			}
			set
			{
				this._AdditionPlanMinMaxValues.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CAR_GROUP_AdditionPlanEntry", Storage="_AdditionPlanEntries", ThisKey="car_group_id", OtherKey="CarGroupId")]
		public EntitySet<AdditionPlanEntry> AdditionPlanEntries
		{
			get
			{
				return this._AdditionPlanEntries;
			}
			set
			{
				this._AdditionPlanEntries.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CAR_CLASS_CAR_GROUP", Storage="_CAR_CLASS", ThisKey="car_class_id", OtherKey="car_class_id", IsForeignKey=true)]
		public CAR_CLASS CAR_CLASS
		{
			get
			{
				return this._CAR_CLASS.Entity;
			}
			set
			{
				CAR_CLASS previousValue = this._CAR_CLASS.Entity;
				if (((previousValue != value) 
							|| (this._CAR_CLASS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CAR_CLASS.Entity = null;
						previousValue.CAR_GROUPs.Remove(this);
					}
					this._CAR_CLASS.Entity = value;
					if ((value != null))
					{
						value.CAR_GROUPs.Add(this);
						this._car_class_id = value.car_class_id;
					}
					else
					{
						this._car_class_id = default(int);
					}
					this.SendPropertyChanged("CAR_CLASS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PlannedDeletionDailies(PlannedDeletionDaily entity)
		{
			this.SendPropertyChanging();
			entity.CAR_GROUP = this;
		}
		
		private void detach_PlannedDeletionDailies(PlannedDeletionDaily entity)
		{
			this.SendPropertyChanging();
			entity.CAR_GROUP = null;
		}
		
		private void attach_PredictionModelUtilizationFactors(PredictionModelUtilizationFactor entity)
		{
			this.SendPropertyChanging();
			entity.CAR_GROUP = this;
		}
		
		private void detach_PredictionModelUtilizationFactors(PredictionModelUtilizationFactor entity)
		{
			this.SendPropertyChanging();
			entity.CAR_GROUP = null;
		}
		
		private void attach_MARS_CMS_FORECASTs(MARS_CMS_FORECAST entity)
		{
			this.SendPropertyChanging();
			entity.CAR_GROUP = this;
		}
		
		private void detach_MARS_CMS_FORECASTs(MARS_CMS_FORECAST entity)
		{
			this.SendPropertyChanging();
			entity.CAR_GROUP = null;
		}
		
		private void attach_CmsToLocationLevelPercents(CmsToLocationLevelPercent entity)
		{
			this.SendPropertyChanging();
			entity.CAR_GROUP = this;
		}
		
		private void detach_CmsToLocationLevelPercents(CmsToLocationLevelPercent entity)
		{
			this.SendPropertyChanging();
			entity.CAR_GROUP = null;
		}
		
		private void attach_FleetHistories(FleetHistory entity)
		{
			this.SendPropertyChanging();
			entity.CAR_GROUP = this;
		}
		
		private void detach_FleetHistories(FleetHistory entity)
		{
			this.SendPropertyChanging();
			entity.CAR_GROUP = null;
		}
		
		private void attach_ResAdditions(ResAddition entity)
		{
			this.SendPropertyChanging();
			entity.CAR_GROUP = this;
		}
		
		private void detach_ResAdditions(ResAddition entity)
		{
			this.SendPropertyChanging();
			entity.CAR_GROUP = null;
		}
		
		private void attach_ResDeletions(ResDeletion entity)
		{
			this.SendPropertyChanging();
			entity.CAR_GROUP = this;
		}
		
		private void detach_ResDeletions(ResDeletion entity)
		{
			this.SendPropertyChanging();
			entity.CAR_GROUP = null;
		}
		
		private void attach_RevenueByCommercialCarSegments(RevenueByCommercialCarSegment entity)
		{
			this.SendPropertyChanging();
			entity.CAR_GROUP = this;
		}
		
		private void detach_RevenueByCommercialCarSegments(RevenueByCommercialCarSegment entity)
		{
			this.SendPropertyChanging();
			entity.CAR_GROUP = null;
		}
		
		private void attach_LifecycleHoldingCosts(LifecycleHoldingCost entity)
		{
			this.SendPropertyChanging();
			entity.CAR_GROUP = this;
		}
		
		private void detach_LifecycleHoldingCosts(LifecycleHoldingCost entity)
		{
			this.SendPropertyChanging();
			entity.CAR_GROUP = null;
		}
		
		private void attach_FleetSizeFutureTrends(FleetSizeFutureTrend entity)
		{
			this.SendPropertyChanging();
			entity.CAR_GROUP = this;
		}
		
		private void detach_FleetSizeFutureTrends(FleetSizeFutureTrend entity)
		{
			this.SendPropertyChanging();
			entity.CAR_GROUP = null;
		}
		
		private void attach_MonthlyLimitOnCarGroups(MonthlyLimitOnCarGroup entity)
		{
			this.SendPropertyChanging();
			entity.CAR_GROUP = this;
		}
		
		private void detach_MonthlyLimitOnCarGroups(MonthlyLimitOnCarGroup entity)
		{
			this.SendPropertyChanging();
			entity.CAR_GROUP = null;
		}
		
		private void attach_MARS_CMS_NECESSARY_FLEETs(MARS_CMS_NECESSARY_FLEET entity)
		{
			this.SendPropertyChanging();
			entity.CAR_GROUP = this;
		}
		
		private void detach_MARS_CMS_NECESSARY_FLEETs(MARS_CMS_NECESSARY_FLEET entity)
		{
			this.SendPropertyChanging();
			entity.CAR_GROUP = null;
		}
		
		private void attach_MaxFleetFactors(MaxFleetFactor entity)
		{
			this.SendPropertyChanging();
			entity.CAR_GROUP = this;
		}
		
		private void detach_MaxFleetFactors(MaxFleetFactor entity)
		{
			this.SendPropertyChanging();
			entity.CAR_GROUP = null;
		}
		
		private void attach_AdditionPlanMinMaxValues(AdditionPlanMinMaxValue entity)
		{
			this.SendPropertyChanging();
			entity.CAR_GROUP = this;
		}
		
		private void detach_AdditionPlanMinMaxValues(AdditionPlanMinMaxValue entity)
		{
			this.SendPropertyChanging();
			entity.CAR_GROUP = null;
		}
		
		private void attach_AdditionPlanEntries(AdditionPlanEntry entity)
		{
			this.SendPropertyChanging();
			entity.CAR_GROUP = this;
		}
		
		private void detach_AdditionPlanEntries(AdditionPlanEntry entity)
		{
			this.SendPropertyChanging();
			entity.CAR_GROUP = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CAR_CLASSES")]
	public partial class CAR_CLASS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _car_class_id;
		
		private string _car_class1;
		
		private int _car_segment_id;
		
		private int _sort_car_class;
		
		private System.Nullable<bool> _IsActive;
		
		private EntitySet<CAR_GROUP> _CAR_GROUPs;
		
		private EntityRef<CAR_SEGMENT> _CAR_SEGMENT;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncar_class_idChanging(int value);
    partial void Oncar_class_idChanged();
    partial void Oncar_class1Changing(string value);
    partial void Oncar_class1Changed();
    partial void Oncar_segment_idChanging(int value);
    partial void Oncar_segment_idChanged();
    partial void Onsort_car_classChanging(int value);
    partial void Onsort_car_classChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    #endregion
		
		public CAR_CLASS()
		{
			this._CAR_GROUPs = new EntitySet<CAR_GROUP>(new Action<CAR_GROUP>(this.attach_CAR_GROUPs), new Action<CAR_GROUP>(this.detach_CAR_GROUPs));
			this._CAR_SEGMENT = default(EntityRef<CAR_SEGMENT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_car_class_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int car_class_id
		{
			get
			{
				return this._car_class_id;
			}
			set
			{
				if ((this._car_class_id != value))
				{
					this.Oncar_class_idChanging(value);
					this.SendPropertyChanging();
					this._car_class_id = value;
					this.SendPropertyChanged("car_class_id");
					this.Oncar_class_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="car_class", Storage="_car_class1", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string car_class1
		{
			get
			{
				return this._car_class1;
			}
			set
			{
				if ((this._car_class1 != value))
				{
					this.Oncar_class1Changing(value);
					this.SendPropertyChanging();
					this._car_class1 = value;
					this.SendPropertyChanged("car_class1");
					this.Oncar_class1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_car_segment_id", DbType="Int NOT NULL")]
		public int car_segment_id
		{
			get
			{
				return this._car_segment_id;
			}
			set
			{
				if ((this._car_segment_id != value))
				{
					if (this._CAR_SEGMENT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncar_segment_idChanging(value);
					this.SendPropertyChanging();
					this._car_segment_id = value;
					this.SendPropertyChanged("car_segment_id");
					this.Oncar_segment_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sort_car_class", DbType="Int NOT NULL")]
		public int sort_car_class
		{
			get
			{
				return this._sort_car_class;
			}
			set
			{
				if ((this._sort_car_class != value))
				{
					this.Onsort_car_classChanging(value);
					this.SendPropertyChanging();
					this._sort_car_class = value;
					this.SendPropertyChanged("sort_car_class");
					this.Onsort_car_classChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CAR_CLASS_CAR_GROUP", Storage="_CAR_GROUPs", ThisKey="car_class_id", OtherKey="car_class_id")]
		public EntitySet<CAR_GROUP> CAR_GROUPs
		{
			get
			{
				return this._CAR_GROUPs;
			}
			set
			{
				this._CAR_GROUPs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CAR_SEGMENT_CAR_CLASS", Storage="_CAR_SEGMENT", ThisKey="car_segment_id", OtherKey="car_segment_id", IsForeignKey=true)]
		public CAR_SEGMENT CAR_SEGMENT
		{
			get
			{
				return this._CAR_SEGMENT.Entity;
			}
			set
			{
				CAR_SEGMENT previousValue = this._CAR_SEGMENT.Entity;
				if (((previousValue != value) 
							|| (this._CAR_SEGMENT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CAR_SEGMENT.Entity = null;
						previousValue.CAR_CLASSes.Remove(this);
					}
					this._CAR_SEGMENT.Entity = value;
					if ((value != null))
					{
						value.CAR_CLASSes.Add(this);
						this._car_segment_id = value.car_segment_id;
					}
					else
					{
						this._car_segment_id = default(int);
					}
					this.SendPropertyChanged("CAR_SEGMENT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CAR_GROUPs(CAR_GROUP entity)
		{
			this.SendPropertyChanging();
			entity.CAR_CLASS = this;
		}
		
		private void detach_CAR_GROUPs(CAR_GROUP entity)
		{
			this.SendPropertyChanging();
			entity.CAR_CLASS = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CAR_SEGMENTS")]
	public partial class CAR_SEGMENT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _car_segment_id;
		
		private string _car_segment1;
		
		private string _country;
		
		private int _sort_car_segment;
		
		private System.Nullable<bool> _IsActive;
		
		private EntitySet<CAR_CLASS> _CAR_CLASSes;
		
		private EntitySet<WeeklyLimitOnCarSegment> _WeeklyLimitOnCarSegments;
		
		private EntitySet<MinCommercialSegment> _MinCommercialSegments;
		
		private EntityRef<COUNTRy> _COUNTRy1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncar_segment_idChanging(int value);
    partial void Oncar_segment_idChanged();
    partial void Oncar_segment1Changing(string value);
    partial void Oncar_segment1Changed();
    partial void OncountryChanging(string value);
    partial void OncountryChanged();
    partial void Onsort_car_segmentChanging(int value);
    partial void Onsort_car_segmentChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    #endregion
		
		public CAR_SEGMENT()
		{
			this._CAR_CLASSes = new EntitySet<CAR_CLASS>(new Action<CAR_CLASS>(this.attach_CAR_CLASSes), new Action<CAR_CLASS>(this.detach_CAR_CLASSes));
			this._WeeklyLimitOnCarSegments = new EntitySet<WeeklyLimitOnCarSegment>(new Action<WeeklyLimitOnCarSegment>(this.attach_WeeklyLimitOnCarSegments), new Action<WeeklyLimitOnCarSegment>(this.detach_WeeklyLimitOnCarSegments));
			this._MinCommercialSegments = new EntitySet<MinCommercialSegment>(new Action<MinCommercialSegment>(this.attach_MinCommercialSegments), new Action<MinCommercialSegment>(this.detach_MinCommercialSegments));
			this._COUNTRy1 = default(EntityRef<COUNTRy>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_car_segment_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int car_segment_id
		{
			get
			{
				return this._car_segment_id;
			}
			set
			{
				if ((this._car_segment_id != value))
				{
					this.Oncar_segment_idChanging(value);
					this.SendPropertyChanging();
					this._car_segment_id = value;
					this.SendPropertyChanged("car_segment_id");
					this.Oncar_segment_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="car_segment", Storage="_car_segment1", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string car_segment1
		{
			get
			{
				return this._car_segment1;
			}
			set
			{
				if ((this._car_segment1 != value))
				{
					this.Oncar_segment1Changing(value);
					this.SendPropertyChanging();
					this._car_segment1 = value;
					this.SendPropertyChanged("car_segment1");
					this.Oncar_segment1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_country", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string country
		{
			get
			{
				return this._country;
			}
			set
			{
				if ((this._country != value))
				{
					if (this._COUNTRy1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncountryChanging(value);
					this.SendPropertyChanging();
					this._country = value;
					this.SendPropertyChanged("country");
					this.OncountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sort_car_segment", DbType="Int NOT NULL")]
		public int sort_car_segment
		{
			get
			{
				return this._sort_car_segment;
			}
			set
			{
				if ((this._sort_car_segment != value))
				{
					this.Onsort_car_segmentChanging(value);
					this.SendPropertyChanging();
					this._sort_car_segment = value;
					this.SendPropertyChanged("sort_car_segment");
					this.Onsort_car_segmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CAR_SEGMENT_CAR_CLASS", Storage="_CAR_CLASSes", ThisKey="car_segment_id", OtherKey="car_segment_id")]
		public EntitySet<CAR_CLASS> CAR_CLASSes
		{
			get
			{
				return this._CAR_CLASSes;
			}
			set
			{
				this._CAR_CLASSes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CAR_SEGMENT_WeeklyLimitOnCarSegment", Storage="_WeeklyLimitOnCarSegments", ThisKey="car_segment_id", OtherKey="CarSegmentId")]
		public EntitySet<WeeklyLimitOnCarSegment> WeeklyLimitOnCarSegments
		{
			get
			{
				return this._WeeklyLimitOnCarSegments;
			}
			set
			{
				this._WeeklyLimitOnCarSegments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CAR_SEGMENT_MinCommercialSegment", Storage="_MinCommercialSegments", ThisKey="car_segment_id", OtherKey="CarSegmentId")]
		public EntitySet<MinCommercialSegment> MinCommercialSegments
		{
			get
			{
				return this._MinCommercialSegments;
			}
			set
			{
				this._MinCommercialSegments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="COUNTRy_CAR_SEGMENT", Storage="_COUNTRy1", ThisKey="country", OtherKey="country1", IsForeignKey=true)]
		public COUNTRy COUNTRy1
		{
			get
			{
				return this._COUNTRy1.Entity;
			}
			set
			{
				COUNTRy previousValue = this._COUNTRy1.Entity;
				if (((previousValue != value) 
							|| (this._COUNTRy1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._COUNTRy1.Entity = null;
						previousValue.CAR_SEGMENTs.Remove(this);
					}
					this._COUNTRy1.Entity = value;
					if ((value != null))
					{
						value.CAR_SEGMENTs.Add(this);
						this._country = value.country1;
					}
					else
					{
						this._country = default(string);
					}
					this.SendPropertyChanged("COUNTRy1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CAR_CLASSes(CAR_CLASS entity)
		{
			this.SendPropertyChanging();
			entity.CAR_SEGMENT = this;
		}
		
		private void detach_CAR_CLASSes(CAR_CLASS entity)
		{
			this.SendPropertyChanging();
			entity.CAR_SEGMENT = null;
		}
		
		private void attach_WeeklyLimitOnCarSegments(WeeklyLimitOnCarSegment entity)
		{
			this.SendPropertyChanging();
			entity.CAR_SEGMENT = this;
		}
		
		private void detach_WeeklyLimitOnCarSegments(WeeklyLimitOnCarSegment entity)
		{
			this.SendPropertyChanging();
			entity.CAR_SEGMENT = null;
		}
		
		private void attach_MinCommercialSegments(MinCommercialSegment entity)
		{
			this.SendPropertyChanging();
			entity.CAR_SEGMENT = this;
		}
		
		private void detach_MinCommercialSegments(MinCommercialSegment entity)
		{
			this.SendPropertyChanging();
			entity.CAR_SEGMENT = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CMS_LOCATION_GROUPS")]
	public partial class CMS_LOCATION_GROUP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _cms_location_group_id;
		
		private string _cms_location_group_code_dw;
		
		private string _cms_location_group1;
		
		private int _cms_pool_id;
		
		private System.Nullable<bool> _IsActive;
		
		private EntitySet<LOCATION> _LOCATIONs;
		
		private EntitySet<MARS_CMS_FORECAST> _MARS_CMS_FORECASTs;
		
		private EntitySet<CmsToLocationLevelPercent> _CmsToLocationLevelPercents;
		
		private EntitySet<FleetSizeFutureTrend> _FleetSizeFutureTrends;
		
		private EntitySet<MARS_CMS_NECESSARY_FLEET> _MARS_CMS_NECESSARY_FLEETs;
		
		private EntityRef<CMS_POOL> _CMS_POOL;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncms_location_group_idChanging(int value);
    partial void Oncms_location_group_idChanged();
    partial void Oncms_location_group_code_dwChanging(string value);
    partial void Oncms_location_group_code_dwChanged();
    partial void Oncms_location_group1Changing(string value);
    partial void Oncms_location_group1Changed();
    partial void Oncms_pool_idChanging(int value);
    partial void Oncms_pool_idChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    #endregion
		
		public CMS_LOCATION_GROUP()
		{
			this._LOCATIONs = new EntitySet<LOCATION>(new Action<LOCATION>(this.attach_LOCATIONs), new Action<LOCATION>(this.detach_LOCATIONs));
			this._MARS_CMS_FORECASTs = new EntitySet<MARS_CMS_FORECAST>(new Action<MARS_CMS_FORECAST>(this.attach_MARS_CMS_FORECASTs), new Action<MARS_CMS_FORECAST>(this.detach_MARS_CMS_FORECASTs));
			this._CmsToLocationLevelPercents = new EntitySet<CmsToLocationLevelPercent>(new Action<CmsToLocationLevelPercent>(this.attach_CmsToLocationLevelPercents), new Action<CmsToLocationLevelPercent>(this.detach_CmsToLocationLevelPercents));
			this._FleetSizeFutureTrends = new EntitySet<FleetSizeFutureTrend>(new Action<FleetSizeFutureTrend>(this.attach_FleetSizeFutureTrends), new Action<FleetSizeFutureTrend>(this.detach_FleetSizeFutureTrends));
			this._MARS_CMS_NECESSARY_FLEETs = new EntitySet<MARS_CMS_NECESSARY_FLEET>(new Action<MARS_CMS_NECESSARY_FLEET>(this.attach_MARS_CMS_NECESSARY_FLEETs), new Action<MARS_CMS_NECESSARY_FLEET>(this.detach_MARS_CMS_NECESSARY_FLEETs));
			this._CMS_POOL = default(EntityRef<CMS_POOL>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cms_location_group_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int cms_location_group_id
		{
			get
			{
				return this._cms_location_group_id;
			}
			set
			{
				if ((this._cms_location_group_id != value))
				{
					this.Oncms_location_group_idChanging(value);
					this.SendPropertyChanging();
					this._cms_location_group_id = value;
					this.SendPropertyChanged("cms_location_group_id");
					this.Oncms_location_group_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cms_location_group_code_dw", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string cms_location_group_code_dw
		{
			get
			{
				return this._cms_location_group_code_dw;
			}
			set
			{
				if ((this._cms_location_group_code_dw != value))
				{
					this.Oncms_location_group_code_dwChanging(value);
					this.SendPropertyChanging();
					this._cms_location_group_code_dw = value;
					this.SendPropertyChanged("cms_location_group_code_dw");
					this.Oncms_location_group_code_dwChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="cms_location_group", Storage="_cms_location_group1", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string cms_location_group1
		{
			get
			{
				return this._cms_location_group1;
			}
			set
			{
				if ((this._cms_location_group1 != value))
				{
					this.Oncms_location_group1Changing(value);
					this.SendPropertyChanging();
					this._cms_location_group1 = value;
					this.SendPropertyChanged("cms_location_group1");
					this.Oncms_location_group1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cms_pool_id", DbType="Int NOT NULL")]
		public int cms_pool_id
		{
			get
			{
				return this._cms_pool_id;
			}
			set
			{
				if ((this._cms_pool_id != value))
				{
					if (this._CMS_POOL.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncms_pool_idChanging(value);
					this.SendPropertyChanging();
					this._cms_pool_id = value;
					this.SendPropertyChanged("cms_pool_id");
					this.Oncms_pool_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CMS_LOCATION_GROUP_LOCATION", Storage="_LOCATIONs", ThisKey="cms_location_group_id", OtherKey="cms_location_group_id")]
		public EntitySet<LOCATION> LOCATIONs
		{
			get
			{
				return this._LOCATIONs;
			}
			set
			{
				this._LOCATIONs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CMS_LOCATION_GROUP_MARS_CMS_FORECAST", Storage="_MARS_CMS_FORECASTs", ThisKey="cms_location_group_id", OtherKey="CMS_LOCATION_GROUP_ID")]
		public EntitySet<MARS_CMS_FORECAST> MARS_CMS_FORECASTs
		{
			get
			{
				return this._MARS_CMS_FORECASTs;
			}
			set
			{
				this._MARS_CMS_FORECASTs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CMS_LOCATION_GROUP_CmsToLocationLevelPercent", Storage="_CmsToLocationLevelPercents", ThisKey="cms_location_group_id", OtherKey="LocationGroupId")]
		public EntitySet<CmsToLocationLevelPercent> CmsToLocationLevelPercents
		{
			get
			{
				return this._CmsToLocationLevelPercents;
			}
			set
			{
				this._CmsToLocationLevelPercents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CMS_LOCATION_GROUP_FleetSizeFutureTrend", Storage="_FleetSizeFutureTrends", ThisKey="cms_location_group_id", OtherKey="LocGrpId")]
		public EntitySet<FleetSizeFutureTrend> FleetSizeFutureTrends
		{
			get
			{
				return this._FleetSizeFutureTrends;
			}
			set
			{
				this._FleetSizeFutureTrends.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CMS_LOCATION_GROUP_MARS_CMS_NECESSARY_FLEET", Storage="_MARS_CMS_NECESSARY_FLEETs", ThisKey="cms_location_group_id", OtherKey="CMS_LOCATION_GROUP_ID")]
		public EntitySet<MARS_CMS_NECESSARY_FLEET> MARS_CMS_NECESSARY_FLEETs
		{
			get
			{
				return this._MARS_CMS_NECESSARY_FLEETs;
			}
			set
			{
				this._MARS_CMS_NECESSARY_FLEETs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CMS_POOL_CMS_LOCATION_GROUP", Storage="_CMS_POOL", ThisKey="cms_pool_id", OtherKey="cms_pool_id", IsForeignKey=true)]
		public CMS_POOL CMS_POOL
		{
			get
			{
				return this._CMS_POOL.Entity;
			}
			set
			{
				CMS_POOL previousValue = this._CMS_POOL.Entity;
				if (((previousValue != value) 
							|| (this._CMS_POOL.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CMS_POOL.Entity = null;
						previousValue.CMS_LOCATION_GROUPs.Remove(this);
					}
					this._CMS_POOL.Entity = value;
					if ((value != null))
					{
						value.CMS_LOCATION_GROUPs.Add(this);
						this._cms_pool_id = value.cms_pool_id;
					}
					else
					{
						this._cms_pool_id = default(int);
					}
					this.SendPropertyChanged("CMS_POOL");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LOCATIONs(LOCATION entity)
		{
			this.SendPropertyChanging();
			entity.CMS_LOCATION_GROUP = this;
		}
		
		private void detach_LOCATIONs(LOCATION entity)
		{
			this.SendPropertyChanging();
			entity.CMS_LOCATION_GROUP = null;
		}
		
		private void attach_MARS_CMS_FORECASTs(MARS_CMS_FORECAST entity)
		{
			this.SendPropertyChanging();
			entity.CMS_LOCATION_GROUP = this;
		}
		
		private void detach_MARS_CMS_FORECASTs(MARS_CMS_FORECAST entity)
		{
			this.SendPropertyChanging();
			entity.CMS_LOCATION_GROUP = null;
		}
		
		private void attach_CmsToLocationLevelPercents(CmsToLocationLevelPercent entity)
		{
			this.SendPropertyChanging();
			entity.CMS_LOCATION_GROUP = this;
		}
		
		private void detach_CmsToLocationLevelPercents(CmsToLocationLevelPercent entity)
		{
			this.SendPropertyChanging();
			entity.CMS_LOCATION_GROUP = null;
		}
		
		private void attach_FleetSizeFutureTrends(FleetSizeFutureTrend entity)
		{
			this.SendPropertyChanging();
			entity.CMS_LOCATION_GROUP = this;
		}
		
		private void detach_FleetSizeFutureTrends(FleetSizeFutureTrend entity)
		{
			this.SendPropertyChanging();
			entity.CMS_LOCATION_GROUP = null;
		}
		
		private void attach_MARS_CMS_NECESSARY_FLEETs(MARS_CMS_NECESSARY_FLEET entity)
		{
			this.SendPropertyChanging();
			entity.CMS_LOCATION_GROUP = this;
		}
		
		private void detach_MARS_CMS_NECESSARY_FLEETs(MARS_CMS_NECESSARY_FLEET entity)
		{
			this.SendPropertyChanging();
			entity.CMS_LOCATION_GROUP = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CMS_POOLS")]
	public partial class CMS_POOL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _cms_pool_id;
		
		private string _cms_pool1;
		
		private string _country;
		
		private System.Nullable<bool> _IsActive;
		
		private EntitySet<CMS_LOCATION_GROUP> _CMS_LOCATION_GROUPs;
		
		private EntityRef<COUNTRy> _COUNTRy1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncms_pool_idChanging(int value);
    partial void Oncms_pool_idChanged();
    partial void Oncms_pool1Changing(string value);
    partial void Oncms_pool1Changed();
    partial void OncountryChanging(string value);
    partial void OncountryChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    #endregion
		
		public CMS_POOL()
		{
			this._CMS_LOCATION_GROUPs = new EntitySet<CMS_LOCATION_GROUP>(new Action<CMS_LOCATION_GROUP>(this.attach_CMS_LOCATION_GROUPs), new Action<CMS_LOCATION_GROUP>(this.detach_CMS_LOCATION_GROUPs));
			this._COUNTRy1 = default(EntityRef<COUNTRy>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cms_pool_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int cms_pool_id
		{
			get
			{
				return this._cms_pool_id;
			}
			set
			{
				if ((this._cms_pool_id != value))
				{
					this.Oncms_pool_idChanging(value);
					this.SendPropertyChanging();
					this._cms_pool_id = value;
					this.SendPropertyChanged("cms_pool_id");
					this.Oncms_pool_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="cms_pool", Storage="_cms_pool1", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string cms_pool1
		{
			get
			{
				return this._cms_pool1;
			}
			set
			{
				if ((this._cms_pool1 != value))
				{
					this.Oncms_pool1Changing(value);
					this.SendPropertyChanging();
					this._cms_pool1 = value;
					this.SendPropertyChanged("cms_pool1");
					this.Oncms_pool1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_country", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string country
		{
			get
			{
				return this._country;
			}
			set
			{
				if ((this._country != value))
				{
					if (this._COUNTRy1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncountryChanging(value);
					this.SendPropertyChanging();
					this._country = value;
					this.SendPropertyChanged("country");
					this.OncountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CMS_POOL_CMS_LOCATION_GROUP", Storage="_CMS_LOCATION_GROUPs", ThisKey="cms_pool_id", OtherKey="cms_pool_id")]
		public EntitySet<CMS_LOCATION_GROUP> CMS_LOCATION_GROUPs
		{
			get
			{
				return this._CMS_LOCATION_GROUPs;
			}
			set
			{
				this._CMS_LOCATION_GROUPs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="COUNTRy_CMS_POOL", Storage="_COUNTRy1", ThisKey="country", OtherKey="country1", IsForeignKey=true)]
		public COUNTRy COUNTRy1
		{
			get
			{
				return this._COUNTRy1.Entity;
			}
			set
			{
				COUNTRy previousValue = this._COUNTRy1.Entity;
				if (((previousValue != value) 
							|| (this._COUNTRy1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._COUNTRy1.Entity = null;
						previousValue.CMS_POOLs.Remove(this);
					}
					this._COUNTRy1.Entity = value;
					if ((value != null))
					{
						value.CMS_POOLs.Add(this);
						this._country = value.country1;
					}
					else
					{
						this._country = default(string);
					}
					this.SendPropertyChanged("COUNTRy1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CMS_LOCATION_GROUPs(CMS_LOCATION_GROUP entity)
		{
			this.SendPropertyChanging();
			entity.CMS_POOL = this;
		}
		
		private void detach_CMS_LOCATION_GROUPs(CMS_LOCATION_GROUP entity)
		{
			this.SendPropertyChanging();
			entity.CMS_POOL = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.COUNTRIES")]
	public partial class COUNTRy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _country1;
		
		private string _country_dw;
		
		private string _country_description;
		
		private bool _active;
		
		private int _CountryId;
		
		private byte _GmtDifference;
		
		private EntitySet<LOCATION> _LOCATIONs;
		
		private EntitySet<CAR_SEGMENT> _CAR_SEGMENTs;
		
		private EntitySet<CMS_POOL> _CMS_POOLs;
		
		private EntitySet<MARS_CMS_FORECAST> _MARS_CMS_FORECASTs;
		
		private EntitySet<OPS_REGION> _OPS_REGIONs;
		
		private EntitySet<FleetSizeFutureTrend> _FleetSizeFutureTrends;
		
		private EntitySet<MARS_CMS_NECESSARY_FLEET> _MARS_CMS_NECESSARY_FLEETs;
		
		private EntitySet<MinCommercialSegmentScenario> _MinCommercialSegmentScenarios;
		
		private EntitySet<MaxFleetFactorScenario> _MaxFleetFactorScenarios;
		
		private EntitySet<AdditionPlan> _AdditionPlans;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncountry1Changing(string value);
    partial void Oncountry1Changed();
    partial void Oncountry_dwChanging(string value);
    partial void Oncountry_dwChanged();
    partial void Oncountry_descriptionChanging(string value);
    partial void Oncountry_descriptionChanged();
    partial void OnactiveChanging(bool value);
    partial void OnactiveChanged();
    partial void OnCountryIdChanging(int value);
    partial void OnCountryIdChanged();
    partial void OnGmtDifferenceChanging(byte value);
    partial void OnGmtDifferenceChanged();
    #endregion
		
		public COUNTRy()
		{
			this._LOCATIONs = new EntitySet<LOCATION>(new Action<LOCATION>(this.attach_LOCATIONs), new Action<LOCATION>(this.detach_LOCATIONs));
			this._CAR_SEGMENTs = new EntitySet<CAR_SEGMENT>(new Action<CAR_SEGMENT>(this.attach_CAR_SEGMENTs), new Action<CAR_SEGMENT>(this.detach_CAR_SEGMENTs));
			this._CMS_POOLs = new EntitySet<CMS_POOL>(new Action<CMS_POOL>(this.attach_CMS_POOLs), new Action<CMS_POOL>(this.detach_CMS_POOLs));
			this._MARS_CMS_FORECASTs = new EntitySet<MARS_CMS_FORECAST>(new Action<MARS_CMS_FORECAST>(this.attach_MARS_CMS_FORECASTs), new Action<MARS_CMS_FORECAST>(this.detach_MARS_CMS_FORECASTs));
			this._OPS_REGIONs = new EntitySet<OPS_REGION>(new Action<OPS_REGION>(this.attach_OPS_REGIONs), new Action<OPS_REGION>(this.detach_OPS_REGIONs));
			this._FleetSizeFutureTrends = new EntitySet<FleetSizeFutureTrend>(new Action<FleetSizeFutureTrend>(this.attach_FleetSizeFutureTrends), new Action<FleetSizeFutureTrend>(this.detach_FleetSizeFutureTrends));
			this._MARS_CMS_NECESSARY_FLEETs = new EntitySet<MARS_CMS_NECESSARY_FLEET>(new Action<MARS_CMS_NECESSARY_FLEET>(this.attach_MARS_CMS_NECESSARY_FLEETs), new Action<MARS_CMS_NECESSARY_FLEET>(this.detach_MARS_CMS_NECESSARY_FLEETs));
			this._MinCommercialSegmentScenarios = new EntitySet<MinCommercialSegmentScenario>(new Action<MinCommercialSegmentScenario>(this.attach_MinCommercialSegmentScenarios), new Action<MinCommercialSegmentScenario>(this.detach_MinCommercialSegmentScenarios));
			this._MaxFleetFactorScenarios = new EntitySet<MaxFleetFactorScenario>(new Action<MaxFleetFactorScenario>(this.attach_MaxFleetFactorScenarios), new Action<MaxFleetFactorScenario>(this.detach_MaxFleetFactorScenarios));
			this._AdditionPlans = new EntitySet<AdditionPlan>(new Action<AdditionPlan>(this.attach_AdditionPlans), new Action<AdditionPlan>(this.detach_AdditionPlans));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="country", Storage="_country1", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string country1
		{
			get
			{
				return this._country1;
			}
			set
			{
				if ((this._country1 != value))
				{
					this.Oncountry1Changing(value);
					this.SendPropertyChanging();
					this._country1 = value;
					this.SendPropertyChanged("country1");
					this.Oncountry1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_country_dw", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string country_dw
		{
			get
			{
				return this._country_dw;
			}
			set
			{
				if ((this._country_dw != value))
				{
					this.Oncountry_dwChanging(value);
					this.SendPropertyChanging();
					this._country_dw = value;
					this.SendPropertyChanged("country_dw");
					this.Oncountry_dwChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_country_description", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string country_description
		{
			get
			{
				return this._country_description;
			}
			set
			{
				if ((this._country_description != value))
				{
					this.Oncountry_descriptionChanging(value);
					this.SendPropertyChanging();
					this._country_description = value;
					this.SendPropertyChanged("country_description");
					this.Oncountry_descriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_active", DbType="Bit NOT NULL")]
		public bool active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryId", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int CountryId
		{
			get
			{
				return this._CountryId;
			}
			set
			{
				if ((this._CountryId != value))
				{
					this.OnCountryIdChanging(value);
					this.SendPropertyChanging();
					this._CountryId = value;
					this.SendPropertyChanged("CountryId");
					this.OnCountryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GmtDifference", DbType="TinyInt NOT NULL")]
		public byte GmtDifference
		{
			get
			{
				return this._GmtDifference;
			}
			set
			{
				if ((this._GmtDifference != value))
				{
					this.OnGmtDifferenceChanging(value);
					this.SendPropertyChanging();
					this._GmtDifference = value;
					this.SendPropertyChanged("GmtDifference");
					this.OnGmtDifferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="COUNTRy_LOCATION", Storage="_LOCATIONs", ThisKey="country1", OtherKey="country")]
		public EntitySet<LOCATION> LOCATIONs
		{
			get
			{
				return this._LOCATIONs;
			}
			set
			{
				this._LOCATIONs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="COUNTRy_CAR_SEGMENT", Storage="_CAR_SEGMENTs", ThisKey="country1", OtherKey="country")]
		public EntitySet<CAR_SEGMENT> CAR_SEGMENTs
		{
			get
			{
				return this._CAR_SEGMENTs;
			}
			set
			{
				this._CAR_SEGMENTs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="COUNTRy_CMS_POOL", Storage="_CMS_POOLs", ThisKey="country1", OtherKey="country")]
		public EntitySet<CMS_POOL> CMS_POOLs
		{
			get
			{
				return this._CMS_POOLs;
			}
			set
			{
				this._CMS_POOLs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="COUNTRy_MARS_CMS_FORECAST", Storage="_MARS_CMS_FORECASTs", ThisKey="country1", OtherKey="COUNTRY")]
		public EntitySet<MARS_CMS_FORECAST> MARS_CMS_FORECASTs
		{
			get
			{
				return this._MARS_CMS_FORECASTs;
			}
			set
			{
				this._MARS_CMS_FORECASTs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="COUNTRy_OPS_REGION", Storage="_OPS_REGIONs", ThisKey="country1", OtherKey="country")]
		public EntitySet<OPS_REGION> OPS_REGIONs
		{
			get
			{
				return this._OPS_REGIONs;
			}
			set
			{
				this._OPS_REGIONs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="COUNTRy_FleetSizeFutureTrend", Storage="_FleetSizeFutureTrends", ThisKey="country1", OtherKey="Country")]
		public EntitySet<FleetSizeFutureTrend> FleetSizeFutureTrends
		{
			get
			{
				return this._FleetSizeFutureTrends;
			}
			set
			{
				this._FleetSizeFutureTrends.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="COUNTRy_MARS_CMS_NECESSARY_FLEET", Storage="_MARS_CMS_NECESSARY_FLEETs", ThisKey="country1", OtherKey="COUNTRY")]
		public EntitySet<MARS_CMS_NECESSARY_FLEET> MARS_CMS_NECESSARY_FLEETs
		{
			get
			{
				return this._MARS_CMS_NECESSARY_FLEETs;
			}
			set
			{
				this._MARS_CMS_NECESSARY_FLEETs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="COUNTRy_MinCommercialSegmentScenario", Storage="_MinCommercialSegmentScenarios", ThisKey="CountryId", OtherKey="CountryId")]
		public EntitySet<MinCommercialSegmentScenario> MinCommercialSegmentScenarios
		{
			get
			{
				return this._MinCommercialSegmentScenarios;
			}
			set
			{
				this._MinCommercialSegmentScenarios.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="COUNTRy_MaxFleetFactorScenario", Storage="_MaxFleetFactorScenarios", ThisKey="CountryId", OtherKey="CountryId")]
		public EntitySet<MaxFleetFactorScenario> MaxFleetFactorScenarios
		{
			get
			{
				return this._MaxFleetFactorScenarios;
			}
			set
			{
				this._MaxFleetFactorScenarios.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="COUNTRy_AdditionPlan", Storage="_AdditionPlans", ThisKey="CountryId", OtherKey="CountryId")]
		public EntitySet<AdditionPlan> AdditionPlans
		{
			get
			{
				return this._AdditionPlans;
			}
			set
			{
				this._AdditionPlans.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LOCATIONs(LOCATION entity)
		{
			this.SendPropertyChanging();
			entity.COUNTRy1 = this;
		}
		
		private void detach_LOCATIONs(LOCATION entity)
		{
			this.SendPropertyChanging();
			entity.COUNTRy1 = null;
		}
		
		private void attach_CAR_SEGMENTs(CAR_SEGMENT entity)
		{
			this.SendPropertyChanging();
			entity.COUNTRy1 = this;
		}
		
		private void detach_CAR_SEGMENTs(CAR_SEGMENT entity)
		{
			this.SendPropertyChanging();
			entity.COUNTRy1 = null;
		}
		
		private void attach_CMS_POOLs(CMS_POOL entity)
		{
			this.SendPropertyChanging();
			entity.COUNTRy1 = this;
		}
		
		private void detach_CMS_POOLs(CMS_POOL entity)
		{
			this.SendPropertyChanging();
			entity.COUNTRy1 = null;
		}
		
		private void attach_MARS_CMS_FORECASTs(MARS_CMS_FORECAST entity)
		{
			this.SendPropertyChanging();
			entity.COUNTRy1 = this;
		}
		
		private void detach_MARS_CMS_FORECASTs(MARS_CMS_FORECAST entity)
		{
			this.SendPropertyChanging();
			entity.COUNTRy1 = null;
		}
		
		private void attach_OPS_REGIONs(OPS_REGION entity)
		{
			this.SendPropertyChanging();
			entity.COUNTRy1 = this;
		}
		
		private void detach_OPS_REGIONs(OPS_REGION entity)
		{
			this.SendPropertyChanging();
			entity.COUNTRy1 = null;
		}
		
		private void attach_FleetSizeFutureTrends(FleetSizeFutureTrend entity)
		{
			this.SendPropertyChanging();
			entity.COUNTRy1 = this;
		}
		
		private void detach_FleetSizeFutureTrends(FleetSizeFutureTrend entity)
		{
			this.SendPropertyChanging();
			entity.COUNTRy1 = null;
		}
		
		private void attach_MARS_CMS_NECESSARY_FLEETs(MARS_CMS_NECESSARY_FLEET entity)
		{
			this.SendPropertyChanging();
			entity.COUNTRy1 = this;
		}
		
		private void detach_MARS_CMS_NECESSARY_FLEETs(MARS_CMS_NECESSARY_FLEET entity)
		{
			this.SendPropertyChanging();
			entity.COUNTRy1 = null;
		}
		
		private void attach_MinCommercialSegmentScenarios(MinCommercialSegmentScenario entity)
		{
			this.SendPropertyChanging();
			entity.COUNTRy = this;
		}
		
		private void detach_MinCommercialSegmentScenarios(MinCommercialSegmentScenario entity)
		{
			this.SendPropertyChanging();
			entity.COUNTRy = null;
		}
		
		private void attach_MaxFleetFactorScenarios(MaxFleetFactorScenario entity)
		{
			this.SendPropertyChanging();
			entity.COUNTRy = this;
		}
		
		private void detach_MaxFleetFactorScenarios(MaxFleetFactorScenario entity)
		{
			this.SendPropertyChanging();
			entity.COUNTRy = null;
		}
		
		private void attach_AdditionPlans(AdditionPlan entity)
		{
			this.SendPropertyChanging();
			entity.COUNTRy = this;
		}
		
		private void detach_AdditionPlans(AdditionPlan entity)
		{
			this.SendPropertyChanging();
			entity.COUNTRy = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MARS_CMS_FORECAST")]
	public partial class MARS_CMS_FORECAST : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.DateTime _REP_DATE;
		
		private string _COUNTRY;
		
		private int _CMS_LOCATION_GROUP_ID;
		
		private int _CAR_CLASS_ID;
		
		private System.Nullable<decimal> _CONSTRAINED;
		
		private System.Nullable<decimal> _UNCONSTRAINED;
		
		private System.Nullable<decimal> _FLEET;
		
		private System.Nullable<decimal> _RESERVATIONS_BOOKED;
		
		private System.Nullable<decimal> _CURRENT_ONRENT;
		
		private System.Nullable<decimal> _FORECASTED_RETURNS;
		
		private System.Nullable<decimal> _ONRENT_LY;
		
		private System.Nullable<decimal> _AVAILABLE_FLEET;
		
		private System.Nullable<decimal> _OPERATIONAL_FLEET;
		
		private System.Nullable<decimal> _OPERATIONAL_FLEET_S1;
		
		private System.Nullable<decimal> _OPERATIONAL_FLEET_S2;
		
		private System.Nullable<decimal> _OPERATIONAL_FLEET_S3;
		
		private System.Nullable<decimal> _OPERATIONAL_FLEET_AV;
		
		private System.Nullable<decimal> _TOTAL_FLEET;
		
		private int _MarsCmsForecastId;
		
		private EntityRef<CAR_GROUP> _CAR_GROUP;
		
		private EntityRef<CMS_LOCATION_GROUP> _CMS_LOCATION_GROUP;
		
		private EntityRef<COUNTRy> _COUNTRy1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnREP_DATEChanging(System.DateTime value);
    partial void OnREP_DATEChanged();
    partial void OnCOUNTRYChanging(string value);
    partial void OnCOUNTRYChanged();
    partial void OnCMS_LOCATION_GROUP_IDChanging(int value);
    partial void OnCMS_LOCATION_GROUP_IDChanged();
    partial void OnCAR_CLASS_IDChanging(int value);
    partial void OnCAR_CLASS_IDChanged();
    partial void OnCONSTRAINEDChanging(System.Nullable<decimal> value);
    partial void OnCONSTRAINEDChanged();
    partial void OnUNCONSTRAINEDChanging(System.Nullable<decimal> value);
    partial void OnUNCONSTRAINEDChanged();
    partial void OnFLEETChanging(System.Nullable<decimal> value);
    partial void OnFLEETChanged();
    partial void OnRESERVATIONS_BOOKEDChanging(System.Nullable<decimal> value);
    partial void OnRESERVATIONS_BOOKEDChanged();
    partial void OnCURRENT_ONRENTChanging(System.Nullable<decimal> value);
    partial void OnCURRENT_ONRENTChanged();
    partial void OnFORECASTED_RETURNSChanging(System.Nullable<decimal> value);
    partial void OnFORECASTED_RETURNSChanged();
    partial void OnONRENT_LYChanging(System.Nullable<decimal> value);
    partial void OnONRENT_LYChanged();
    partial void OnAVAILABLE_FLEETChanging(System.Nullable<decimal> value);
    partial void OnAVAILABLE_FLEETChanged();
    partial void OnOPERATIONAL_FLEETChanging(System.Nullable<decimal> value);
    partial void OnOPERATIONAL_FLEETChanged();
    partial void OnOPERATIONAL_FLEET_S1Changing(System.Nullable<decimal> value);
    partial void OnOPERATIONAL_FLEET_S1Changed();
    partial void OnOPERATIONAL_FLEET_S2Changing(System.Nullable<decimal> value);
    partial void OnOPERATIONAL_FLEET_S2Changed();
    partial void OnOPERATIONAL_FLEET_S3Changing(System.Nullable<decimal> value);
    partial void OnOPERATIONAL_FLEET_S3Changed();
    partial void OnOPERATIONAL_FLEET_AVChanging(System.Nullable<decimal> value);
    partial void OnOPERATIONAL_FLEET_AVChanged();
    partial void OnTOTAL_FLEETChanging(System.Nullable<decimal> value);
    partial void OnTOTAL_FLEETChanged();
    partial void OnMarsCmsForecastIdChanging(int value);
    partial void OnMarsCmsForecastIdChanged();
    #endregion
		
		public MARS_CMS_FORECAST()
		{
			this._CAR_GROUP = default(EntityRef<CAR_GROUP>);
			this._CMS_LOCATION_GROUP = default(EntityRef<CMS_LOCATION_GROUP>);
			this._COUNTRy1 = default(EntityRef<COUNTRy>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_REP_DATE", DbType="DateTime NOT NULL")]
		public System.DateTime REP_DATE
		{
			get
			{
				return this._REP_DATE;
			}
			set
			{
				if ((this._REP_DATE != value))
				{
					this.OnREP_DATEChanging(value);
					this.SendPropertyChanging();
					this._REP_DATE = value;
					this.SendPropertyChanged("REP_DATE");
					this.OnREP_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COUNTRY", DbType="VarChar(10)")]
		public string COUNTRY
		{
			get
			{
				return this._COUNTRY;
			}
			set
			{
				if ((this._COUNTRY != value))
				{
					if (this._COUNTRy1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCOUNTRYChanging(value);
					this.SendPropertyChanging();
					this._COUNTRY = value;
					this.SendPropertyChanged("COUNTRY");
					this.OnCOUNTRYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CMS_LOCATION_GROUP_ID", DbType="Int NOT NULL")]
		public int CMS_LOCATION_GROUP_ID
		{
			get
			{
				return this._CMS_LOCATION_GROUP_ID;
			}
			set
			{
				if ((this._CMS_LOCATION_GROUP_ID != value))
				{
					if (this._CMS_LOCATION_GROUP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCMS_LOCATION_GROUP_IDChanging(value);
					this.SendPropertyChanging();
					this._CMS_LOCATION_GROUP_ID = value;
					this.SendPropertyChanged("CMS_LOCATION_GROUP_ID");
					this.OnCMS_LOCATION_GROUP_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CAR_CLASS_ID", DbType="Int NOT NULL")]
		public int CAR_CLASS_ID
		{
			get
			{
				return this._CAR_CLASS_ID;
			}
			set
			{
				if ((this._CAR_CLASS_ID != value))
				{
					if (this._CAR_GROUP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCAR_CLASS_IDChanging(value);
					this.SendPropertyChanging();
					this._CAR_CLASS_ID = value;
					this.SendPropertyChanged("CAR_CLASS_ID");
					this.OnCAR_CLASS_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CONSTRAINED", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> CONSTRAINED
		{
			get
			{
				return this._CONSTRAINED;
			}
			set
			{
				if ((this._CONSTRAINED != value))
				{
					this.OnCONSTRAINEDChanging(value);
					this.SendPropertyChanging();
					this._CONSTRAINED = value;
					this.SendPropertyChanged("CONSTRAINED");
					this.OnCONSTRAINEDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UNCONSTRAINED", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> UNCONSTRAINED
		{
			get
			{
				return this._UNCONSTRAINED;
			}
			set
			{
				if ((this._UNCONSTRAINED != value))
				{
					this.OnUNCONSTRAINEDChanging(value);
					this.SendPropertyChanging();
					this._UNCONSTRAINED = value;
					this.SendPropertyChanged("UNCONSTRAINED");
					this.OnUNCONSTRAINEDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FLEET", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> FLEET
		{
			get
			{
				return this._FLEET;
			}
			set
			{
				if ((this._FLEET != value))
				{
					this.OnFLEETChanging(value);
					this.SendPropertyChanging();
					this._FLEET = value;
					this.SendPropertyChanged("FLEET");
					this.OnFLEETChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RESERVATIONS_BOOKED", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> RESERVATIONS_BOOKED
		{
			get
			{
				return this._RESERVATIONS_BOOKED;
			}
			set
			{
				if ((this._RESERVATIONS_BOOKED != value))
				{
					this.OnRESERVATIONS_BOOKEDChanging(value);
					this.SendPropertyChanging();
					this._RESERVATIONS_BOOKED = value;
					this.SendPropertyChanged("RESERVATIONS_BOOKED");
					this.OnRESERVATIONS_BOOKEDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CURRENT_ONRENT", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> CURRENT_ONRENT
		{
			get
			{
				return this._CURRENT_ONRENT;
			}
			set
			{
				if ((this._CURRENT_ONRENT != value))
				{
					this.OnCURRENT_ONRENTChanging(value);
					this.SendPropertyChanging();
					this._CURRENT_ONRENT = value;
					this.SendPropertyChanged("CURRENT_ONRENT");
					this.OnCURRENT_ONRENTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FORECASTED_RETURNS", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> FORECASTED_RETURNS
		{
			get
			{
				return this._FORECASTED_RETURNS;
			}
			set
			{
				if ((this._FORECASTED_RETURNS != value))
				{
					this.OnFORECASTED_RETURNSChanging(value);
					this.SendPropertyChanging();
					this._FORECASTED_RETURNS = value;
					this.SendPropertyChanged("FORECASTED_RETURNS");
					this.OnFORECASTED_RETURNSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ONRENT_LY", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> ONRENT_LY
		{
			get
			{
				return this._ONRENT_LY;
			}
			set
			{
				if ((this._ONRENT_LY != value))
				{
					this.OnONRENT_LYChanging(value);
					this.SendPropertyChanging();
					this._ONRENT_LY = value;
					this.SendPropertyChanged("ONRENT_LY");
					this.OnONRENT_LYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AVAILABLE_FLEET", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> AVAILABLE_FLEET
		{
			get
			{
				return this._AVAILABLE_FLEET;
			}
			set
			{
				if ((this._AVAILABLE_FLEET != value))
				{
					this.OnAVAILABLE_FLEETChanging(value);
					this.SendPropertyChanging();
					this._AVAILABLE_FLEET = value;
					this.SendPropertyChanged("AVAILABLE_FLEET");
					this.OnAVAILABLE_FLEETChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OPERATIONAL_FLEET", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> OPERATIONAL_FLEET
		{
			get
			{
				return this._OPERATIONAL_FLEET;
			}
			set
			{
				if ((this._OPERATIONAL_FLEET != value))
				{
					this.OnOPERATIONAL_FLEETChanging(value);
					this.SendPropertyChanging();
					this._OPERATIONAL_FLEET = value;
					this.SendPropertyChanged("OPERATIONAL_FLEET");
					this.OnOPERATIONAL_FLEETChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OPERATIONAL_FLEET_S1", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> OPERATIONAL_FLEET_S1
		{
			get
			{
				return this._OPERATIONAL_FLEET_S1;
			}
			set
			{
				if ((this._OPERATIONAL_FLEET_S1 != value))
				{
					this.OnOPERATIONAL_FLEET_S1Changing(value);
					this.SendPropertyChanging();
					this._OPERATIONAL_FLEET_S1 = value;
					this.SendPropertyChanged("OPERATIONAL_FLEET_S1");
					this.OnOPERATIONAL_FLEET_S1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OPERATIONAL_FLEET_S2", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> OPERATIONAL_FLEET_S2
		{
			get
			{
				return this._OPERATIONAL_FLEET_S2;
			}
			set
			{
				if ((this._OPERATIONAL_FLEET_S2 != value))
				{
					this.OnOPERATIONAL_FLEET_S2Changing(value);
					this.SendPropertyChanging();
					this._OPERATIONAL_FLEET_S2 = value;
					this.SendPropertyChanged("OPERATIONAL_FLEET_S2");
					this.OnOPERATIONAL_FLEET_S2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OPERATIONAL_FLEET_S3", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> OPERATIONAL_FLEET_S3
		{
			get
			{
				return this._OPERATIONAL_FLEET_S3;
			}
			set
			{
				if ((this._OPERATIONAL_FLEET_S3 != value))
				{
					this.OnOPERATIONAL_FLEET_S3Changing(value);
					this.SendPropertyChanging();
					this._OPERATIONAL_FLEET_S3 = value;
					this.SendPropertyChanged("OPERATIONAL_FLEET_S3");
					this.OnOPERATIONAL_FLEET_S3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OPERATIONAL_FLEET_AV", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> OPERATIONAL_FLEET_AV
		{
			get
			{
				return this._OPERATIONAL_FLEET_AV;
			}
			set
			{
				if ((this._OPERATIONAL_FLEET_AV != value))
				{
					this.OnOPERATIONAL_FLEET_AVChanging(value);
					this.SendPropertyChanging();
					this._OPERATIONAL_FLEET_AV = value;
					this.SendPropertyChanged("OPERATIONAL_FLEET_AV");
					this.OnOPERATIONAL_FLEET_AVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TOTAL_FLEET", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> TOTAL_FLEET
		{
			get
			{
				return this._TOTAL_FLEET;
			}
			set
			{
				if ((this._TOTAL_FLEET != value))
				{
					this.OnTOTAL_FLEETChanging(value);
					this.SendPropertyChanging();
					this._TOTAL_FLEET = value;
					this.SendPropertyChanged("TOTAL_FLEET");
					this.OnTOTAL_FLEETChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarsCmsForecastId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MarsCmsForecastId
		{
			get
			{
				return this._MarsCmsForecastId;
			}
			set
			{
				if ((this._MarsCmsForecastId != value))
				{
					this.OnMarsCmsForecastIdChanging(value);
					this.SendPropertyChanging();
					this._MarsCmsForecastId = value;
					this.SendPropertyChanged("MarsCmsForecastId");
					this.OnMarsCmsForecastIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CAR_GROUP_MARS_CMS_FORECAST", Storage="_CAR_GROUP", ThisKey="CAR_CLASS_ID", OtherKey="car_group_id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public CAR_GROUP CAR_GROUP
		{
			get
			{
				return this._CAR_GROUP.Entity;
			}
			set
			{
				CAR_GROUP previousValue = this._CAR_GROUP.Entity;
				if (((previousValue != value) 
							|| (this._CAR_GROUP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CAR_GROUP.Entity = null;
						previousValue.MARS_CMS_FORECASTs.Remove(this);
					}
					this._CAR_GROUP.Entity = value;
					if ((value != null))
					{
						value.MARS_CMS_FORECASTs.Add(this);
						this._CAR_CLASS_ID = value.car_group_id;
					}
					else
					{
						this._CAR_CLASS_ID = default(int);
					}
					this.SendPropertyChanged("CAR_GROUP");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CMS_LOCATION_GROUP_MARS_CMS_FORECAST", Storage="_CMS_LOCATION_GROUP", ThisKey="CMS_LOCATION_GROUP_ID", OtherKey="cms_location_group_id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public CMS_LOCATION_GROUP CMS_LOCATION_GROUP
		{
			get
			{
				return this._CMS_LOCATION_GROUP.Entity;
			}
			set
			{
				CMS_LOCATION_GROUP previousValue = this._CMS_LOCATION_GROUP.Entity;
				if (((previousValue != value) 
							|| (this._CMS_LOCATION_GROUP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CMS_LOCATION_GROUP.Entity = null;
						previousValue.MARS_CMS_FORECASTs.Remove(this);
					}
					this._CMS_LOCATION_GROUP.Entity = value;
					if ((value != null))
					{
						value.MARS_CMS_FORECASTs.Add(this);
						this._CMS_LOCATION_GROUP_ID = value.cms_location_group_id;
					}
					else
					{
						this._CMS_LOCATION_GROUP_ID = default(int);
					}
					this.SendPropertyChanged("CMS_LOCATION_GROUP");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="COUNTRy_MARS_CMS_FORECAST", Storage="_COUNTRy1", ThisKey="COUNTRY", OtherKey="country1", IsForeignKey=true)]
		public COUNTRy COUNTRy1
		{
			get
			{
				return this._COUNTRy1.Entity;
			}
			set
			{
				COUNTRy previousValue = this._COUNTRy1.Entity;
				if (((previousValue != value) 
							|| (this._COUNTRy1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._COUNTRy1.Entity = null;
						previousValue.MARS_CMS_FORECASTs.Remove(this);
					}
					this._COUNTRy1.Entity = value;
					if ((value != null))
					{
						value.MARS_CMS_FORECASTs.Add(this);
						this._COUNTRY = value.country1;
					}
					else
					{
						this._COUNTRY = default(string);
					}
					this.SendPropertyChanged("COUNTRy1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.IsoWeekOfYear")]
	public partial class IsoWeekOfYear : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IsoWeekOfYearId;
		
		private System.DateTime _Day;
		
		private byte _WeekOfYear;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIsoWeekOfYearIdChanging(int value);
    partial void OnIsoWeekOfYearIdChanged();
    partial void OnDayChanging(System.DateTime value);
    partial void OnDayChanged();
    partial void OnWeekOfYearChanging(byte value);
    partial void OnWeekOfYearChanged();
    #endregion
		
		public IsoWeekOfYear()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsoWeekOfYearId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IsoWeekOfYearId
		{
			get
			{
				return this._IsoWeekOfYearId;
			}
			set
			{
				if ((this._IsoWeekOfYearId != value))
				{
					this.OnIsoWeekOfYearIdChanging(value);
					this.SendPropertyChanging();
					this._IsoWeekOfYearId = value;
					this.SendPropertyChanged("IsoWeekOfYearId");
					this.OnIsoWeekOfYearIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Day", DbType="Date NOT NULL")]
		public System.DateTime Day
		{
			get
			{
				return this._Day;
			}
			set
			{
				if ((this._Day != value))
				{
					this.OnDayChanging(value);
					this.SendPropertyChanging();
					this._Day = value;
					this.SendPropertyChanged("Day");
					this.OnDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeekOfYear", DbType="TinyInt NOT NULL")]
		public byte WeekOfYear
		{
			get
			{
				return this._WeekOfYear;
			}
			set
			{
				if ((this._WeekOfYear != value))
				{
					this.OnWeekOfYearChanging(value);
					this.SendPropertyChanging();
					this._WeekOfYear = value;
					this.SendPropertyChanged("WeekOfYear");
					this.OnWeekOfYearChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Fao.CommercialCarSegment")]
	public partial class CommercialCarSegment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CommercialCarSegmentId;
		
		private string _Name;
		
		private string _Code;
		
		private EntitySet<RevenueByCommercialCarSegment> _RevenueByCommercialCarSegments;
		
		private EntitySet<MinCommercialSegment> _MinCommercialSegments;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCommercialCarSegmentIdChanging(int value);
    partial void OnCommercialCarSegmentIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    #endregion
		
		public CommercialCarSegment()
		{
			this._RevenueByCommercialCarSegments = new EntitySet<RevenueByCommercialCarSegment>(new Action<RevenueByCommercialCarSegment>(this.attach_RevenueByCommercialCarSegments), new Action<RevenueByCommercialCarSegment>(this.detach_RevenueByCommercialCarSegments));
			this._MinCommercialSegments = new EntitySet<MinCommercialSegment>(new Action<MinCommercialSegment>(this.attach_MinCommercialSegments), new Action<MinCommercialSegment>(this.detach_MinCommercialSegments));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommercialCarSegmentId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CommercialCarSegmentId
		{
			get
			{
				return this._CommercialCarSegmentId;
			}
			set
			{
				if ((this._CommercialCarSegmentId != value))
				{
					this.OnCommercialCarSegmentIdChanging(value);
					this.SendPropertyChanging();
					this._CommercialCarSegmentId = value;
					this.SendPropertyChanged("CommercialCarSegmentId");
					this.OnCommercialCarSegmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(50)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CommercialCarSegment_RevenueByCommercialCarSegment", Storage="_RevenueByCommercialCarSegments", ThisKey="CommercialCarSegmentId", OtherKey="CommercialCarSegmentId")]
		public EntitySet<RevenueByCommercialCarSegment> RevenueByCommercialCarSegments
		{
			get
			{
				return this._RevenueByCommercialCarSegments;
			}
			set
			{
				this._RevenueByCommercialCarSegments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CommercialCarSegment_MinCommercialSegment", Storage="_MinCommercialSegments", ThisKey="CommercialCarSegmentId", OtherKey="CommercialCarSegmentId")]
		public EntitySet<MinCommercialSegment> MinCommercialSegments
		{
			get
			{
				return this._MinCommercialSegments;
			}
			set
			{
				this._MinCommercialSegments.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RevenueByCommercialCarSegments(RevenueByCommercialCarSegment entity)
		{
			this.SendPropertyChanging();
			entity.CommercialCarSegment = this;
		}
		
		private void detach_RevenueByCommercialCarSegments(RevenueByCommercialCarSegment entity)
		{
			this.SendPropertyChanging();
			entity.CommercialCarSegment = null;
		}
		
		private void attach_MinCommercialSegments(MinCommercialSegment entity)
		{
			this.SendPropertyChanging();
			entity.CommercialCarSegment = this;
		}
		
		private void detach_MinCommercialSegments(MinCommercialSegment entity)
		{
			this.SendPropertyChanging();
			entity.CommercialCarSegment = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Fao.CmsToLocationLevelPercent")]
	public partial class CmsToLocationLevelPercent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CmsToLocationLevelPercentId;
		
		private int _CarGroupId;
		
		private int _LocationId;
		
		private int _LocationGroupId;
		
		private double _PercentVehiclesAllocated;
		
		private EntityRef<CAR_GROUP> _CAR_GROUP;
		
		private EntityRef<CMS_LOCATION_GROUP> _CMS_LOCATION_GROUP;
		
		private EntityRef<LOCATION> _LOCATION;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCmsToLocationLevelPercentIdChanging(int value);
    partial void OnCmsToLocationLevelPercentIdChanged();
    partial void OnCarGroupIdChanging(int value);
    partial void OnCarGroupIdChanged();
    partial void OnLocationIdChanging(int value);
    partial void OnLocationIdChanged();
    partial void OnLocationGroupIdChanging(int value);
    partial void OnLocationGroupIdChanged();
    partial void OnPercentVehiclesAllocatedChanging(double value);
    partial void OnPercentVehiclesAllocatedChanged();
    #endregion
		
		public CmsToLocationLevelPercent()
		{
			this._CAR_GROUP = default(EntityRef<CAR_GROUP>);
			this._CMS_LOCATION_GROUP = default(EntityRef<CMS_LOCATION_GROUP>);
			this._LOCATION = default(EntityRef<LOCATION>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CmsToLocationLevelPercentId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CmsToLocationLevelPercentId
		{
			get
			{
				return this._CmsToLocationLevelPercentId;
			}
			set
			{
				if ((this._CmsToLocationLevelPercentId != value))
				{
					this.OnCmsToLocationLevelPercentIdChanging(value);
					this.SendPropertyChanging();
					this._CmsToLocationLevelPercentId = value;
					this.SendPropertyChanged("CmsToLocationLevelPercentId");
					this.OnCmsToLocationLevelPercentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarGroupId", DbType="Int NOT NULL")]
		public int CarGroupId
		{
			get
			{
				return this._CarGroupId;
			}
			set
			{
				if ((this._CarGroupId != value))
				{
					if (this._CAR_GROUP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCarGroupIdChanging(value);
					this.SendPropertyChanging();
					this._CarGroupId = value;
					this.SendPropertyChanged("CarGroupId");
					this.OnCarGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationId", DbType="Int NOT NULL")]
		public int LocationId
		{
			get
			{
				return this._LocationId;
			}
			set
			{
				if ((this._LocationId != value))
				{
					if (this._LOCATION.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLocationIdChanging(value);
					this.SendPropertyChanging();
					this._LocationId = value;
					this.SendPropertyChanged("LocationId");
					this.OnLocationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationGroupId", DbType="Int NOT NULL")]
		public int LocationGroupId
		{
			get
			{
				return this._LocationGroupId;
			}
			set
			{
				if ((this._LocationGroupId != value))
				{
					if (this._CMS_LOCATION_GROUP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLocationGroupIdChanging(value);
					this.SendPropertyChanging();
					this._LocationGroupId = value;
					this.SendPropertyChanged("LocationGroupId");
					this.OnLocationGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PercentVehiclesAllocated", DbType="Float NOT NULL")]
		public double PercentVehiclesAllocated
		{
			get
			{
				return this._PercentVehiclesAllocated;
			}
			set
			{
				if ((this._PercentVehiclesAllocated != value))
				{
					this.OnPercentVehiclesAllocatedChanging(value);
					this.SendPropertyChanging();
					this._PercentVehiclesAllocated = value;
					this.SendPropertyChanged("PercentVehiclesAllocated");
					this.OnPercentVehiclesAllocatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CAR_GROUP_CmsToLocationLevelPercent", Storage="_CAR_GROUP", ThisKey="CarGroupId", OtherKey="car_group_id", IsForeignKey=true)]
		public CAR_GROUP CAR_GROUP
		{
			get
			{
				return this._CAR_GROUP.Entity;
			}
			set
			{
				CAR_GROUP previousValue = this._CAR_GROUP.Entity;
				if (((previousValue != value) 
							|| (this._CAR_GROUP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CAR_GROUP.Entity = null;
						previousValue.CmsToLocationLevelPercents.Remove(this);
					}
					this._CAR_GROUP.Entity = value;
					if ((value != null))
					{
						value.CmsToLocationLevelPercents.Add(this);
						this._CarGroupId = value.car_group_id;
					}
					else
					{
						this._CarGroupId = default(int);
					}
					this.SendPropertyChanged("CAR_GROUP");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CMS_LOCATION_GROUP_CmsToLocationLevelPercent", Storage="_CMS_LOCATION_GROUP", ThisKey="LocationGroupId", OtherKey="cms_location_group_id", IsForeignKey=true)]
		public CMS_LOCATION_GROUP CMS_LOCATION_GROUP
		{
			get
			{
				return this._CMS_LOCATION_GROUP.Entity;
			}
			set
			{
				CMS_LOCATION_GROUP previousValue = this._CMS_LOCATION_GROUP.Entity;
				if (((previousValue != value) 
							|| (this._CMS_LOCATION_GROUP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CMS_LOCATION_GROUP.Entity = null;
						previousValue.CmsToLocationLevelPercents.Remove(this);
					}
					this._CMS_LOCATION_GROUP.Entity = value;
					if ((value != null))
					{
						value.CmsToLocationLevelPercents.Add(this);
						this._LocationGroupId = value.cms_location_group_id;
					}
					else
					{
						this._LocationGroupId = default(int);
					}
					this.SendPropertyChanged("CMS_LOCATION_GROUP");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOCATION_CmsToLocationLevelPercent", Storage="_LOCATION", ThisKey="LocationId", OtherKey="dim_Location_id", IsForeignKey=true)]
		public LOCATION LOCATION
		{
			get
			{
				return this._LOCATION.Entity;
			}
			set
			{
				LOCATION previousValue = this._LOCATION.Entity;
				if (((previousValue != value) 
							|| (this._LOCATION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOCATION.Entity = null;
						previousValue.CmsToLocationLevelPercents.Remove(this);
					}
					this._LOCATION.Entity = value;
					if ((value != null))
					{
						value.CmsToLocationLevelPercents.Add(this);
						this._LocationId = value.dim_Location_id;
					}
					else
					{
						this._LocationId = default(int);
					}
					this.SendPropertyChanged("LOCATION");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FleetHistory")]
	public partial class FleetHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FleetHistoryId;
		
		private System.DateTime _Timestamp;
		
		private int _CarGroupId;
		
		private int _LocationId;
		
		private byte _FleetTypeId;
		
		private double _AvgTotal;
		
		private int _MinTotal;
		
		private int _MaxTotal;
		
		private int _PeakTotal;
		
		private int _TroughTotal;
		
		private double _AvgBd;
		
		private int _MinBd;
		
		private int _MaxBd;
		
		private int _PeakBd;
		
		private int _TroughBd;
		
		private double _AvgCu;
		
		private int _MinCu;
		
		private int _MaxCu;
		
		private int _PeakCu;
		
		private int _TroughCu;
		
		private double _AvgFs;
		
		private int _MinFs;
		
		private int _MaxFs;
		
		private int _PeakFs;
		
		private int _TroughFs;
		
		private double _AvgHa;
		
		private int _MinHa;
		
		private int _MaxHa;
		
		private int _PeakHa;
		
		private int _TroughHa;
		
		private double _AvgHl;
		
		private int _MinHl;
		
		private int _MaxHl;
		
		private int _PeakHl;
		
		private int _TroughHl;
		
		private double _AvgLl;
		
		private int _MinLl;
		
		private int _MaxLl;
		
		private int _PeakLl;
		
		private int _TroughLl;
		
		private double _AvgMm;
		
		private int _MinMm;
		
		private int _MaxMm;
		
		private int _PeakMm;
		
		private int _TroughMm;
		
		private double _AvgNc;
		
		private int _MinNc;
		
		private int _MaxNc;
		
		private int _PeakNc;
		
		private int _TroughNc;
		
		private double _AvgPl;
		
		private int _MinPl;
		
		private int _MaxPl;
		
		private int _PeakPl;
		
		private int _TroughPl;
		
		private double _AvgRl;
		
		private int _MinRl;
		
		private int _MaxRl;
		
		private int _PeakRl;
		
		private int _TroughRl;
		
		private double _AvgRp;
		
		private int _MinRp;
		
		private int _MaxRp;
		
		private int _PeakRp;
		
		private int _TroughRp;
		
		private double _AvgIdle;
		
		private int _MinIdle;
		
		private int _MaxIdle;
		
		private int _PeakIdle;
		
		private int _TroughIdle;
		
		private double _AvgSu;
		
		private int _MinSu;
		
		private int _MaxSu;
		
		private int _PeakSu;
		
		private int _TroughSu;
		
		private double _AvgSv;
		
		private int _MinSv;
		
		private int _MaxSv;
		
		private int _PeakSv;
		
		private int _TroughSv;
		
		private double _AvgTb;
		
		private int _MinTb;
		
		private int _MaxTb;
		
		private int _PeakTb;
		
		private int _TroughTb;
		
		private double _AvgTc;
		
		private int _MinTc;
		
		private int _MaxTc;
		
		private int _PeakTc;
		
		private int _TroughTc;
		
		private double _AvgTn;
		
		private int _MinTn;
		
		private int _MaxTn;
		
		private int _PeakTn;
		
		private int _TroughTn;
		
		private double _AvgTw;
		
		private int _MinTw;
		
		private int _MaxTw;
		
		private int _PeakTw;
		
		private int _TroughTw;
		
		private double _AvgWs;
		
		private int _MinWs;
		
		private int _MaxWs;
		
		private int _PeakWs;
		
		private int _TroughWs;
		
		private double _AvgOverdue;
		
		private int _MinOverdue;
		
		private int _MaxOverdue;
		
		private int _PeakOverdue;
		
		private int _TroughOverdue;
		
		private double _AvgOperationalFleet;
		
		private int _MinOperationalFleet;
		
		private int _MaxOperationalFleet;
		
		private int _PeakOperationalFleet;
		
		private int _TroughOperationalFleet;
		
		private double _AvgAvailableFleet;
		
		private int _MinAvailableFleet;
		
		private int _MaxAvailableFleet;
		
		private int _PeakAvailableFleet;
		
		private int _TroughAvailableFleet;
		
		private double _AvgOnRent;
		
		private int _MinOnRent;
		
		private int _MaxOnRent;
		
		private int _PeakOnRent;
		
		private int _TroughOnRent;
		
		private EntityRef<CAR_GROUP> _CAR_GROUP;
		
		private EntityRef<LOCATION> _LOCATION;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFleetHistoryIdChanging(int value);
    partial void OnFleetHistoryIdChanged();
    partial void OnTimestampChanging(System.DateTime value);
    partial void OnTimestampChanged();
    partial void OnCarGroupIdChanging(int value);
    partial void OnCarGroupIdChanged();
    partial void OnLocationIdChanging(int value);
    partial void OnLocationIdChanged();
    partial void OnFleetTypeIdChanging(byte value);
    partial void OnFleetTypeIdChanged();
    partial void OnAvgTotalChanging(double value);
    partial void OnAvgTotalChanged();
    partial void OnMinTotalChanging(int value);
    partial void OnMinTotalChanged();
    partial void OnMaxTotalChanging(int value);
    partial void OnMaxTotalChanged();
    partial void OnPeakTotalChanging(int value);
    partial void OnPeakTotalChanged();
    partial void OnTroughTotalChanging(int value);
    partial void OnTroughTotalChanged();
    partial void OnAvgBdChanging(double value);
    partial void OnAvgBdChanged();
    partial void OnMinBdChanging(int value);
    partial void OnMinBdChanged();
    partial void OnMaxBdChanging(int value);
    partial void OnMaxBdChanged();
    partial void OnPeakBdChanging(int value);
    partial void OnPeakBdChanged();
    partial void OnTroughBdChanging(int value);
    partial void OnTroughBdChanged();
    partial void OnAvgCuChanging(double value);
    partial void OnAvgCuChanged();
    partial void OnMinCuChanging(int value);
    partial void OnMinCuChanged();
    partial void OnMaxCuChanging(int value);
    partial void OnMaxCuChanged();
    partial void OnPeakCuChanging(int value);
    partial void OnPeakCuChanged();
    partial void OnTroughCuChanging(int value);
    partial void OnTroughCuChanged();
    partial void OnAvgFsChanging(double value);
    partial void OnAvgFsChanged();
    partial void OnMinFsChanging(int value);
    partial void OnMinFsChanged();
    partial void OnMaxFsChanging(int value);
    partial void OnMaxFsChanged();
    partial void OnPeakFsChanging(int value);
    partial void OnPeakFsChanged();
    partial void OnTroughFsChanging(int value);
    partial void OnTroughFsChanged();
    partial void OnAvgHaChanging(double value);
    partial void OnAvgHaChanged();
    partial void OnMinHaChanging(int value);
    partial void OnMinHaChanged();
    partial void OnMaxHaChanging(int value);
    partial void OnMaxHaChanged();
    partial void OnPeakHaChanging(int value);
    partial void OnPeakHaChanged();
    partial void OnTroughHaChanging(int value);
    partial void OnTroughHaChanged();
    partial void OnAvgHlChanging(double value);
    partial void OnAvgHlChanged();
    partial void OnMinHlChanging(int value);
    partial void OnMinHlChanged();
    partial void OnMaxHlChanging(int value);
    partial void OnMaxHlChanged();
    partial void OnPeakHlChanging(int value);
    partial void OnPeakHlChanged();
    partial void OnTroughHlChanging(int value);
    partial void OnTroughHlChanged();
    partial void OnAvgLlChanging(double value);
    partial void OnAvgLlChanged();
    partial void OnMinLlChanging(int value);
    partial void OnMinLlChanged();
    partial void OnMaxLlChanging(int value);
    partial void OnMaxLlChanged();
    partial void OnPeakLlChanging(int value);
    partial void OnPeakLlChanged();
    partial void OnTroughLlChanging(int value);
    partial void OnTroughLlChanged();
    partial void OnAvgMmChanging(double value);
    partial void OnAvgMmChanged();
    partial void OnMinMmChanging(int value);
    partial void OnMinMmChanged();
    partial void OnMaxMmChanging(int value);
    partial void OnMaxMmChanged();
    partial void OnPeakMmChanging(int value);
    partial void OnPeakMmChanged();
    partial void OnTroughMmChanging(int value);
    partial void OnTroughMmChanged();
    partial void OnAvgNcChanging(double value);
    partial void OnAvgNcChanged();
    partial void OnMinNcChanging(int value);
    partial void OnMinNcChanged();
    partial void OnMaxNcChanging(int value);
    partial void OnMaxNcChanged();
    partial void OnPeakNcChanging(int value);
    partial void OnPeakNcChanged();
    partial void OnTroughNcChanging(int value);
    partial void OnTroughNcChanged();
    partial void OnAvgPlChanging(double value);
    partial void OnAvgPlChanged();
    partial void OnMinPlChanging(int value);
    partial void OnMinPlChanged();
    partial void OnMaxPlChanging(int value);
    partial void OnMaxPlChanged();
    partial void OnPeakPlChanging(int value);
    partial void OnPeakPlChanged();
    partial void OnTroughPlChanging(int value);
    partial void OnTroughPlChanged();
    partial void OnAvgRlChanging(double value);
    partial void OnAvgRlChanged();
    partial void OnMinRlChanging(int value);
    partial void OnMinRlChanged();
    partial void OnMaxRlChanging(int value);
    partial void OnMaxRlChanged();
    partial void OnPeakRlChanging(int value);
    partial void OnPeakRlChanged();
    partial void OnTroughRlChanging(int value);
    partial void OnTroughRlChanged();
    partial void OnAvgRpChanging(double value);
    partial void OnAvgRpChanged();
    partial void OnMinRpChanging(int value);
    partial void OnMinRpChanged();
    partial void OnMaxRpChanging(int value);
    partial void OnMaxRpChanged();
    partial void OnPeakRpChanging(int value);
    partial void OnPeakRpChanged();
    partial void OnTroughRpChanging(int value);
    partial void OnTroughRpChanged();
    partial void OnAvgIdleChanging(double value);
    partial void OnAvgIdleChanged();
    partial void OnMinIdleChanging(int value);
    partial void OnMinIdleChanged();
    partial void OnMaxIdleChanging(int value);
    partial void OnMaxIdleChanged();
    partial void OnPeakIdleChanging(int value);
    partial void OnPeakIdleChanged();
    partial void OnTroughIdleChanging(int value);
    partial void OnTroughIdleChanged();
    partial void OnAvgSuChanging(double value);
    partial void OnAvgSuChanged();
    partial void OnMinSuChanging(int value);
    partial void OnMinSuChanged();
    partial void OnMaxSuChanging(int value);
    partial void OnMaxSuChanged();
    partial void OnPeakSuChanging(int value);
    partial void OnPeakSuChanged();
    partial void OnTroughSuChanging(int value);
    partial void OnTroughSuChanged();
    partial void OnAvgSvChanging(double value);
    partial void OnAvgSvChanged();
    partial void OnMinSvChanging(int value);
    partial void OnMinSvChanged();
    partial void OnMaxSvChanging(int value);
    partial void OnMaxSvChanged();
    partial void OnPeakSvChanging(int value);
    partial void OnPeakSvChanged();
    partial void OnTroughSvChanging(int value);
    partial void OnTroughSvChanged();
    partial void OnAvgTbChanging(double value);
    partial void OnAvgTbChanged();
    partial void OnMinTbChanging(int value);
    partial void OnMinTbChanged();
    partial void OnMaxTbChanging(int value);
    partial void OnMaxTbChanged();
    partial void OnPeakTbChanging(int value);
    partial void OnPeakTbChanged();
    partial void OnTroughTbChanging(int value);
    partial void OnTroughTbChanged();
    partial void OnAvgTcChanging(double value);
    partial void OnAvgTcChanged();
    partial void OnMinTcChanging(int value);
    partial void OnMinTcChanged();
    partial void OnMaxTcChanging(int value);
    partial void OnMaxTcChanged();
    partial void OnPeakTcChanging(int value);
    partial void OnPeakTcChanged();
    partial void OnTroughTcChanging(int value);
    partial void OnTroughTcChanged();
    partial void OnAvgTnChanging(double value);
    partial void OnAvgTnChanged();
    partial void OnMinTnChanging(int value);
    partial void OnMinTnChanged();
    partial void OnMaxTnChanging(int value);
    partial void OnMaxTnChanged();
    partial void OnPeakTnChanging(int value);
    partial void OnPeakTnChanged();
    partial void OnTroughTnChanging(int value);
    partial void OnTroughTnChanged();
    partial void OnAvgTwChanging(double value);
    partial void OnAvgTwChanged();
    partial void OnMinTwChanging(int value);
    partial void OnMinTwChanged();
    partial void OnMaxTwChanging(int value);
    partial void OnMaxTwChanged();
    partial void OnPeakTwChanging(int value);
    partial void OnPeakTwChanged();
    partial void OnTroughTwChanging(int value);
    partial void OnTroughTwChanged();
    partial void OnAvgWsChanging(double value);
    partial void OnAvgWsChanged();
    partial void OnMinWsChanging(int value);
    partial void OnMinWsChanged();
    partial void OnMaxWsChanging(int value);
    partial void OnMaxWsChanged();
    partial void OnPeakWsChanging(int value);
    partial void OnPeakWsChanged();
    partial void OnTroughWsChanging(int value);
    partial void OnTroughWsChanged();
    partial void OnAvgOverdueChanging(double value);
    partial void OnAvgOverdueChanged();
    partial void OnMinOverdueChanging(int value);
    partial void OnMinOverdueChanged();
    partial void OnMaxOverdueChanging(int value);
    partial void OnMaxOverdueChanged();
    partial void OnPeakOverdueChanging(int value);
    partial void OnPeakOverdueChanged();
    partial void OnTroughOverdueChanging(int value);
    partial void OnTroughOverdueChanged();
    partial void OnAvgOperationalFleetChanging(double value);
    partial void OnAvgOperationalFleetChanged();
    partial void OnMinOperationalFleetChanging(int value);
    partial void OnMinOperationalFleetChanged();
    partial void OnMaxOperationalFleetChanging(int value);
    partial void OnMaxOperationalFleetChanged();
    partial void OnPeakOperationalFleetChanging(int value);
    partial void OnPeakOperationalFleetChanged();
    partial void OnTroughOperationalFleetChanging(int value);
    partial void OnTroughOperationalFleetChanged();
    partial void OnAvgAvailableFleetChanging(double value);
    partial void OnAvgAvailableFleetChanged();
    partial void OnMinAvailableFleetChanging(int value);
    partial void OnMinAvailableFleetChanged();
    partial void OnMaxAvailableFleetChanging(int value);
    partial void OnMaxAvailableFleetChanged();
    partial void OnPeakAvailableFleetChanging(int value);
    partial void OnPeakAvailableFleetChanged();
    partial void OnTroughAvailableFleetChanging(int value);
    partial void OnTroughAvailableFleetChanged();
    partial void OnAvgOnRentChanging(double value);
    partial void OnAvgOnRentChanged();
    partial void OnMinOnRentChanging(int value);
    partial void OnMinOnRentChanged();
    partial void OnMaxOnRentChanging(int value);
    partial void OnMaxOnRentChanged();
    partial void OnPeakOnRentChanging(int value);
    partial void OnPeakOnRentChanged();
    partial void OnTroughOnRentChanging(int value);
    partial void OnTroughOnRentChanged();
    #endregion
		
		public FleetHistory()
		{
			this._CAR_GROUP = default(EntityRef<CAR_GROUP>);
			this._LOCATION = default(EntityRef<LOCATION>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FleetHistoryId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FleetHistoryId
		{
			get
			{
				return this._FleetHistoryId;
			}
			set
			{
				if ((this._FleetHistoryId != value))
				{
					this.OnFleetHistoryIdChanging(value);
					this.SendPropertyChanging();
					this._FleetHistoryId = value;
					this.SendPropertyChanged("FleetHistoryId");
					this.OnFleetHistoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Timestamp", DbType="Date NOT NULL")]
		public System.DateTime Timestamp
		{
			get
			{
				return this._Timestamp;
			}
			set
			{
				if ((this._Timestamp != value))
				{
					this.OnTimestampChanging(value);
					this.SendPropertyChanging();
					this._Timestamp = value;
					this.SendPropertyChanged("Timestamp");
					this.OnTimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarGroupId", DbType="Int NOT NULL")]
		public int CarGroupId
		{
			get
			{
				return this._CarGroupId;
			}
			set
			{
				if ((this._CarGroupId != value))
				{
					if (this._CAR_GROUP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCarGroupIdChanging(value);
					this.SendPropertyChanging();
					this._CarGroupId = value;
					this.SendPropertyChanged("CarGroupId");
					this.OnCarGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationId", DbType="Int NOT NULL")]
		public int LocationId
		{
			get
			{
				return this._LocationId;
			}
			set
			{
				if ((this._LocationId != value))
				{
					if (this._LOCATION.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLocationIdChanging(value);
					this.SendPropertyChanging();
					this._LocationId = value;
					this.SendPropertyChanged("LocationId");
					this.OnLocationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FleetTypeId", DbType="TinyInt NOT NULL")]
		public byte FleetTypeId
		{
			get
			{
				return this._FleetTypeId;
			}
			set
			{
				if ((this._FleetTypeId != value))
				{
					this.OnFleetTypeIdChanging(value);
					this.SendPropertyChanging();
					this._FleetTypeId = value;
					this.SendPropertyChanged("FleetTypeId");
					this.OnFleetTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AvgTotal", DbType="Float NOT NULL")]
		public double AvgTotal
		{
			get
			{
				return this._AvgTotal;
			}
			set
			{
				if ((this._AvgTotal != value))
				{
					this.OnAvgTotalChanging(value);
					this.SendPropertyChanging();
					this._AvgTotal = value;
					this.SendPropertyChanged("AvgTotal");
					this.OnAvgTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinTotal", DbType="Int NOT NULL")]
		public int MinTotal
		{
			get
			{
				return this._MinTotal;
			}
			set
			{
				if ((this._MinTotal != value))
				{
					this.OnMinTotalChanging(value);
					this.SendPropertyChanging();
					this._MinTotal = value;
					this.SendPropertyChanged("MinTotal");
					this.OnMinTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxTotal", DbType="Int NOT NULL")]
		public int MaxTotal
		{
			get
			{
				return this._MaxTotal;
			}
			set
			{
				if ((this._MaxTotal != value))
				{
					this.OnMaxTotalChanging(value);
					this.SendPropertyChanging();
					this._MaxTotal = value;
					this.SendPropertyChanged("MaxTotal");
					this.OnMaxTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeakTotal", DbType="Int NOT NULL")]
		public int PeakTotal
		{
			get
			{
				return this._PeakTotal;
			}
			set
			{
				if ((this._PeakTotal != value))
				{
					this.OnPeakTotalChanging(value);
					this.SendPropertyChanging();
					this._PeakTotal = value;
					this.SendPropertyChanged("PeakTotal");
					this.OnPeakTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TroughTotal", DbType="Int NOT NULL")]
		public int TroughTotal
		{
			get
			{
				return this._TroughTotal;
			}
			set
			{
				if ((this._TroughTotal != value))
				{
					this.OnTroughTotalChanging(value);
					this.SendPropertyChanging();
					this._TroughTotal = value;
					this.SendPropertyChanged("TroughTotal");
					this.OnTroughTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AvgBd", DbType="Float NOT NULL")]
		public double AvgBd
		{
			get
			{
				return this._AvgBd;
			}
			set
			{
				if ((this._AvgBd != value))
				{
					this.OnAvgBdChanging(value);
					this.SendPropertyChanging();
					this._AvgBd = value;
					this.SendPropertyChanged("AvgBd");
					this.OnAvgBdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinBd", DbType="Int NOT NULL")]
		public int MinBd
		{
			get
			{
				return this._MinBd;
			}
			set
			{
				if ((this._MinBd != value))
				{
					this.OnMinBdChanging(value);
					this.SendPropertyChanging();
					this._MinBd = value;
					this.SendPropertyChanged("MinBd");
					this.OnMinBdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxBd", DbType="Int NOT NULL")]
		public int MaxBd
		{
			get
			{
				return this._MaxBd;
			}
			set
			{
				if ((this._MaxBd != value))
				{
					this.OnMaxBdChanging(value);
					this.SendPropertyChanging();
					this._MaxBd = value;
					this.SendPropertyChanged("MaxBd");
					this.OnMaxBdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeakBd", DbType="Int NOT NULL")]
		public int PeakBd
		{
			get
			{
				return this._PeakBd;
			}
			set
			{
				if ((this._PeakBd != value))
				{
					this.OnPeakBdChanging(value);
					this.SendPropertyChanging();
					this._PeakBd = value;
					this.SendPropertyChanged("PeakBd");
					this.OnPeakBdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TroughBd", DbType="Int NOT NULL")]
		public int TroughBd
		{
			get
			{
				return this._TroughBd;
			}
			set
			{
				if ((this._TroughBd != value))
				{
					this.OnTroughBdChanging(value);
					this.SendPropertyChanging();
					this._TroughBd = value;
					this.SendPropertyChanged("TroughBd");
					this.OnTroughBdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AvgCu", DbType="Float NOT NULL")]
		public double AvgCu
		{
			get
			{
				return this._AvgCu;
			}
			set
			{
				if ((this._AvgCu != value))
				{
					this.OnAvgCuChanging(value);
					this.SendPropertyChanging();
					this._AvgCu = value;
					this.SendPropertyChanged("AvgCu");
					this.OnAvgCuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinCu", DbType="Int NOT NULL")]
		public int MinCu
		{
			get
			{
				return this._MinCu;
			}
			set
			{
				if ((this._MinCu != value))
				{
					this.OnMinCuChanging(value);
					this.SendPropertyChanging();
					this._MinCu = value;
					this.SendPropertyChanged("MinCu");
					this.OnMinCuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxCu", DbType="Int NOT NULL")]
		public int MaxCu
		{
			get
			{
				return this._MaxCu;
			}
			set
			{
				if ((this._MaxCu != value))
				{
					this.OnMaxCuChanging(value);
					this.SendPropertyChanging();
					this._MaxCu = value;
					this.SendPropertyChanged("MaxCu");
					this.OnMaxCuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeakCu", DbType="Int NOT NULL")]
		public int PeakCu
		{
			get
			{
				return this._PeakCu;
			}
			set
			{
				if ((this._PeakCu != value))
				{
					this.OnPeakCuChanging(value);
					this.SendPropertyChanging();
					this._PeakCu = value;
					this.SendPropertyChanged("PeakCu");
					this.OnPeakCuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TroughCu", DbType="Int NOT NULL")]
		public int TroughCu
		{
			get
			{
				return this._TroughCu;
			}
			set
			{
				if ((this._TroughCu != value))
				{
					this.OnTroughCuChanging(value);
					this.SendPropertyChanging();
					this._TroughCu = value;
					this.SendPropertyChanged("TroughCu");
					this.OnTroughCuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AvgFs", DbType="Float NOT NULL")]
		public double AvgFs
		{
			get
			{
				return this._AvgFs;
			}
			set
			{
				if ((this._AvgFs != value))
				{
					this.OnAvgFsChanging(value);
					this.SendPropertyChanging();
					this._AvgFs = value;
					this.SendPropertyChanged("AvgFs");
					this.OnAvgFsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinFs", DbType="Int NOT NULL")]
		public int MinFs
		{
			get
			{
				return this._MinFs;
			}
			set
			{
				if ((this._MinFs != value))
				{
					this.OnMinFsChanging(value);
					this.SendPropertyChanging();
					this._MinFs = value;
					this.SendPropertyChanged("MinFs");
					this.OnMinFsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxFs", DbType="Int NOT NULL")]
		public int MaxFs
		{
			get
			{
				return this._MaxFs;
			}
			set
			{
				if ((this._MaxFs != value))
				{
					this.OnMaxFsChanging(value);
					this.SendPropertyChanging();
					this._MaxFs = value;
					this.SendPropertyChanged("MaxFs");
					this.OnMaxFsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeakFs", DbType="Int NOT NULL")]
		public int PeakFs
		{
			get
			{
				return this._PeakFs;
			}
			set
			{
				if ((this._PeakFs != value))
				{
					this.OnPeakFsChanging(value);
					this.SendPropertyChanging();
					this._PeakFs = value;
					this.SendPropertyChanged("PeakFs");
					this.OnPeakFsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TroughFs", DbType="Int NOT NULL")]
		public int TroughFs
		{
			get
			{
				return this._TroughFs;
			}
			set
			{
				if ((this._TroughFs != value))
				{
					this.OnTroughFsChanging(value);
					this.SendPropertyChanging();
					this._TroughFs = value;
					this.SendPropertyChanged("TroughFs");
					this.OnTroughFsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AvgHa", DbType="Float NOT NULL")]
		public double AvgHa
		{
			get
			{
				return this._AvgHa;
			}
			set
			{
				if ((this._AvgHa != value))
				{
					this.OnAvgHaChanging(value);
					this.SendPropertyChanging();
					this._AvgHa = value;
					this.SendPropertyChanged("AvgHa");
					this.OnAvgHaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinHa", DbType="Int NOT NULL")]
		public int MinHa
		{
			get
			{
				return this._MinHa;
			}
			set
			{
				if ((this._MinHa != value))
				{
					this.OnMinHaChanging(value);
					this.SendPropertyChanging();
					this._MinHa = value;
					this.SendPropertyChanged("MinHa");
					this.OnMinHaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxHa", DbType="Int NOT NULL")]
		public int MaxHa
		{
			get
			{
				return this._MaxHa;
			}
			set
			{
				if ((this._MaxHa != value))
				{
					this.OnMaxHaChanging(value);
					this.SendPropertyChanging();
					this._MaxHa = value;
					this.SendPropertyChanged("MaxHa");
					this.OnMaxHaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeakHa", DbType="Int NOT NULL")]
		public int PeakHa
		{
			get
			{
				return this._PeakHa;
			}
			set
			{
				if ((this._PeakHa != value))
				{
					this.OnPeakHaChanging(value);
					this.SendPropertyChanging();
					this._PeakHa = value;
					this.SendPropertyChanged("PeakHa");
					this.OnPeakHaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TroughHa", DbType="Int NOT NULL")]
		public int TroughHa
		{
			get
			{
				return this._TroughHa;
			}
			set
			{
				if ((this._TroughHa != value))
				{
					this.OnTroughHaChanging(value);
					this.SendPropertyChanging();
					this._TroughHa = value;
					this.SendPropertyChanged("TroughHa");
					this.OnTroughHaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AvgHl", DbType="Float NOT NULL")]
		public double AvgHl
		{
			get
			{
				return this._AvgHl;
			}
			set
			{
				if ((this._AvgHl != value))
				{
					this.OnAvgHlChanging(value);
					this.SendPropertyChanging();
					this._AvgHl = value;
					this.SendPropertyChanged("AvgHl");
					this.OnAvgHlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinHl", DbType="Int NOT NULL")]
		public int MinHl
		{
			get
			{
				return this._MinHl;
			}
			set
			{
				if ((this._MinHl != value))
				{
					this.OnMinHlChanging(value);
					this.SendPropertyChanging();
					this._MinHl = value;
					this.SendPropertyChanged("MinHl");
					this.OnMinHlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxHl", DbType="Int NOT NULL")]
		public int MaxHl
		{
			get
			{
				return this._MaxHl;
			}
			set
			{
				if ((this._MaxHl != value))
				{
					this.OnMaxHlChanging(value);
					this.SendPropertyChanging();
					this._MaxHl = value;
					this.SendPropertyChanged("MaxHl");
					this.OnMaxHlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeakHl", DbType="Int NOT NULL")]
		public int PeakHl
		{
			get
			{
				return this._PeakHl;
			}
			set
			{
				if ((this._PeakHl != value))
				{
					this.OnPeakHlChanging(value);
					this.SendPropertyChanging();
					this._PeakHl = value;
					this.SendPropertyChanged("PeakHl");
					this.OnPeakHlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TroughHl", DbType="Int NOT NULL")]
		public int TroughHl
		{
			get
			{
				return this._TroughHl;
			}
			set
			{
				if ((this._TroughHl != value))
				{
					this.OnTroughHlChanging(value);
					this.SendPropertyChanging();
					this._TroughHl = value;
					this.SendPropertyChanged("TroughHl");
					this.OnTroughHlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AvgLl", DbType="Float NOT NULL")]
		public double AvgLl
		{
			get
			{
				return this._AvgLl;
			}
			set
			{
				if ((this._AvgLl != value))
				{
					this.OnAvgLlChanging(value);
					this.SendPropertyChanging();
					this._AvgLl = value;
					this.SendPropertyChanged("AvgLl");
					this.OnAvgLlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinLl", DbType="Int NOT NULL")]
		public int MinLl
		{
			get
			{
				return this._MinLl;
			}
			set
			{
				if ((this._MinLl != value))
				{
					this.OnMinLlChanging(value);
					this.SendPropertyChanging();
					this._MinLl = value;
					this.SendPropertyChanged("MinLl");
					this.OnMinLlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxLl", DbType="Int NOT NULL")]
		public int MaxLl
		{
			get
			{
				return this._MaxLl;
			}
			set
			{
				if ((this._MaxLl != value))
				{
					this.OnMaxLlChanging(value);
					this.SendPropertyChanging();
					this._MaxLl = value;
					this.SendPropertyChanged("MaxLl");
					this.OnMaxLlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeakLl", DbType="Int NOT NULL")]
		public int PeakLl
		{
			get
			{
				return this._PeakLl;
			}
			set
			{
				if ((this._PeakLl != value))
				{
					this.OnPeakLlChanging(value);
					this.SendPropertyChanging();
					this._PeakLl = value;
					this.SendPropertyChanged("PeakLl");
					this.OnPeakLlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TroughLl", DbType="Int NOT NULL")]
		public int TroughLl
		{
			get
			{
				return this._TroughLl;
			}
			set
			{
				if ((this._TroughLl != value))
				{
					this.OnTroughLlChanging(value);
					this.SendPropertyChanging();
					this._TroughLl = value;
					this.SendPropertyChanged("TroughLl");
					this.OnTroughLlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AvgMm", DbType="Float NOT NULL")]
		public double AvgMm
		{
			get
			{
				return this._AvgMm;
			}
			set
			{
				if ((this._AvgMm != value))
				{
					this.OnAvgMmChanging(value);
					this.SendPropertyChanging();
					this._AvgMm = value;
					this.SendPropertyChanged("AvgMm");
					this.OnAvgMmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinMm", DbType="Int NOT NULL")]
		public int MinMm
		{
			get
			{
				return this._MinMm;
			}
			set
			{
				if ((this._MinMm != value))
				{
					this.OnMinMmChanging(value);
					this.SendPropertyChanging();
					this._MinMm = value;
					this.SendPropertyChanged("MinMm");
					this.OnMinMmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxMm", DbType="Int NOT NULL")]
		public int MaxMm
		{
			get
			{
				return this._MaxMm;
			}
			set
			{
				if ((this._MaxMm != value))
				{
					this.OnMaxMmChanging(value);
					this.SendPropertyChanging();
					this._MaxMm = value;
					this.SendPropertyChanged("MaxMm");
					this.OnMaxMmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeakMm", DbType="Int NOT NULL")]
		public int PeakMm
		{
			get
			{
				return this._PeakMm;
			}
			set
			{
				if ((this._PeakMm != value))
				{
					this.OnPeakMmChanging(value);
					this.SendPropertyChanging();
					this._PeakMm = value;
					this.SendPropertyChanged("PeakMm");
					this.OnPeakMmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TroughMm", DbType="Int NOT NULL")]
		public int TroughMm
		{
			get
			{
				return this._TroughMm;
			}
			set
			{
				if ((this._TroughMm != value))
				{
					this.OnTroughMmChanging(value);
					this.SendPropertyChanging();
					this._TroughMm = value;
					this.SendPropertyChanged("TroughMm");
					this.OnTroughMmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AvgNc", DbType="Float NOT NULL")]
		public double AvgNc
		{
			get
			{
				return this._AvgNc;
			}
			set
			{
				if ((this._AvgNc != value))
				{
					this.OnAvgNcChanging(value);
					this.SendPropertyChanging();
					this._AvgNc = value;
					this.SendPropertyChanged("AvgNc");
					this.OnAvgNcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinNc", DbType="Int NOT NULL")]
		public int MinNc
		{
			get
			{
				return this._MinNc;
			}
			set
			{
				if ((this._MinNc != value))
				{
					this.OnMinNcChanging(value);
					this.SendPropertyChanging();
					this._MinNc = value;
					this.SendPropertyChanged("MinNc");
					this.OnMinNcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxNc", DbType="Int NOT NULL")]
		public int MaxNc
		{
			get
			{
				return this._MaxNc;
			}
			set
			{
				if ((this._MaxNc != value))
				{
					this.OnMaxNcChanging(value);
					this.SendPropertyChanging();
					this._MaxNc = value;
					this.SendPropertyChanged("MaxNc");
					this.OnMaxNcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeakNc", DbType="Int NOT NULL")]
		public int PeakNc
		{
			get
			{
				return this._PeakNc;
			}
			set
			{
				if ((this._PeakNc != value))
				{
					this.OnPeakNcChanging(value);
					this.SendPropertyChanging();
					this._PeakNc = value;
					this.SendPropertyChanged("PeakNc");
					this.OnPeakNcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TroughNc", DbType="Int NOT NULL")]
		public int TroughNc
		{
			get
			{
				return this._TroughNc;
			}
			set
			{
				if ((this._TroughNc != value))
				{
					this.OnTroughNcChanging(value);
					this.SendPropertyChanging();
					this._TroughNc = value;
					this.SendPropertyChanged("TroughNc");
					this.OnTroughNcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AvgPl", DbType="Float NOT NULL")]
		public double AvgPl
		{
			get
			{
				return this._AvgPl;
			}
			set
			{
				if ((this._AvgPl != value))
				{
					this.OnAvgPlChanging(value);
					this.SendPropertyChanging();
					this._AvgPl = value;
					this.SendPropertyChanged("AvgPl");
					this.OnAvgPlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinPl", DbType="Int NOT NULL")]
		public int MinPl
		{
			get
			{
				return this._MinPl;
			}
			set
			{
				if ((this._MinPl != value))
				{
					this.OnMinPlChanging(value);
					this.SendPropertyChanging();
					this._MinPl = value;
					this.SendPropertyChanged("MinPl");
					this.OnMinPlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxPl", DbType="Int NOT NULL")]
		public int MaxPl
		{
			get
			{
				return this._MaxPl;
			}
			set
			{
				if ((this._MaxPl != value))
				{
					this.OnMaxPlChanging(value);
					this.SendPropertyChanging();
					this._MaxPl = value;
					this.SendPropertyChanged("MaxPl");
					this.OnMaxPlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeakPl", DbType="Int NOT NULL")]
		public int PeakPl
		{
			get
			{
				return this._PeakPl;
			}
			set
			{
				if ((this._PeakPl != value))
				{
					this.OnPeakPlChanging(value);
					this.SendPropertyChanging();
					this._PeakPl = value;
					this.SendPropertyChanged("PeakPl");
					this.OnPeakPlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TroughPl", DbType="Int NOT NULL")]
		public int TroughPl
		{
			get
			{
				return this._TroughPl;
			}
			set
			{
				if ((this._TroughPl != value))
				{
					this.OnTroughPlChanging(value);
					this.SendPropertyChanging();
					this._TroughPl = value;
					this.SendPropertyChanged("TroughPl");
					this.OnTroughPlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AvgRl", DbType="Float NOT NULL")]
		public double AvgRl
		{
			get
			{
				return this._AvgRl;
			}
			set
			{
				if ((this._AvgRl != value))
				{
					this.OnAvgRlChanging(value);
					this.SendPropertyChanging();
					this._AvgRl = value;
					this.SendPropertyChanged("AvgRl");
					this.OnAvgRlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinRl", DbType="Int NOT NULL")]
		public int MinRl
		{
			get
			{
				return this._MinRl;
			}
			set
			{
				if ((this._MinRl != value))
				{
					this.OnMinRlChanging(value);
					this.SendPropertyChanging();
					this._MinRl = value;
					this.SendPropertyChanged("MinRl");
					this.OnMinRlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxRl", DbType="Int NOT NULL")]
		public int MaxRl
		{
			get
			{
				return this._MaxRl;
			}
			set
			{
				if ((this._MaxRl != value))
				{
					this.OnMaxRlChanging(value);
					this.SendPropertyChanging();
					this._MaxRl = value;
					this.SendPropertyChanged("MaxRl");
					this.OnMaxRlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeakRl", DbType="Int NOT NULL")]
		public int PeakRl
		{
			get
			{
				return this._PeakRl;
			}
			set
			{
				if ((this._PeakRl != value))
				{
					this.OnPeakRlChanging(value);
					this.SendPropertyChanging();
					this._PeakRl = value;
					this.SendPropertyChanged("PeakRl");
					this.OnPeakRlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TroughRl", DbType="Int NOT NULL")]
		public int TroughRl
		{
			get
			{
				return this._TroughRl;
			}
			set
			{
				if ((this._TroughRl != value))
				{
					this.OnTroughRlChanging(value);
					this.SendPropertyChanging();
					this._TroughRl = value;
					this.SendPropertyChanged("TroughRl");
					this.OnTroughRlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AvgRp", DbType="Float NOT NULL")]
		public double AvgRp
		{
			get
			{
				return this._AvgRp;
			}
			set
			{
				if ((this._AvgRp != value))
				{
					this.OnAvgRpChanging(value);
					this.SendPropertyChanging();
					this._AvgRp = value;
					this.SendPropertyChanged("AvgRp");
					this.OnAvgRpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinRp", DbType="Int NOT NULL")]
		public int MinRp
		{
			get
			{
				return this._MinRp;
			}
			set
			{
				if ((this._MinRp != value))
				{
					this.OnMinRpChanging(value);
					this.SendPropertyChanging();
					this._MinRp = value;
					this.SendPropertyChanged("MinRp");
					this.OnMinRpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxRp", DbType="Int NOT NULL")]
		public int MaxRp
		{
			get
			{
				return this._MaxRp;
			}
			set
			{
				if ((this._MaxRp != value))
				{
					this.OnMaxRpChanging(value);
					this.SendPropertyChanging();
					this._MaxRp = value;
					this.SendPropertyChanged("MaxRp");
					this.OnMaxRpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeakRp", DbType="Int NOT NULL")]
		public int PeakRp
		{
			get
			{
				return this._PeakRp;
			}
			set
			{
				if ((this._PeakRp != value))
				{
					this.OnPeakRpChanging(value);
					this.SendPropertyChanging();
					this._PeakRp = value;
					this.SendPropertyChanged("PeakRp");
					this.OnPeakRpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TroughRp", DbType="Int NOT NULL")]
		public int TroughRp
		{
			get
			{
				return this._TroughRp;
			}
			set
			{
				if ((this._TroughRp != value))
				{
					this.OnTroughRpChanging(value);
					this.SendPropertyChanging();
					this._TroughRp = value;
					this.SendPropertyChanged("TroughRp");
					this.OnTroughRpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AvgIdle", DbType="Float NOT NULL")]
		public double AvgIdle
		{
			get
			{
				return this._AvgIdle;
			}
			set
			{
				if ((this._AvgIdle != value))
				{
					this.OnAvgIdleChanging(value);
					this.SendPropertyChanging();
					this._AvgIdle = value;
					this.SendPropertyChanged("AvgIdle");
					this.OnAvgIdleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinIdle", DbType="Int NOT NULL")]
		public int MinIdle
		{
			get
			{
				return this._MinIdle;
			}
			set
			{
				if ((this._MinIdle != value))
				{
					this.OnMinIdleChanging(value);
					this.SendPropertyChanging();
					this._MinIdle = value;
					this.SendPropertyChanged("MinIdle");
					this.OnMinIdleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxIdle", DbType="Int NOT NULL")]
		public int MaxIdle
		{
			get
			{
				return this._MaxIdle;
			}
			set
			{
				if ((this._MaxIdle != value))
				{
					this.OnMaxIdleChanging(value);
					this.SendPropertyChanging();
					this._MaxIdle = value;
					this.SendPropertyChanged("MaxIdle");
					this.OnMaxIdleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeakIdle", DbType="Int NOT NULL")]
		public int PeakIdle
		{
			get
			{
				return this._PeakIdle;
			}
			set
			{
				if ((this._PeakIdle != value))
				{
					this.OnPeakIdleChanging(value);
					this.SendPropertyChanging();
					this._PeakIdle = value;
					this.SendPropertyChanged("PeakIdle");
					this.OnPeakIdleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TroughIdle", DbType="Int NOT NULL")]
		public int TroughIdle
		{
			get
			{
				return this._TroughIdle;
			}
			set
			{
				if ((this._TroughIdle != value))
				{
					this.OnTroughIdleChanging(value);
					this.SendPropertyChanging();
					this._TroughIdle = value;
					this.SendPropertyChanged("TroughIdle");
					this.OnTroughIdleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AvgSu", DbType="Float NOT NULL")]
		public double AvgSu
		{
			get
			{
				return this._AvgSu;
			}
			set
			{
				if ((this._AvgSu != value))
				{
					this.OnAvgSuChanging(value);
					this.SendPropertyChanging();
					this._AvgSu = value;
					this.SendPropertyChanged("AvgSu");
					this.OnAvgSuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinSu", DbType="Int NOT NULL")]
		public int MinSu
		{
			get
			{
				return this._MinSu;
			}
			set
			{
				if ((this._MinSu != value))
				{
					this.OnMinSuChanging(value);
					this.SendPropertyChanging();
					this._MinSu = value;
					this.SendPropertyChanged("MinSu");
					this.OnMinSuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxSu", DbType="Int NOT NULL")]
		public int MaxSu
		{
			get
			{
				return this._MaxSu;
			}
			set
			{
				if ((this._MaxSu != value))
				{
					this.OnMaxSuChanging(value);
					this.SendPropertyChanging();
					this._MaxSu = value;
					this.SendPropertyChanged("MaxSu");
					this.OnMaxSuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeakSu", DbType="Int NOT NULL")]
		public int PeakSu
		{
			get
			{
				return this._PeakSu;
			}
			set
			{
				if ((this._PeakSu != value))
				{
					this.OnPeakSuChanging(value);
					this.SendPropertyChanging();
					this._PeakSu = value;
					this.SendPropertyChanged("PeakSu");
					this.OnPeakSuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TroughSu", DbType="Int NOT NULL")]
		public int TroughSu
		{
			get
			{
				return this._TroughSu;
			}
			set
			{
				if ((this._TroughSu != value))
				{
					this.OnTroughSuChanging(value);
					this.SendPropertyChanging();
					this._TroughSu = value;
					this.SendPropertyChanged("TroughSu");
					this.OnTroughSuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AvgSv", DbType="Float NOT NULL")]
		public double AvgSv
		{
			get
			{
				return this._AvgSv;
			}
			set
			{
				if ((this._AvgSv != value))
				{
					this.OnAvgSvChanging(value);
					this.SendPropertyChanging();
					this._AvgSv = value;
					this.SendPropertyChanged("AvgSv");
					this.OnAvgSvChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinSv", DbType="Int NOT NULL")]
		public int MinSv
		{
			get
			{
				return this._MinSv;
			}
			set
			{
				if ((this._MinSv != value))
				{
					this.OnMinSvChanging(value);
					this.SendPropertyChanging();
					this._MinSv = value;
					this.SendPropertyChanged("MinSv");
					this.OnMinSvChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxSv", DbType="Int NOT NULL")]
		public int MaxSv
		{
			get
			{
				return this._MaxSv;
			}
			set
			{
				if ((this._MaxSv != value))
				{
					this.OnMaxSvChanging(value);
					this.SendPropertyChanging();
					this._MaxSv = value;
					this.SendPropertyChanged("MaxSv");
					this.OnMaxSvChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeakSv", DbType="Int NOT NULL")]
		public int PeakSv
		{
			get
			{
				return this._PeakSv;
			}
			set
			{
				if ((this._PeakSv != value))
				{
					this.OnPeakSvChanging(value);
					this.SendPropertyChanging();
					this._PeakSv = value;
					this.SendPropertyChanged("PeakSv");
					this.OnPeakSvChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TroughSv", DbType="Int NOT NULL")]
		public int TroughSv
		{
			get
			{
				return this._TroughSv;
			}
			set
			{
				if ((this._TroughSv != value))
				{
					this.OnTroughSvChanging(value);
					this.SendPropertyChanging();
					this._TroughSv = value;
					this.SendPropertyChanged("TroughSv");
					this.OnTroughSvChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AvgTb", DbType="Float NOT NULL")]
		public double AvgTb
		{
			get
			{
				return this._AvgTb;
			}
			set
			{
				if ((this._AvgTb != value))
				{
					this.OnAvgTbChanging(value);
					this.SendPropertyChanging();
					this._AvgTb = value;
					this.SendPropertyChanged("AvgTb");
					this.OnAvgTbChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinTb", DbType="Int NOT NULL")]
		public int MinTb
		{
			get
			{
				return this._MinTb;
			}
			set
			{
				if ((this._MinTb != value))
				{
					this.OnMinTbChanging(value);
					this.SendPropertyChanging();
					this._MinTb = value;
					this.SendPropertyChanged("MinTb");
					this.OnMinTbChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxTb", DbType="Int NOT NULL")]
		public int MaxTb
		{
			get
			{
				return this._MaxTb;
			}
			set
			{
				if ((this._MaxTb != value))
				{
					this.OnMaxTbChanging(value);
					this.SendPropertyChanging();
					this._MaxTb = value;
					this.SendPropertyChanged("MaxTb");
					this.OnMaxTbChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeakTb", DbType="Int NOT NULL")]
		public int PeakTb
		{
			get
			{
				return this._PeakTb;
			}
			set
			{
				if ((this._PeakTb != value))
				{
					this.OnPeakTbChanging(value);
					this.SendPropertyChanging();
					this._PeakTb = value;
					this.SendPropertyChanged("PeakTb");
					this.OnPeakTbChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TroughTb", DbType="Int NOT NULL")]
		public int TroughTb
		{
			get
			{
				return this._TroughTb;
			}
			set
			{
				if ((this._TroughTb != value))
				{
					this.OnTroughTbChanging(value);
					this.SendPropertyChanging();
					this._TroughTb = value;
					this.SendPropertyChanged("TroughTb");
					this.OnTroughTbChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AvgTc", DbType="Float NOT NULL")]
		public double AvgTc
		{
			get
			{
				return this._AvgTc;
			}
			set
			{
				if ((this._AvgTc != value))
				{
					this.OnAvgTcChanging(value);
					this.SendPropertyChanging();
					this._AvgTc = value;
					this.SendPropertyChanged("AvgTc");
					this.OnAvgTcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinTc", DbType="Int NOT NULL")]
		public int MinTc
		{
			get
			{
				return this._MinTc;
			}
			set
			{
				if ((this._MinTc != value))
				{
					this.OnMinTcChanging(value);
					this.SendPropertyChanging();
					this._MinTc = value;
					this.SendPropertyChanged("MinTc");
					this.OnMinTcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxTc", DbType="Int NOT NULL")]
		public int MaxTc
		{
			get
			{
				return this._MaxTc;
			}
			set
			{
				if ((this._MaxTc != value))
				{
					this.OnMaxTcChanging(value);
					this.SendPropertyChanging();
					this._MaxTc = value;
					this.SendPropertyChanged("MaxTc");
					this.OnMaxTcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeakTc", DbType="Int NOT NULL")]
		public int PeakTc
		{
			get
			{
				return this._PeakTc;
			}
			set
			{
				if ((this._PeakTc != value))
				{
					this.OnPeakTcChanging(value);
					this.SendPropertyChanging();
					this._PeakTc = value;
					this.SendPropertyChanged("PeakTc");
					this.OnPeakTcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TroughTc", DbType="Int NOT NULL")]
		public int TroughTc
		{
			get
			{
				return this._TroughTc;
			}
			set
			{
				if ((this._TroughTc != value))
				{
					this.OnTroughTcChanging(value);
					this.SendPropertyChanging();
					this._TroughTc = value;
					this.SendPropertyChanged("TroughTc");
					this.OnTroughTcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AvgTn", DbType="Float NOT NULL")]
		public double AvgTn
		{
			get
			{
				return this._AvgTn;
			}
			set
			{
				if ((this._AvgTn != value))
				{
					this.OnAvgTnChanging(value);
					this.SendPropertyChanging();
					this._AvgTn = value;
					this.SendPropertyChanged("AvgTn");
					this.OnAvgTnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinTn", DbType="Int NOT NULL")]
		public int MinTn
		{
			get
			{
				return this._MinTn;
			}
			set
			{
				if ((this._MinTn != value))
				{
					this.OnMinTnChanging(value);
					this.SendPropertyChanging();
					this._MinTn = value;
					this.SendPropertyChanged("MinTn");
					this.OnMinTnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxTn", DbType="Int NOT NULL")]
		public int MaxTn
		{
			get
			{
				return this._MaxTn;
			}
			set
			{
				if ((this._MaxTn != value))
				{
					this.OnMaxTnChanging(value);
					this.SendPropertyChanging();
					this._MaxTn = value;
					this.SendPropertyChanged("MaxTn");
					this.OnMaxTnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeakTn", DbType="Int NOT NULL")]
		public int PeakTn
		{
			get
			{
				return this._PeakTn;
			}
			set
			{
				if ((this._PeakTn != value))
				{
					this.OnPeakTnChanging(value);
					this.SendPropertyChanging();
					this._PeakTn = value;
					this.SendPropertyChanged("PeakTn");
					this.OnPeakTnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TroughTn", DbType="Int NOT NULL")]
		public int TroughTn
		{
			get
			{
				return this._TroughTn;
			}
			set
			{
				if ((this._TroughTn != value))
				{
					this.OnTroughTnChanging(value);
					this.SendPropertyChanging();
					this._TroughTn = value;
					this.SendPropertyChanged("TroughTn");
					this.OnTroughTnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AvgTw", DbType="Float NOT NULL")]
		public double AvgTw
		{
			get
			{
				return this._AvgTw;
			}
			set
			{
				if ((this._AvgTw != value))
				{
					this.OnAvgTwChanging(value);
					this.SendPropertyChanging();
					this._AvgTw = value;
					this.SendPropertyChanged("AvgTw");
					this.OnAvgTwChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinTw", DbType="Int NOT NULL")]
		public int MinTw
		{
			get
			{
				return this._MinTw;
			}
			set
			{
				if ((this._MinTw != value))
				{
					this.OnMinTwChanging(value);
					this.SendPropertyChanging();
					this._MinTw = value;
					this.SendPropertyChanged("MinTw");
					this.OnMinTwChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxTw", DbType="Int NOT NULL")]
		public int MaxTw
		{
			get
			{
				return this._MaxTw;
			}
			set
			{
				if ((this._MaxTw != value))
				{
					this.OnMaxTwChanging(value);
					this.SendPropertyChanging();
					this._MaxTw = value;
					this.SendPropertyChanged("MaxTw");
					this.OnMaxTwChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeakTw", DbType="Int NOT NULL")]
		public int PeakTw
		{
			get
			{
				return this._PeakTw;
			}
			set
			{
				if ((this._PeakTw != value))
				{
					this.OnPeakTwChanging(value);
					this.SendPropertyChanging();
					this._PeakTw = value;
					this.SendPropertyChanged("PeakTw");
					this.OnPeakTwChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TroughTw", DbType="Int NOT NULL")]
		public int TroughTw
		{
			get
			{
				return this._TroughTw;
			}
			set
			{
				if ((this._TroughTw != value))
				{
					this.OnTroughTwChanging(value);
					this.SendPropertyChanging();
					this._TroughTw = value;
					this.SendPropertyChanged("TroughTw");
					this.OnTroughTwChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AvgWs", DbType="Float NOT NULL")]
		public double AvgWs
		{
			get
			{
				return this._AvgWs;
			}
			set
			{
				if ((this._AvgWs != value))
				{
					this.OnAvgWsChanging(value);
					this.SendPropertyChanging();
					this._AvgWs = value;
					this.SendPropertyChanged("AvgWs");
					this.OnAvgWsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinWs", DbType="Int NOT NULL")]
		public int MinWs
		{
			get
			{
				return this._MinWs;
			}
			set
			{
				if ((this._MinWs != value))
				{
					this.OnMinWsChanging(value);
					this.SendPropertyChanging();
					this._MinWs = value;
					this.SendPropertyChanged("MinWs");
					this.OnMinWsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxWs", DbType="Int NOT NULL")]
		public int MaxWs
		{
			get
			{
				return this._MaxWs;
			}
			set
			{
				if ((this._MaxWs != value))
				{
					this.OnMaxWsChanging(value);
					this.SendPropertyChanging();
					this._MaxWs = value;
					this.SendPropertyChanged("MaxWs");
					this.OnMaxWsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeakWs", DbType="Int NOT NULL")]
		public int PeakWs
		{
			get
			{
				return this._PeakWs;
			}
			set
			{
				if ((this._PeakWs != value))
				{
					this.OnPeakWsChanging(value);
					this.SendPropertyChanging();
					this._PeakWs = value;
					this.SendPropertyChanged("PeakWs");
					this.OnPeakWsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TroughWs", DbType="Int NOT NULL")]
		public int TroughWs
		{
			get
			{
				return this._TroughWs;
			}
			set
			{
				if ((this._TroughWs != value))
				{
					this.OnTroughWsChanging(value);
					this.SendPropertyChanging();
					this._TroughWs = value;
					this.SendPropertyChanged("TroughWs");
					this.OnTroughWsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AvgOverdue", DbType="Float NOT NULL")]
		public double AvgOverdue
		{
			get
			{
				return this._AvgOverdue;
			}
			set
			{
				if ((this._AvgOverdue != value))
				{
					this.OnAvgOverdueChanging(value);
					this.SendPropertyChanging();
					this._AvgOverdue = value;
					this.SendPropertyChanged("AvgOverdue");
					this.OnAvgOverdueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinOverdue", DbType="Int NOT NULL")]
		public int MinOverdue
		{
			get
			{
				return this._MinOverdue;
			}
			set
			{
				if ((this._MinOverdue != value))
				{
					this.OnMinOverdueChanging(value);
					this.SendPropertyChanging();
					this._MinOverdue = value;
					this.SendPropertyChanged("MinOverdue");
					this.OnMinOverdueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxOverdue", DbType="Int NOT NULL")]
		public int MaxOverdue
		{
			get
			{
				return this._MaxOverdue;
			}
			set
			{
				if ((this._MaxOverdue != value))
				{
					this.OnMaxOverdueChanging(value);
					this.SendPropertyChanging();
					this._MaxOverdue = value;
					this.SendPropertyChanged("MaxOverdue");
					this.OnMaxOverdueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeakOverdue", DbType="Int NOT NULL")]
		public int PeakOverdue
		{
			get
			{
				return this._PeakOverdue;
			}
			set
			{
				if ((this._PeakOverdue != value))
				{
					this.OnPeakOverdueChanging(value);
					this.SendPropertyChanging();
					this._PeakOverdue = value;
					this.SendPropertyChanged("PeakOverdue");
					this.OnPeakOverdueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TroughOverdue", DbType="Int NOT NULL")]
		public int TroughOverdue
		{
			get
			{
				return this._TroughOverdue;
			}
			set
			{
				if ((this._TroughOverdue != value))
				{
					this.OnTroughOverdueChanging(value);
					this.SendPropertyChanging();
					this._TroughOverdue = value;
					this.SendPropertyChanged("TroughOverdue");
					this.OnTroughOverdueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AvgOperationalFleet", DbType="Float NOT NULL")]
		public double AvgOperationalFleet
		{
			get
			{
				return this._AvgOperationalFleet;
			}
			set
			{
				if ((this._AvgOperationalFleet != value))
				{
					this.OnAvgOperationalFleetChanging(value);
					this.SendPropertyChanging();
					this._AvgOperationalFleet = value;
					this.SendPropertyChanged("AvgOperationalFleet");
					this.OnAvgOperationalFleetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinOperationalFleet", DbType="Int NOT NULL")]
		public int MinOperationalFleet
		{
			get
			{
				return this._MinOperationalFleet;
			}
			set
			{
				if ((this._MinOperationalFleet != value))
				{
					this.OnMinOperationalFleetChanging(value);
					this.SendPropertyChanging();
					this._MinOperationalFleet = value;
					this.SendPropertyChanged("MinOperationalFleet");
					this.OnMinOperationalFleetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxOperationalFleet", DbType="Int NOT NULL")]
		public int MaxOperationalFleet
		{
			get
			{
				return this._MaxOperationalFleet;
			}
			set
			{
				if ((this._MaxOperationalFleet != value))
				{
					this.OnMaxOperationalFleetChanging(value);
					this.SendPropertyChanging();
					this._MaxOperationalFleet = value;
					this.SendPropertyChanged("MaxOperationalFleet");
					this.OnMaxOperationalFleetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeakOperationalFleet", DbType="Int NOT NULL")]
		public int PeakOperationalFleet
		{
			get
			{
				return this._PeakOperationalFleet;
			}
			set
			{
				if ((this._PeakOperationalFleet != value))
				{
					this.OnPeakOperationalFleetChanging(value);
					this.SendPropertyChanging();
					this._PeakOperationalFleet = value;
					this.SendPropertyChanged("PeakOperationalFleet");
					this.OnPeakOperationalFleetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TroughOperationalFleet", DbType="Int NOT NULL")]
		public int TroughOperationalFleet
		{
			get
			{
				return this._TroughOperationalFleet;
			}
			set
			{
				if ((this._TroughOperationalFleet != value))
				{
					this.OnTroughOperationalFleetChanging(value);
					this.SendPropertyChanging();
					this._TroughOperationalFleet = value;
					this.SendPropertyChanged("TroughOperationalFleet");
					this.OnTroughOperationalFleetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AvgAvailableFleet", DbType="Float NOT NULL")]
		public double AvgAvailableFleet
		{
			get
			{
				return this._AvgAvailableFleet;
			}
			set
			{
				if ((this._AvgAvailableFleet != value))
				{
					this.OnAvgAvailableFleetChanging(value);
					this.SendPropertyChanging();
					this._AvgAvailableFleet = value;
					this.SendPropertyChanged("AvgAvailableFleet");
					this.OnAvgAvailableFleetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinAvailableFleet", DbType="Int NOT NULL")]
		public int MinAvailableFleet
		{
			get
			{
				return this._MinAvailableFleet;
			}
			set
			{
				if ((this._MinAvailableFleet != value))
				{
					this.OnMinAvailableFleetChanging(value);
					this.SendPropertyChanging();
					this._MinAvailableFleet = value;
					this.SendPropertyChanged("MinAvailableFleet");
					this.OnMinAvailableFleetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxAvailableFleet", DbType="Int NOT NULL")]
		public int MaxAvailableFleet
		{
			get
			{
				return this._MaxAvailableFleet;
			}
			set
			{
				if ((this._MaxAvailableFleet != value))
				{
					this.OnMaxAvailableFleetChanging(value);
					this.SendPropertyChanging();
					this._MaxAvailableFleet = value;
					this.SendPropertyChanged("MaxAvailableFleet");
					this.OnMaxAvailableFleetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeakAvailableFleet", DbType="Int NOT NULL")]
		public int PeakAvailableFleet
		{
			get
			{
				return this._PeakAvailableFleet;
			}
			set
			{
				if ((this._PeakAvailableFleet != value))
				{
					this.OnPeakAvailableFleetChanging(value);
					this.SendPropertyChanging();
					this._PeakAvailableFleet = value;
					this.SendPropertyChanged("PeakAvailableFleet");
					this.OnPeakAvailableFleetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TroughAvailableFleet", DbType="Int NOT NULL")]
		public int TroughAvailableFleet
		{
			get
			{
				return this._TroughAvailableFleet;
			}
			set
			{
				if ((this._TroughAvailableFleet != value))
				{
					this.OnTroughAvailableFleetChanging(value);
					this.SendPropertyChanging();
					this._TroughAvailableFleet = value;
					this.SendPropertyChanged("TroughAvailableFleet");
					this.OnTroughAvailableFleetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AvgOnRent", DbType="Float NOT NULL")]
		public double AvgOnRent
		{
			get
			{
				return this._AvgOnRent;
			}
			set
			{
				if ((this._AvgOnRent != value))
				{
					this.OnAvgOnRentChanging(value);
					this.SendPropertyChanging();
					this._AvgOnRent = value;
					this.SendPropertyChanged("AvgOnRent");
					this.OnAvgOnRentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinOnRent", DbType="Int NOT NULL")]
		public int MinOnRent
		{
			get
			{
				return this._MinOnRent;
			}
			set
			{
				if ((this._MinOnRent != value))
				{
					this.OnMinOnRentChanging(value);
					this.SendPropertyChanging();
					this._MinOnRent = value;
					this.SendPropertyChanged("MinOnRent");
					this.OnMinOnRentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxOnRent", DbType="Int NOT NULL")]
		public int MaxOnRent
		{
			get
			{
				return this._MaxOnRent;
			}
			set
			{
				if ((this._MaxOnRent != value))
				{
					this.OnMaxOnRentChanging(value);
					this.SendPropertyChanging();
					this._MaxOnRent = value;
					this.SendPropertyChanged("MaxOnRent");
					this.OnMaxOnRentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeakOnRent", DbType="Int NOT NULL")]
		public int PeakOnRent
		{
			get
			{
				return this._PeakOnRent;
			}
			set
			{
				if ((this._PeakOnRent != value))
				{
					this.OnPeakOnRentChanging(value);
					this.SendPropertyChanging();
					this._PeakOnRent = value;
					this.SendPropertyChanged("PeakOnRent");
					this.OnPeakOnRentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TroughOnRent", DbType="Int NOT NULL")]
		public int TroughOnRent
		{
			get
			{
				return this._TroughOnRent;
			}
			set
			{
				if ((this._TroughOnRent != value))
				{
					this.OnTroughOnRentChanging(value);
					this.SendPropertyChanging();
					this._TroughOnRent = value;
					this.SendPropertyChanged("TroughOnRent");
					this.OnTroughOnRentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CAR_GROUP_FleetHistory", Storage="_CAR_GROUP", ThisKey="CarGroupId", OtherKey="car_group_id", IsForeignKey=true)]
		public CAR_GROUP CAR_GROUP
		{
			get
			{
				return this._CAR_GROUP.Entity;
			}
			set
			{
				CAR_GROUP previousValue = this._CAR_GROUP.Entity;
				if (((previousValue != value) 
							|| (this._CAR_GROUP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CAR_GROUP.Entity = null;
						previousValue.FleetHistories.Remove(this);
					}
					this._CAR_GROUP.Entity = value;
					if ((value != null))
					{
						value.FleetHistories.Add(this);
						this._CarGroupId = value.car_group_id;
					}
					else
					{
						this._CarGroupId = default(int);
					}
					this.SendPropertyChanged("CAR_GROUP");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOCATION_FleetHistory", Storage="_LOCATION", ThisKey="LocationId", OtherKey="dim_Location_id", IsForeignKey=true)]
		public LOCATION LOCATION
		{
			get
			{
				return this._LOCATION.Entity;
			}
			set
			{
				LOCATION previousValue = this._LOCATION.Entity;
				if (((previousValue != value) 
							|| (this._LOCATION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOCATION.Entity = null;
						previousValue.FleetHistories.Remove(this);
					}
					this._LOCATION.Entity = value;
					if ((value != null))
					{
						value.FleetHistories.Add(this);
						this._LocationId = value.dim_Location_id;
					}
					else
					{
						this._LocationId = default(int);
					}
					this.SendPropertyChanged("LOCATION");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ResAdditions")]
	public partial class ResAddition : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _LocId;
		
		private int _CarGrpId;
		
		private System.DateTime _RepDate;
		
		private int _Value;
		
		private EntityRef<CAR_GROUP> _CAR_GROUP;
		
		private EntityRef<LOCATION> _LOCATION;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnLocIdChanging(int value);
    partial void OnLocIdChanged();
    partial void OnCarGrpIdChanging(int value);
    partial void OnCarGrpIdChanged();
    partial void OnRepDateChanging(System.DateTime value);
    partial void OnRepDateChanged();
    partial void OnValueChanging(int value);
    partial void OnValueChanged();
    #endregion
		
		public ResAddition()
		{
			this._CAR_GROUP = default(EntityRef<CAR_GROUP>);
			this._LOCATION = default(EntityRef<LOCATION>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocId", DbType="Int NOT NULL")]
		public int LocId
		{
			get
			{
				return this._LocId;
			}
			set
			{
				if ((this._LocId != value))
				{
					if (this._LOCATION.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLocIdChanging(value);
					this.SendPropertyChanging();
					this._LocId = value;
					this.SendPropertyChanged("LocId");
					this.OnLocIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarGrpId", DbType="Int NOT NULL")]
		public int CarGrpId
		{
			get
			{
				return this._CarGrpId;
			}
			set
			{
				if ((this._CarGrpId != value))
				{
					if (this._CAR_GROUP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCarGrpIdChanging(value);
					this.SendPropertyChanging();
					this._CarGrpId = value;
					this.SendPropertyChanged("CarGrpId");
					this.OnCarGrpIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RepDate", DbType="DateTime NOT NULL")]
		public System.DateTime RepDate
		{
			get
			{
				return this._RepDate;
			}
			set
			{
				if ((this._RepDate != value))
				{
					this.OnRepDateChanging(value);
					this.SendPropertyChanging();
					this._RepDate = value;
					this.SendPropertyChanged("RepDate");
					this.OnRepDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="Int NOT NULL")]
		public int Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CAR_GROUP_ResAddition", Storage="_CAR_GROUP", ThisKey="CarGrpId", OtherKey="car_group_id", IsForeignKey=true)]
		public CAR_GROUP CAR_GROUP
		{
			get
			{
				return this._CAR_GROUP.Entity;
			}
			set
			{
				CAR_GROUP previousValue = this._CAR_GROUP.Entity;
				if (((previousValue != value) 
							|| (this._CAR_GROUP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CAR_GROUP.Entity = null;
						previousValue.ResAdditions.Remove(this);
					}
					this._CAR_GROUP.Entity = value;
					if ((value != null))
					{
						value.ResAdditions.Add(this);
						this._CarGrpId = value.car_group_id;
					}
					else
					{
						this._CarGrpId = default(int);
					}
					this.SendPropertyChanged("CAR_GROUP");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOCATION_ResAddition", Storage="_LOCATION", ThisKey="LocId", OtherKey="dim_Location_id", IsForeignKey=true)]
		public LOCATION LOCATION
		{
			get
			{
				return this._LOCATION.Entity;
			}
			set
			{
				LOCATION previousValue = this._LOCATION.Entity;
				if (((previousValue != value) 
							|| (this._LOCATION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOCATION.Entity = null;
						previousValue.ResAdditions.Remove(this);
					}
					this._LOCATION.Entity = value;
					if ((value != null))
					{
						value.ResAdditions.Add(this);
						this._LocId = value.dim_Location_id;
					}
					else
					{
						this._LocId = default(int);
					}
					this.SendPropertyChanged("LOCATION");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ResDeletions")]
	public partial class ResDeletion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _LocId;
		
		private int _CarGrpId;
		
		private System.DateTime _RepDate;
		
		private int _Value;
		
		private EntityRef<CAR_GROUP> _CAR_GROUP;
		
		private EntityRef<LOCATION> _LOCATION;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnLocIdChanging(int value);
    partial void OnLocIdChanged();
    partial void OnCarGrpIdChanging(int value);
    partial void OnCarGrpIdChanged();
    partial void OnRepDateChanging(System.DateTime value);
    partial void OnRepDateChanged();
    partial void OnValueChanging(int value);
    partial void OnValueChanged();
    #endregion
		
		public ResDeletion()
		{
			this._CAR_GROUP = default(EntityRef<CAR_GROUP>);
			this._LOCATION = default(EntityRef<LOCATION>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocId", DbType="Int NOT NULL")]
		public int LocId
		{
			get
			{
				return this._LocId;
			}
			set
			{
				if ((this._LocId != value))
				{
					if (this._LOCATION.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLocIdChanging(value);
					this.SendPropertyChanging();
					this._LocId = value;
					this.SendPropertyChanged("LocId");
					this.OnLocIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarGrpId", DbType="Int NOT NULL")]
		public int CarGrpId
		{
			get
			{
				return this._CarGrpId;
			}
			set
			{
				if ((this._CarGrpId != value))
				{
					if (this._CAR_GROUP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCarGrpIdChanging(value);
					this.SendPropertyChanging();
					this._CarGrpId = value;
					this.SendPropertyChanged("CarGrpId");
					this.OnCarGrpIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RepDate", DbType="DateTime NOT NULL")]
		public System.DateTime RepDate
		{
			get
			{
				return this._RepDate;
			}
			set
			{
				if ((this._RepDate != value))
				{
					this.OnRepDateChanging(value);
					this.SendPropertyChanging();
					this._RepDate = value;
					this.SendPropertyChanged("RepDate");
					this.OnRepDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="Int NOT NULL")]
		public int Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CAR_GROUP_ResDeletion", Storage="_CAR_GROUP", ThisKey="CarGrpId", OtherKey="car_group_id", IsForeignKey=true)]
		public CAR_GROUP CAR_GROUP
		{
			get
			{
				return this._CAR_GROUP.Entity;
			}
			set
			{
				CAR_GROUP previousValue = this._CAR_GROUP.Entity;
				if (((previousValue != value) 
							|| (this._CAR_GROUP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CAR_GROUP.Entity = null;
						previousValue.ResDeletions.Remove(this);
					}
					this._CAR_GROUP.Entity = value;
					if ((value != null))
					{
						value.ResDeletions.Add(this);
						this._CarGrpId = value.car_group_id;
					}
					else
					{
						this._CarGrpId = default(int);
					}
					this.SendPropertyChanged("CAR_GROUP");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOCATION_ResDeletion", Storage="_LOCATION", ThisKey="LocId", OtherKey="dim_Location_id", IsForeignKey=true)]
		public LOCATION LOCATION
		{
			get
			{
				return this._LOCATION.Entity;
			}
			set
			{
				LOCATION previousValue = this._LOCATION.Entity;
				if (((previousValue != value) 
							|| (this._LOCATION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOCATION.Entity = null;
						previousValue.ResDeletions.Remove(this);
					}
					this._LOCATION.Entity = value;
					if ((value != null))
					{
						value.ResDeletions.Add(this);
						this._LocId = value.dim_Location_id;
					}
					else
					{
						this._LocId = default(int);
					}
					this.SendPropertyChanged("LOCATION");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OPS_AREAS")]
	public partial class OPS_AREA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ops_area_id;
		
		private string _ops_area1;
		
		private int _ops_region_id;
		
		private System.Nullable<bool> _isActive;
		
		private EntitySet<LOCATION> _LOCATIONs;
		
		private EntityRef<OPS_REGION> _OPS_REGION;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onops_area_idChanging(int value);
    partial void Onops_area_idChanged();
    partial void Onops_area1Changing(string value);
    partial void Onops_area1Changed();
    partial void Onops_region_idChanging(int value);
    partial void Onops_region_idChanged();
    partial void OnisActiveChanging(System.Nullable<bool> value);
    partial void OnisActiveChanged();
    #endregion
		
		public OPS_AREA()
		{
			this._LOCATIONs = new EntitySet<LOCATION>(new Action<LOCATION>(this.attach_LOCATIONs), new Action<LOCATION>(this.detach_LOCATIONs));
			this._OPS_REGION = default(EntityRef<OPS_REGION>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ops_area_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ops_area_id
		{
			get
			{
				return this._ops_area_id;
			}
			set
			{
				if ((this._ops_area_id != value))
				{
					this.Onops_area_idChanging(value);
					this.SendPropertyChanging();
					this._ops_area_id = value;
					this.SendPropertyChanged("ops_area_id");
					this.Onops_area_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ops_area", Storage="_ops_area1", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ops_area1
		{
			get
			{
				return this._ops_area1;
			}
			set
			{
				if ((this._ops_area1 != value))
				{
					this.Onops_area1Changing(value);
					this.SendPropertyChanging();
					this._ops_area1 = value;
					this.SendPropertyChanged("ops_area1");
					this.Onops_area1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ops_region_id", DbType="Int NOT NULL")]
		public int ops_region_id
		{
			get
			{
				return this._ops_region_id;
			}
			set
			{
				if ((this._ops_region_id != value))
				{
					if (this._OPS_REGION.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onops_region_idChanging(value);
					this.SendPropertyChanging();
					this._ops_region_id = value;
					this.SendPropertyChanged("ops_region_id");
					this.Onops_region_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isActive", DbType="Bit")]
		public System.Nullable<bool> isActive
		{
			get
			{
				return this._isActive;
			}
			set
			{
				if ((this._isActive != value))
				{
					this.OnisActiveChanging(value);
					this.SendPropertyChanging();
					this._isActive = value;
					this.SendPropertyChanged("isActive");
					this.OnisActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OPS_AREA_LOCATION", Storage="_LOCATIONs", ThisKey="ops_area_id", OtherKey="ops_area_id")]
		public EntitySet<LOCATION> LOCATIONs
		{
			get
			{
				return this._LOCATIONs;
			}
			set
			{
				this._LOCATIONs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OPS_REGION_OPS_AREA", Storage="_OPS_REGION", ThisKey="ops_region_id", OtherKey="ops_region_id", IsForeignKey=true)]
		public OPS_REGION OPS_REGION
		{
			get
			{
				return this._OPS_REGION.Entity;
			}
			set
			{
				OPS_REGION previousValue = this._OPS_REGION.Entity;
				if (((previousValue != value) 
							|| (this._OPS_REGION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OPS_REGION.Entity = null;
						previousValue.OPS_AREAs.Remove(this);
					}
					this._OPS_REGION.Entity = value;
					if ((value != null))
					{
						value.OPS_AREAs.Add(this);
						this._ops_region_id = value.ops_region_id;
					}
					else
					{
						this._ops_region_id = default(int);
					}
					this.SendPropertyChanged("OPS_REGION");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LOCATIONs(LOCATION entity)
		{
			this.SendPropertyChanging();
			entity.OPS_AREA = this;
		}
		
		private void detach_LOCATIONs(LOCATION entity)
		{
			this.SendPropertyChanging();
			entity.OPS_AREA = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OPS_REGIONS")]
	public partial class OPS_REGION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ops_region_id;
		
		private string _ops_region1;
		
		private string _country;
		
		private System.Nullable<bool> _isActive;
		
		private EntitySet<OPS_AREA> _OPS_AREAs;
		
		private EntityRef<COUNTRy> _COUNTRy1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onops_region_idChanging(int value);
    partial void Onops_region_idChanged();
    partial void Onops_region1Changing(string value);
    partial void Onops_region1Changed();
    partial void OncountryChanging(string value);
    partial void OncountryChanged();
    partial void OnisActiveChanging(System.Nullable<bool> value);
    partial void OnisActiveChanged();
    #endregion
		
		public OPS_REGION()
		{
			this._OPS_AREAs = new EntitySet<OPS_AREA>(new Action<OPS_AREA>(this.attach_OPS_AREAs), new Action<OPS_AREA>(this.detach_OPS_AREAs));
			this._COUNTRy1 = default(EntityRef<COUNTRy>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ops_region_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ops_region_id
		{
			get
			{
				return this._ops_region_id;
			}
			set
			{
				if ((this._ops_region_id != value))
				{
					this.Onops_region_idChanging(value);
					this.SendPropertyChanging();
					this._ops_region_id = value;
					this.SendPropertyChanged("ops_region_id");
					this.Onops_region_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ops_region", Storage="_ops_region1", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ops_region1
		{
			get
			{
				return this._ops_region1;
			}
			set
			{
				if ((this._ops_region1 != value))
				{
					this.Onops_region1Changing(value);
					this.SendPropertyChanging();
					this._ops_region1 = value;
					this.SendPropertyChanged("ops_region1");
					this.Onops_region1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_country", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string country
		{
			get
			{
				return this._country;
			}
			set
			{
				if ((this._country != value))
				{
					if (this._COUNTRy1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncountryChanging(value);
					this.SendPropertyChanging();
					this._country = value;
					this.SendPropertyChanged("country");
					this.OncountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isActive", DbType="Bit")]
		public System.Nullable<bool> isActive
		{
			get
			{
				return this._isActive;
			}
			set
			{
				if ((this._isActive != value))
				{
					this.OnisActiveChanging(value);
					this.SendPropertyChanging();
					this._isActive = value;
					this.SendPropertyChanged("isActive");
					this.OnisActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OPS_REGION_OPS_AREA", Storage="_OPS_AREAs", ThisKey="ops_region_id", OtherKey="ops_region_id")]
		public EntitySet<OPS_AREA> OPS_AREAs
		{
			get
			{
				return this._OPS_AREAs;
			}
			set
			{
				this._OPS_AREAs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="COUNTRy_OPS_REGION", Storage="_COUNTRy1", ThisKey="country", OtherKey="country1", IsForeignKey=true)]
		public COUNTRy COUNTRy1
		{
			get
			{
				return this._COUNTRy1.Entity;
			}
			set
			{
				COUNTRy previousValue = this._COUNTRy1.Entity;
				if (((previousValue != value) 
							|| (this._COUNTRy1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._COUNTRy1.Entity = null;
						previousValue.OPS_REGIONs.Remove(this);
					}
					this._COUNTRy1.Entity = value;
					if ((value != null))
					{
						value.OPS_REGIONs.Add(this);
						this._country = value.country1;
					}
					else
					{
						this._country = default(string);
					}
					this.SendPropertyChanged("COUNTRy1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OPS_AREAs(OPS_AREA entity)
		{
			this.SendPropertyChanging();
			entity.OPS_REGION = this;
		}
		
		private void detach_OPS_AREAs(OPS_AREA entity)
		{
			this.SendPropertyChanging();
			entity.OPS_REGION = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WeekDays")]
	public partial class WeekDay : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _DayOfWeekId;
		
		private string _Name;
		
		private EntitySet<MaxFleetFactor> _MaxFleetFactors;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDayOfWeekIdChanging(byte value);
    partial void OnDayOfWeekIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public WeekDay()
		{
			this._MaxFleetFactors = new EntitySet<MaxFleetFactor>(new Action<MaxFleetFactor>(this.attach_MaxFleetFactors), new Action<MaxFleetFactor>(this.detach_MaxFleetFactors));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DayOfWeekId", AutoSync=AutoSync.OnInsert, DbType="TinyInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public byte DayOfWeekId
		{
			get
			{
				return this._DayOfWeekId;
			}
			set
			{
				if ((this._DayOfWeekId != value))
				{
					this.OnDayOfWeekIdChanging(value);
					this.SendPropertyChanging();
					this._DayOfWeekId = value;
					this.SendPropertyChanged("DayOfWeekId");
					this.OnDayOfWeekIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WeekDay_MaxFleetFactor", Storage="_MaxFleetFactors", ThisKey="DayOfWeekId", OtherKey="DayOfWeekId")]
		public EntitySet<MaxFleetFactor> MaxFleetFactors
		{
			get
			{
				return this._MaxFleetFactors;
			}
			set
			{
				this._MaxFleetFactors.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MaxFleetFactors(MaxFleetFactor entity)
		{
			this.SendPropertyChanging();
			entity.WeekDay = this;
		}
		
		private void detach_MaxFleetFactors(MaxFleetFactor entity)
		{
			this.SendPropertyChanging();
			entity.WeekDay = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Fao.WeeklyLimitOnCarSegment")]
	public partial class WeeklyLimitOnCarSegment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _WeeklyLimitOnCarSegmentId;
		
		private int _FileUploadId;
		
		private int _CarSegmentId;
		
		private int _Additions;
		
		private byte _Week;
		
		private short _Year;
		
		private EntityRef<CAR_SEGMENT> _CAR_SEGMENT;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWeeklyLimitOnCarSegmentIdChanging(int value);
    partial void OnWeeklyLimitOnCarSegmentIdChanged();
    partial void OnFileUploadIdChanging(int value);
    partial void OnFileUploadIdChanged();
    partial void OnCarSegmentIdChanging(int value);
    partial void OnCarSegmentIdChanged();
    partial void OnAdditionsChanging(int value);
    partial void OnAdditionsChanged();
    partial void OnWeekChanging(byte value);
    partial void OnWeekChanged();
    partial void OnYearChanging(short value);
    partial void OnYearChanged();
    #endregion
		
		public WeeklyLimitOnCarSegment()
		{
			this._CAR_SEGMENT = default(EntityRef<CAR_SEGMENT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeeklyLimitOnCarSegmentId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int WeeklyLimitOnCarSegmentId
		{
			get
			{
				return this._WeeklyLimitOnCarSegmentId;
			}
			set
			{
				if ((this._WeeklyLimitOnCarSegmentId != value))
				{
					this.OnWeeklyLimitOnCarSegmentIdChanging(value);
					this.SendPropertyChanging();
					this._WeeklyLimitOnCarSegmentId = value;
					this.SendPropertyChanged("WeeklyLimitOnCarSegmentId");
					this.OnWeeklyLimitOnCarSegmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileUploadId", DbType="Int NOT NULL")]
		public int FileUploadId
		{
			get
			{
				return this._FileUploadId;
			}
			set
			{
				if ((this._FileUploadId != value))
				{
					this.OnFileUploadIdChanging(value);
					this.SendPropertyChanging();
					this._FileUploadId = value;
					this.SendPropertyChanged("FileUploadId");
					this.OnFileUploadIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarSegmentId", DbType="Int NOT NULL")]
		public int CarSegmentId
		{
			get
			{
				return this._CarSegmentId;
			}
			set
			{
				if ((this._CarSegmentId != value))
				{
					if (this._CAR_SEGMENT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCarSegmentIdChanging(value);
					this.SendPropertyChanging();
					this._CarSegmentId = value;
					this.SendPropertyChanged("CarSegmentId");
					this.OnCarSegmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Additions", DbType="Int NOT NULL")]
		public int Additions
		{
			get
			{
				return this._Additions;
			}
			set
			{
				if ((this._Additions != value))
				{
					this.OnAdditionsChanging(value);
					this.SendPropertyChanging();
					this._Additions = value;
					this.SendPropertyChanged("Additions");
					this.OnAdditionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Week", DbType="TinyInt NOT NULL")]
		public byte Week
		{
			get
			{
				return this._Week;
			}
			set
			{
				if ((this._Week != value))
				{
					this.OnWeekChanging(value);
					this.SendPropertyChanging();
					this._Week = value;
					this.SendPropertyChanged("Week");
					this.OnWeekChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="SmallInt NOT NULL")]
		public short Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CAR_SEGMENT_WeeklyLimitOnCarSegment", Storage="_CAR_SEGMENT", ThisKey="CarSegmentId", OtherKey="car_segment_id", IsForeignKey=true)]
		public CAR_SEGMENT CAR_SEGMENT
		{
			get
			{
				return this._CAR_SEGMENT.Entity;
			}
			set
			{
				CAR_SEGMENT previousValue = this._CAR_SEGMENT.Entity;
				if (((previousValue != value) 
							|| (this._CAR_SEGMENT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CAR_SEGMENT.Entity = null;
						previousValue.WeeklyLimitOnCarSegments.Remove(this);
					}
					this._CAR_SEGMENT.Entity = value;
					if ((value != null))
					{
						value.WeeklyLimitOnCarSegments.Add(this);
						this._CarSegmentId = value.car_segment_id;
					}
					else
					{
						this._CarSegmentId = default(int);
					}
					this.SendPropertyChanged("CAR_SEGMENT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Fao.RevenueByCommercialCarSegment")]
	public partial class RevenueByCommercialCarSegment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RevenueByCommercialCarSegmentId;
		
		private short _Year;
		
		private byte _Month;
		
		private int _LocationId;
		
		private int _CarGroupId;
		
		private int _CommercialCarSegmentId;
		
		private int _RentalCount;
		
		private double _DaysDriven;
		
		private int _DaysCharged;
		
		private int _FinanceDays;
		
		private double _GrossRevenue;
		
		private double _PerformanceRevenue;
		
		private System.DateTime _MonthDate;
		
		private EntityRef<CAR_GROUP> _CAR_GROUP;
		
		private EntityRef<CommercialCarSegment> _CommercialCarSegment;
		
		private EntityRef<LOCATION> _LOCATION;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRevenueByCommercialCarSegmentIdChanging(int value);
    partial void OnRevenueByCommercialCarSegmentIdChanged();
    partial void OnYearChanging(short value);
    partial void OnYearChanged();
    partial void OnMonthChanging(byte value);
    partial void OnMonthChanged();
    partial void OnLocationIdChanging(int value);
    partial void OnLocationIdChanged();
    partial void OnCarGroupIdChanging(int value);
    partial void OnCarGroupIdChanged();
    partial void OnCommercialCarSegmentIdChanging(int value);
    partial void OnCommercialCarSegmentIdChanged();
    partial void OnRentalCountChanging(int value);
    partial void OnRentalCountChanged();
    partial void OnDaysDrivenChanging(double value);
    partial void OnDaysDrivenChanged();
    partial void OnDaysChargedChanging(int value);
    partial void OnDaysChargedChanged();
    partial void OnFinanceDaysChanging(int value);
    partial void OnFinanceDaysChanged();
    partial void OnGrossRevenueChanging(double value);
    partial void OnGrossRevenueChanged();
    partial void OnPerformanceRevenueChanging(double value);
    partial void OnPerformanceRevenueChanged();
    partial void OnMonthDateChanging(System.DateTime value);
    partial void OnMonthDateChanged();
    #endregion
		
		public RevenueByCommercialCarSegment()
		{
			this._CAR_GROUP = default(EntityRef<CAR_GROUP>);
			this._CommercialCarSegment = default(EntityRef<CommercialCarSegment>);
			this._LOCATION = default(EntityRef<LOCATION>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RevenueByCommercialCarSegmentId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RevenueByCommercialCarSegmentId
		{
			get
			{
				return this._RevenueByCommercialCarSegmentId;
			}
			set
			{
				if ((this._RevenueByCommercialCarSegmentId != value))
				{
					this.OnRevenueByCommercialCarSegmentIdChanging(value);
					this.SendPropertyChanging();
					this._RevenueByCommercialCarSegmentId = value;
					this.SendPropertyChanged("RevenueByCommercialCarSegmentId");
					this.OnRevenueByCommercialCarSegmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="SmallInt NOT NULL")]
		public short Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Month", DbType="TinyInt NOT NULL")]
		public byte Month
		{
			get
			{
				return this._Month;
			}
			set
			{
				if ((this._Month != value))
				{
					this.OnMonthChanging(value);
					this.SendPropertyChanging();
					this._Month = value;
					this.SendPropertyChanged("Month");
					this.OnMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationId", DbType="Int NOT NULL")]
		public int LocationId
		{
			get
			{
				return this._LocationId;
			}
			set
			{
				if ((this._LocationId != value))
				{
					if (this._LOCATION.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLocationIdChanging(value);
					this.SendPropertyChanging();
					this._LocationId = value;
					this.SendPropertyChanged("LocationId");
					this.OnLocationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarGroupId", DbType="Int NOT NULL")]
		public int CarGroupId
		{
			get
			{
				return this._CarGroupId;
			}
			set
			{
				if ((this._CarGroupId != value))
				{
					if (this._CAR_GROUP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCarGroupIdChanging(value);
					this.SendPropertyChanging();
					this._CarGroupId = value;
					this.SendPropertyChanged("CarGroupId");
					this.OnCarGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommercialCarSegmentId", DbType="Int NOT NULL")]
		public int CommercialCarSegmentId
		{
			get
			{
				return this._CommercialCarSegmentId;
			}
			set
			{
				if ((this._CommercialCarSegmentId != value))
				{
					if (this._CommercialCarSegment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCommercialCarSegmentIdChanging(value);
					this.SendPropertyChanging();
					this._CommercialCarSegmentId = value;
					this.SendPropertyChanged("CommercialCarSegmentId");
					this.OnCommercialCarSegmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RentalCount", DbType="Int NOT NULL")]
		public int RentalCount
		{
			get
			{
				return this._RentalCount;
			}
			set
			{
				if ((this._RentalCount != value))
				{
					this.OnRentalCountChanging(value);
					this.SendPropertyChanging();
					this._RentalCount = value;
					this.SendPropertyChanged("RentalCount");
					this.OnRentalCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DaysDriven", DbType="Float NOT NULL")]
		public double DaysDriven
		{
			get
			{
				return this._DaysDriven;
			}
			set
			{
				if ((this._DaysDriven != value))
				{
					this.OnDaysDrivenChanging(value);
					this.SendPropertyChanging();
					this._DaysDriven = value;
					this.SendPropertyChanged("DaysDriven");
					this.OnDaysDrivenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DaysCharged", DbType="Int NOT NULL")]
		public int DaysCharged
		{
			get
			{
				return this._DaysCharged;
			}
			set
			{
				if ((this._DaysCharged != value))
				{
					this.OnDaysChargedChanging(value);
					this.SendPropertyChanging();
					this._DaysCharged = value;
					this.SendPropertyChanged("DaysCharged");
					this.OnDaysChargedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinanceDays", DbType="Int NOT NULL")]
		public int FinanceDays
		{
			get
			{
				return this._FinanceDays;
			}
			set
			{
				if ((this._FinanceDays != value))
				{
					this.OnFinanceDaysChanging(value);
					this.SendPropertyChanging();
					this._FinanceDays = value;
					this.SendPropertyChanged("FinanceDays");
					this.OnFinanceDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GrossRevenue", DbType="Float NOT NULL")]
		public double GrossRevenue
		{
			get
			{
				return this._GrossRevenue;
			}
			set
			{
				if ((this._GrossRevenue != value))
				{
					this.OnGrossRevenueChanging(value);
					this.SendPropertyChanging();
					this._GrossRevenue = value;
					this.SendPropertyChanged("GrossRevenue");
					this.OnGrossRevenueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PerformanceRevenue", DbType="Float NOT NULL")]
		public double PerformanceRevenue
		{
			get
			{
				return this._PerformanceRevenue;
			}
			set
			{
				if ((this._PerformanceRevenue != value))
				{
					this.OnPerformanceRevenueChanging(value);
					this.SendPropertyChanging();
					this._PerformanceRevenue = value;
					this.SendPropertyChanged("PerformanceRevenue");
					this.OnPerformanceRevenueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonthDate", DbType="Date NOT NULL")]
		public System.DateTime MonthDate
		{
			get
			{
				return this._MonthDate;
			}
			set
			{
				if ((this._MonthDate != value))
				{
					this.OnMonthDateChanging(value);
					this.SendPropertyChanging();
					this._MonthDate = value;
					this.SendPropertyChanged("MonthDate");
					this.OnMonthDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CAR_GROUP_RevenueByCommercialCarSegment", Storage="_CAR_GROUP", ThisKey="CarGroupId", OtherKey="car_group_id", IsForeignKey=true)]
		public CAR_GROUP CAR_GROUP
		{
			get
			{
				return this._CAR_GROUP.Entity;
			}
			set
			{
				CAR_GROUP previousValue = this._CAR_GROUP.Entity;
				if (((previousValue != value) 
							|| (this._CAR_GROUP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CAR_GROUP.Entity = null;
						previousValue.RevenueByCommercialCarSegments.Remove(this);
					}
					this._CAR_GROUP.Entity = value;
					if ((value != null))
					{
						value.RevenueByCommercialCarSegments.Add(this);
						this._CarGroupId = value.car_group_id;
					}
					else
					{
						this._CarGroupId = default(int);
					}
					this.SendPropertyChanged("CAR_GROUP");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CommercialCarSegment_RevenueByCommercialCarSegment", Storage="_CommercialCarSegment", ThisKey="CommercialCarSegmentId", OtherKey="CommercialCarSegmentId", IsForeignKey=true)]
		public CommercialCarSegment CommercialCarSegment
		{
			get
			{
				return this._CommercialCarSegment.Entity;
			}
			set
			{
				CommercialCarSegment previousValue = this._CommercialCarSegment.Entity;
				if (((previousValue != value) 
							|| (this._CommercialCarSegment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CommercialCarSegment.Entity = null;
						previousValue.RevenueByCommercialCarSegments.Remove(this);
					}
					this._CommercialCarSegment.Entity = value;
					if ((value != null))
					{
						value.RevenueByCommercialCarSegments.Add(this);
						this._CommercialCarSegmentId = value.CommercialCarSegmentId;
					}
					else
					{
						this._CommercialCarSegmentId = default(int);
					}
					this.SendPropertyChanged("CommercialCarSegment");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOCATION_RevenueByCommercialCarSegment", Storage="_LOCATION", ThisKey="LocationId", OtherKey="dim_Location_id", IsForeignKey=true)]
		public LOCATION LOCATION
		{
			get
			{
				return this._LOCATION.Entity;
			}
			set
			{
				LOCATION previousValue = this._LOCATION.Entity;
				if (((previousValue != value) 
							|| (this._LOCATION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOCATION.Entity = null;
						previousValue.RevenueByCommercialCarSegments.Remove(this);
					}
					this._LOCATION.Entity = value;
					if ((value != null))
					{
						value.RevenueByCommercialCarSegments.Add(this);
						this._LocationId = value.dim_Location_id;
					}
					else
					{
						this._LocationId = default(int);
					}
					this.SendPropertyChanged("LOCATION");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Fao.LifecycleHoldingCost")]
	public partial class LifecycleHoldingCost : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LifecycleHoldingCostId;
		
		private byte _Month;
		
		private short _Year;
		
		private int _CarGroupId;
		
		private double _Cost;
		
		private System.DateTime _MonthDate;
		
		private EntityRef<CAR_GROUP> _CAR_GROUP;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLifecycleHoldingCostIdChanging(int value);
    partial void OnLifecycleHoldingCostIdChanged();
    partial void OnMonthChanging(byte value);
    partial void OnMonthChanged();
    partial void OnYearChanging(short value);
    partial void OnYearChanged();
    partial void OnCarGroupIdChanging(int value);
    partial void OnCarGroupIdChanged();
    partial void OnCostChanging(double value);
    partial void OnCostChanged();
    partial void OnMonthDateChanging(System.DateTime value);
    partial void OnMonthDateChanged();
    #endregion
		
		public LifecycleHoldingCost()
		{
			this._CAR_GROUP = default(EntityRef<CAR_GROUP>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LifecycleHoldingCostId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LifecycleHoldingCostId
		{
			get
			{
				return this._LifecycleHoldingCostId;
			}
			set
			{
				if ((this._LifecycleHoldingCostId != value))
				{
					this.OnLifecycleHoldingCostIdChanging(value);
					this.SendPropertyChanging();
					this._LifecycleHoldingCostId = value;
					this.SendPropertyChanged("LifecycleHoldingCostId");
					this.OnLifecycleHoldingCostIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Month", DbType="TinyInt NOT NULL")]
		public byte Month
		{
			get
			{
				return this._Month;
			}
			set
			{
				if ((this._Month != value))
				{
					this.OnMonthChanging(value);
					this.SendPropertyChanging();
					this._Month = value;
					this.SendPropertyChanged("Month");
					this.OnMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="SmallInt NOT NULL")]
		public short Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarGroupId", DbType="Int NOT NULL")]
		public int CarGroupId
		{
			get
			{
				return this._CarGroupId;
			}
			set
			{
				if ((this._CarGroupId != value))
				{
					if (this._CAR_GROUP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCarGroupIdChanging(value);
					this.SendPropertyChanging();
					this._CarGroupId = value;
					this.SendPropertyChanged("CarGroupId");
					this.OnCarGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="Float NOT NULL")]
		public double Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this.OnCostChanging(value);
					this.SendPropertyChanging();
					this._Cost = value;
					this.SendPropertyChanged("Cost");
					this.OnCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonthDate", DbType="Date NOT NULL")]
		public System.DateTime MonthDate
		{
			get
			{
				return this._MonthDate;
			}
			set
			{
				if ((this._MonthDate != value))
				{
					this.OnMonthDateChanging(value);
					this.SendPropertyChanging();
					this._MonthDate = value;
					this.SendPropertyChanged("MonthDate");
					this.OnMonthDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CAR_GROUP_LifecycleHoldingCost", Storage="_CAR_GROUP", ThisKey="CarGroupId", OtherKey="car_group_id", IsForeignKey=true)]
		public CAR_GROUP CAR_GROUP
		{
			get
			{
				return this._CAR_GROUP.Entity;
			}
			set
			{
				CAR_GROUP previousValue = this._CAR_GROUP.Entity;
				if (((previousValue != value) 
							|| (this._CAR_GROUP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CAR_GROUP.Entity = null;
						previousValue.LifecycleHoldingCosts.Remove(this);
					}
					this._CAR_GROUP.Entity = value;
					if ((value != null))
					{
						value.LifecycleHoldingCosts.Add(this);
						this._CarGroupId = value.car_group_id;
					}
					else
					{
						this._CarGroupId = default(int);
					}
					this.SendPropertyChanged("CAR_GROUP");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FleetSizeFutureTrend")]
	public partial class FleetSizeFutureTrend : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.DateTime _TargetDate;
		
		private System.Nullable<int> _OperationalFleet;
		
		private System.Nullable<int> _Amount;
		
		private System.Nullable<int> _ExpectedFleet;
		
		private int _CarGrpId;
		
		private int _LocGrpId;
		
		private int _FleetPlanId;
		
		private string _Country;
		
		private int _FleetSizeFutureTrendId;
		
		private EntityRef<CAR_GROUP> _CAR_GROUP;
		
		private EntityRef<CMS_LOCATION_GROUP> _CMS_LOCATION_GROUP;
		
		private EntityRef<COUNTRy> _COUNTRy1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTargetDateChanging(System.DateTime value);
    partial void OnTargetDateChanged();
    partial void OnOperationalFleetChanging(System.Nullable<int> value);
    partial void OnOperationalFleetChanged();
    partial void OnAmountChanging(System.Nullable<int> value);
    partial void OnAmountChanged();
    partial void OnExpectedFleetChanging(System.Nullable<int> value);
    partial void OnExpectedFleetChanged();
    partial void OnCarGrpIdChanging(int value);
    partial void OnCarGrpIdChanged();
    partial void OnLocGrpIdChanging(int value);
    partial void OnLocGrpIdChanged();
    partial void OnFleetPlanIdChanging(int value);
    partial void OnFleetPlanIdChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnFleetSizeFutureTrendIdChanging(int value);
    partial void OnFleetSizeFutureTrendIdChanged();
    #endregion
		
		public FleetSizeFutureTrend()
		{
			this._CAR_GROUP = default(EntityRef<CAR_GROUP>);
			this._CMS_LOCATION_GROUP = default(EntityRef<CMS_LOCATION_GROUP>);
			this._COUNTRy1 = default(EntityRef<COUNTRy>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetDate", DbType="DateTime NOT NULL")]
		public System.DateTime TargetDate
		{
			get
			{
				return this._TargetDate;
			}
			set
			{
				if ((this._TargetDate != value))
				{
					this.OnTargetDateChanging(value);
					this.SendPropertyChanging();
					this._TargetDate = value;
					this.SendPropertyChanged("TargetDate");
					this.OnTargetDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperationalFleet", DbType="Int")]
		public System.Nullable<int> OperationalFleet
		{
			get
			{
				return this._OperationalFleet;
			}
			set
			{
				if ((this._OperationalFleet != value))
				{
					this.OnOperationalFleetChanging(value);
					this.SendPropertyChanging();
					this._OperationalFleet = value;
					this.SendPropertyChanged("OperationalFleet");
					this.OnOperationalFleetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Int")]
		public System.Nullable<int> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpectedFleet", DbType="Int")]
		public System.Nullable<int> ExpectedFleet
		{
			get
			{
				return this._ExpectedFleet;
			}
			set
			{
				if ((this._ExpectedFleet != value))
				{
					this.OnExpectedFleetChanging(value);
					this.SendPropertyChanging();
					this._ExpectedFleet = value;
					this.SendPropertyChanged("ExpectedFleet");
					this.OnExpectedFleetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarGrpId", DbType="Int NOT NULL")]
		public int CarGrpId
		{
			get
			{
				return this._CarGrpId;
			}
			set
			{
				if ((this._CarGrpId != value))
				{
					if (this._CAR_GROUP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCarGrpIdChanging(value);
					this.SendPropertyChanging();
					this._CarGrpId = value;
					this.SendPropertyChanged("CarGrpId");
					this.OnCarGrpIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocGrpId", DbType="Int NOT NULL")]
		public int LocGrpId
		{
			get
			{
				return this._LocGrpId;
			}
			set
			{
				if ((this._LocGrpId != value))
				{
					if (this._CMS_LOCATION_GROUP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLocGrpIdChanging(value);
					this.SendPropertyChanging();
					this._LocGrpId = value;
					this.SendPropertyChanged("LocGrpId");
					this.OnLocGrpIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FleetPlanId", DbType="Int NOT NULL")]
		public int FleetPlanId
		{
			get
			{
				return this._FleetPlanId;
			}
			set
			{
				if ((this._FleetPlanId != value))
				{
					this.OnFleetPlanIdChanging(value);
					this.SendPropertyChanging();
					this._FleetPlanId = value;
					this.SendPropertyChanged("FleetPlanId");
					this.OnFleetPlanIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					if (this._COUNTRy1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FleetSizeFutureTrendId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FleetSizeFutureTrendId
		{
			get
			{
				return this._FleetSizeFutureTrendId;
			}
			set
			{
				if ((this._FleetSizeFutureTrendId != value))
				{
					this.OnFleetSizeFutureTrendIdChanging(value);
					this.SendPropertyChanging();
					this._FleetSizeFutureTrendId = value;
					this.SendPropertyChanged("FleetSizeFutureTrendId");
					this.OnFleetSizeFutureTrendIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CAR_GROUP_FleetSizeFutureTrend", Storage="_CAR_GROUP", ThisKey="CarGrpId", OtherKey="car_group_id", IsForeignKey=true)]
		public CAR_GROUP CAR_GROUP
		{
			get
			{
				return this._CAR_GROUP.Entity;
			}
			set
			{
				CAR_GROUP previousValue = this._CAR_GROUP.Entity;
				if (((previousValue != value) 
							|| (this._CAR_GROUP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CAR_GROUP.Entity = null;
						previousValue.FleetSizeFutureTrends.Remove(this);
					}
					this._CAR_GROUP.Entity = value;
					if ((value != null))
					{
						value.FleetSizeFutureTrends.Add(this);
						this._CarGrpId = value.car_group_id;
					}
					else
					{
						this._CarGrpId = default(int);
					}
					this.SendPropertyChanged("CAR_GROUP");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CMS_LOCATION_GROUP_FleetSizeFutureTrend", Storage="_CMS_LOCATION_GROUP", ThisKey="LocGrpId", OtherKey="cms_location_group_id", IsForeignKey=true)]
		public CMS_LOCATION_GROUP CMS_LOCATION_GROUP
		{
			get
			{
				return this._CMS_LOCATION_GROUP.Entity;
			}
			set
			{
				CMS_LOCATION_GROUP previousValue = this._CMS_LOCATION_GROUP.Entity;
				if (((previousValue != value) 
							|| (this._CMS_LOCATION_GROUP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CMS_LOCATION_GROUP.Entity = null;
						previousValue.FleetSizeFutureTrends.Remove(this);
					}
					this._CMS_LOCATION_GROUP.Entity = value;
					if ((value != null))
					{
						value.FleetSizeFutureTrends.Add(this);
						this._LocGrpId = value.cms_location_group_id;
					}
					else
					{
						this._LocGrpId = default(int);
					}
					this.SendPropertyChanged("CMS_LOCATION_GROUP");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="COUNTRy_FleetSizeFutureTrend", Storage="_COUNTRy1", ThisKey="Country", OtherKey="country1", IsForeignKey=true)]
		public COUNTRy COUNTRy1
		{
			get
			{
				return this._COUNTRy1.Entity;
			}
			set
			{
				COUNTRy previousValue = this._COUNTRy1.Entity;
				if (((previousValue != value) 
							|| (this._COUNTRy1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._COUNTRy1.Entity = null;
						previousValue.FleetSizeFutureTrends.Remove(this);
					}
					this._COUNTRy1.Entity = value;
					if ((value != null))
					{
						value.FleetSizeFutureTrends.Add(this);
						this._Country = value.country1;
					}
					else
					{
						this._Country = default(string);
					}
					this.SendPropertyChanged("COUNTRy1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Fao.MonthlyLimitOnCarGroup")]
	public partial class MonthlyLimitOnCarGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MonthlyLimitOnCarGroupId;
		
		private int _FileUploadId;
		
		private int _CarGroupId;
		
		private int _Additions;
		
		private byte _Month;
		
		private short _Year;
		
		private System.DateTime _MonthDate;
		
		private EntityRef<CAR_GROUP> _CAR_GROUP;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMonthlyLimitOnCarGroupIdChanging(int value);
    partial void OnMonthlyLimitOnCarGroupIdChanged();
    partial void OnFileUploadIdChanging(int value);
    partial void OnFileUploadIdChanged();
    partial void OnCarGroupIdChanging(int value);
    partial void OnCarGroupIdChanged();
    partial void OnAdditionsChanging(int value);
    partial void OnAdditionsChanged();
    partial void OnMonthChanging(byte value);
    partial void OnMonthChanged();
    partial void OnYearChanging(short value);
    partial void OnYearChanged();
    partial void OnMonthDateChanging(System.DateTime value);
    partial void OnMonthDateChanged();
    #endregion
		
		public MonthlyLimitOnCarGroup()
		{
			this._CAR_GROUP = default(EntityRef<CAR_GROUP>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonthlyLimitOnCarGroupId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MonthlyLimitOnCarGroupId
		{
			get
			{
				return this._MonthlyLimitOnCarGroupId;
			}
			set
			{
				if ((this._MonthlyLimitOnCarGroupId != value))
				{
					this.OnMonthlyLimitOnCarGroupIdChanging(value);
					this.SendPropertyChanging();
					this._MonthlyLimitOnCarGroupId = value;
					this.SendPropertyChanged("MonthlyLimitOnCarGroupId");
					this.OnMonthlyLimitOnCarGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileUploadId", DbType="Int NOT NULL")]
		public int FileUploadId
		{
			get
			{
				return this._FileUploadId;
			}
			set
			{
				if ((this._FileUploadId != value))
				{
					this.OnFileUploadIdChanging(value);
					this.SendPropertyChanging();
					this._FileUploadId = value;
					this.SendPropertyChanged("FileUploadId");
					this.OnFileUploadIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarGroupId", DbType="Int NOT NULL")]
		public int CarGroupId
		{
			get
			{
				return this._CarGroupId;
			}
			set
			{
				if ((this._CarGroupId != value))
				{
					if (this._CAR_GROUP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCarGroupIdChanging(value);
					this.SendPropertyChanging();
					this._CarGroupId = value;
					this.SendPropertyChanged("CarGroupId");
					this.OnCarGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Additions", DbType="Int NOT NULL")]
		public int Additions
		{
			get
			{
				return this._Additions;
			}
			set
			{
				if ((this._Additions != value))
				{
					this.OnAdditionsChanging(value);
					this.SendPropertyChanging();
					this._Additions = value;
					this.SendPropertyChanged("Additions");
					this.OnAdditionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Month", DbType="TinyInt NOT NULL")]
		public byte Month
		{
			get
			{
				return this._Month;
			}
			set
			{
				if ((this._Month != value))
				{
					this.OnMonthChanging(value);
					this.SendPropertyChanging();
					this._Month = value;
					this.SendPropertyChanged("Month");
					this.OnMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="SmallInt NOT NULL")]
		public short Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonthDate", DbType="Date NOT NULL")]
		public System.DateTime MonthDate
		{
			get
			{
				return this._MonthDate;
			}
			set
			{
				if ((this._MonthDate != value))
				{
					this.OnMonthDateChanging(value);
					this.SendPropertyChanging();
					this._MonthDate = value;
					this.SendPropertyChanged("MonthDate");
					this.OnMonthDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CAR_GROUP_MonthlyLimitOnCarGroup", Storage="_CAR_GROUP", ThisKey="CarGroupId", OtherKey="car_group_id", IsForeignKey=true)]
		public CAR_GROUP CAR_GROUP
		{
			get
			{
				return this._CAR_GROUP.Entity;
			}
			set
			{
				CAR_GROUP previousValue = this._CAR_GROUP.Entity;
				if (((previousValue != value) 
							|| (this._CAR_GROUP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CAR_GROUP.Entity = null;
						previousValue.MonthlyLimitOnCarGroups.Remove(this);
					}
					this._CAR_GROUP.Entity = value;
					if ((value != null))
					{
						value.MonthlyLimitOnCarGroups.Add(this);
						this._CarGroupId = value.car_group_id;
					}
					else
					{
						this._CarGroupId = default(int);
					}
					this.SendPropertyChanged("CAR_GROUP");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Fao.IsoWeekToMonth")]
	public partial class IsoWeekToMonth : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IsoWeekToMonthId;
		
		private byte _IsoWeekNumber;
		
		private short _Year;
		
		private byte _Month;
		
		private System.Nullable<System.DateTime> _MonthDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIsoWeekToMonthIdChanging(int value);
    partial void OnIsoWeekToMonthIdChanged();
    partial void OnIsoWeekNumberChanging(byte value);
    partial void OnIsoWeekNumberChanged();
    partial void OnYearChanging(short value);
    partial void OnYearChanged();
    partial void OnMonthChanging(byte value);
    partial void OnMonthChanged();
    partial void OnMonthDateChanging(System.Nullable<System.DateTime> value);
    partial void OnMonthDateChanged();
    #endregion
		
		public IsoWeekToMonth()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsoWeekToMonthId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IsoWeekToMonthId
		{
			get
			{
				return this._IsoWeekToMonthId;
			}
			set
			{
				if ((this._IsoWeekToMonthId != value))
				{
					this.OnIsoWeekToMonthIdChanging(value);
					this.SendPropertyChanging();
					this._IsoWeekToMonthId = value;
					this.SendPropertyChanged("IsoWeekToMonthId");
					this.OnIsoWeekToMonthIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsoWeekNumber", DbType="TinyInt NOT NULL")]
		public byte IsoWeekNumber
		{
			get
			{
				return this._IsoWeekNumber;
			}
			set
			{
				if ((this._IsoWeekNumber != value))
				{
					this.OnIsoWeekNumberChanging(value);
					this.SendPropertyChanging();
					this._IsoWeekNumber = value;
					this.SendPropertyChanged("IsoWeekNumber");
					this.OnIsoWeekNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="SmallInt NOT NULL")]
		public short Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Month", DbType="TinyInt NOT NULL")]
		public byte Month
		{
			get
			{
				return this._Month;
			}
			set
			{
				if ((this._Month != value))
				{
					this.OnMonthChanging(value);
					this.SendPropertyChanging();
					this._Month = value;
					this.SendPropertyChanged("Month");
					this.OnMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonthDate", DbType="Date")]
		public System.Nullable<System.DateTime> MonthDate
		{
			get
			{
				return this._MonthDate;
			}
			set
			{
				if ((this._MonthDate != value))
				{
					this.OnMonthDateChanging(value);
					this.SendPropertyChanging();
					this._MonthDate = value;
					this.SendPropertyChanged("MonthDate");
					this.OnMonthDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MARS_CMS_NECESSARY_FLEET")]
	public partial class MARS_CMS_NECESSARY_FLEET : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _COUNTRY;
		
		private int _CMS_LOCATION_GROUP_ID;
		
		private int _CAR_CLASS_ID;
		
		private System.Nullable<decimal> _UTILISATION;
		
		private System.Nullable<decimal> _NONREV_FLEET;
		
		private int _MarsCmsNessaryFleetId;
		
		private EntityRef<CAR_GROUP> _CAR_GROUP;
		
		private EntityRef<CMS_LOCATION_GROUP> _CMS_LOCATION_GROUP;
		
		private EntityRef<COUNTRy> _COUNTRy1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCOUNTRYChanging(string value);
    partial void OnCOUNTRYChanged();
    partial void OnCMS_LOCATION_GROUP_IDChanging(int value);
    partial void OnCMS_LOCATION_GROUP_IDChanged();
    partial void OnCAR_CLASS_IDChanging(int value);
    partial void OnCAR_CLASS_IDChanged();
    partial void OnUTILISATIONChanging(System.Nullable<decimal> value);
    partial void OnUTILISATIONChanged();
    partial void OnNONREV_FLEETChanging(System.Nullable<decimal> value);
    partial void OnNONREV_FLEETChanged();
    partial void OnMarsCmsNessaryFleetIdChanging(int value);
    partial void OnMarsCmsNessaryFleetIdChanged();
    #endregion
		
		public MARS_CMS_NECESSARY_FLEET()
		{
			this._CAR_GROUP = default(EntityRef<CAR_GROUP>);
			this._CMS_LOCATION_GROUP = default(EntityRef<CMS_LOCATION_GROUP>);
			this._COUNTRy1 = default(EntityRef<COUNTRy>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COUNTRY", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string COUNTRY
		{
			get
			{
				return this._COUNTRY;
			}
			set
			{
				if ((this._COUNTRY != value))
				{
					if (this._COUNTRy1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCOUNTRYChanging(value);
					this.SendPropertyChanging();
					this._COUNTRY = value;
					this.SendPropertyChanged("COUNTRY");
					this.OnCOUNTRYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CMS_LOCATION_GROUP_ID", DbType="Int NOT NULL")]
		public int CMS_LOCATION_GROUP_ID
		{
			get
			{
				return this._CMS_LOCATION_GROUP_ID;
			}
			set
			{
				if ((this._CMS_LOCATION_GROUP_ID != value))
				{
					if (this._CMS_LOCATION_GROUP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCMS_LOCATION_GROUP_IDChanging(value);
					this.SendPropertyChanging();
					this._CMS_LOCATION_GROUP_ID = value;
					this.SendPropertyChanged("CMS_LOCATION_GROUP_ID");
					this.OnCMS_LOCATION_GROUP_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CAR_CLASS_ID", DbType="Int NOT NULL")]
		public int CAR_CLASS_ID
		{
			get
			{
				return this._CAR_CLASS_ID;
			}
			set
			{
				if ((this._CAR_CLASS_ID != value))
				{
					if (this._CAR_GROUP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCAR_CLASS_IDChanging(value);
					this.SendPropertyChanging();
					this._CAR_CLASS_ID = value;
					this.SendPropertyChanged("CAR_CLASS_ID");
					this.OnCAR_CLASS_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UTILISATION", DbType="Decimal(5,2)")]
		public System.Nullable<decimal> UTILISATION
		{
			get
			{
				return this._UTILISATION;
			}
			set
			{
				if ((this._UTILISATION != value))
				{
					this.OnUTILISATIONChanging(value);
					this.SendPropertyChanging();
					this._UTILISATION = value;
					this.SendPropertyChanged("UTILISATION");
					this.OnUTILISATIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NONREV_FLEET", DbType="Decimal(5,2)")]
		public System.Nullable<decimal> NONREV_FLEET
		{
			get
			{
				return this._NONREV_FLEET;
			}
			set
			{
				if ((this._NONREV_FLEET != value))
				{
					this.OnNONREV_FLEETChanging(value);
					this.SendPropertyChanging();
					this._NONREV_FLEET = value;
					this.SendPropertyChanged("NONREV_FLEET");
					this.OnNONREV_FLEETChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarsCmsNessaryFleetId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MarsCmsNessaryFleetId
		{
			get
			{
				return this._MarsCmsNessaryFleetId;
			}
			set
			{
				if ((this._MarsCmsNessaryFleetId != value))
				{
					this.OnMarsCmsNessaryFleetIdChanging(value);
					this.SendPropertyChanging();
					this._MarsCmsNessaryFleetId = value;
					this.SendPropertyChanged("MarsCmsNessaryFleetId");
					this.OnMarsCmsNessaryFleetIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CAR_GROUP_MARS_CMS_NECESSARY_FLEET", Storage="_CAR_GROUP", ThisKey="CAR_CLASS_ID", OtherKey="car_group_id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public CAR_GROUP CAR_GROUP
		{
			get
			{
				return this._CAR_GROUP.Entity;
			}
			set
			{
				CAR_GROUP previousValue = this._CAR_GROUP.Entity;
				if (((previousValue != value) 
							|| (this._CAR_GROUP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CAR_GROUP.Entity = null;
						previousValue.MARS_CMS_NECESSARY_FLEETs.Remove(this);
					}
					this._CAR_GROUP.Entity = value;
					if ((value != null))
					{
						value.MARS_CMS_NECESSARY_FLEETs.Add(this);
						this._CAR_CLASS_ID = value.car_group_id;
					}
					else
					{
						this._CAR_CLASS_ID = default(int);
					}
					this.SendPropertyChanged("CAR_GROUP");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CMS_LOCATION_GROUP_MARS_CMS_NECESSARY_FLEET", Storage="_CMS_LOCATION_GROUP", ThisKey="CMS_LOCATION_GROUP_ID", OtherKey="cms_location_group_id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public CMS_LOCATION_GROUP CMS_LOCATION_GROUP
		{
			get
			{
				return this._CMS_LOCATION_GROUP.Entity;
			}
			set
			{
				CMS_LOCATION_GROUP previousValue = this._CMS_LOCATION_GROUP.Entity;
				if (((previousValue != value) 
							|| (this._CMS_LOCATION_GROUP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CMS_LOCATION_GROUP.Entity = null;
						previousValue.MARS_CMS_NECESSARY_FLEETs.Remove(this);
					}
					this._CMS_LOCATION_GROUP.Entity = value;
					if ((value != null))
					{
						value.MARS_CMS_NECESSARY_FLEETs.Add(this);
						this._CMS_LOCATION_GROUP_ID = value.cms_location_group_id;
					}
					else
					{
						this._CMS_LOCATION_GROUP_ID = default(int);
					}
					this.SendPropertyChanged("CMS_LOCATION_GROUP");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="COUNTRy_MARS_CMS_NECESSARY_FLEET", Storage="_COUNTRy1", ThisKey="COUNTRY", OtherKey="country1", IsForeignKey=true)]
		public COUNTRy COUNTRy1
		{
			get
			{
				return this._COUNTRy1.Entity;
			}
			set
			{
				COUNTRy previousValue = this._COUNTRy1.Entity;
				if (((previousValue != value) 
							|| (this._COUNTRy1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._COUNTRy1.Entity = null;
						previousValue.MARS_CMS_NECESSARY_FLEETs.Remove(this);
					}
					this._COUNTRy1.Entity = value;
					if ((value != null))
					{
						value.MARS_CMS_NECESSARY_FLEETs.Add(this);
						this._COUNTRY = value.country1;
					}
					else
					{
						this._COUNTRY = default(string);
					}
					this.SendPropertyChanged("COUNTRy1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Fao.MinCommercialSegmentScenario")]
	public partial class MinCommercialSegmentScenario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MinCommercialSegmentScenarioId;
		
		private string _ScenarioName;
		
		private string _Description;
		
		private int _CountryId;
		
		private EntitySet<MinCommercialSegment> _MinCommercialSegments;
		
		private EntityRef<COUNTRy> _COUNTRy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMinCommercialSegmentScenarioIdChanging(int value);
    partial void OnMinCommercialSegmentScenarioIdChanged();
    partial void OnScenarioNameChanging(string value);
    partial void OnScenarioNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCountryIdChanging(int value);
    partial void OnCountryIdChanged();
    #endregion
		
		public MinCommercialSegmentScenario()
		{
			this._MinCommercialSegments = new EntitySet<MinCommercialSegment>(new Action<MinCommercialSegment>(this.attach_MinCommercialSegments), new Action<MinCommercialSegment>(this.detach_MinCommercialSegments));
			this._COUNTRy = default(EntityRef<COUNTRy>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinCommercialSegmentScenarioId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MinCommercialSegmentScenarioId
		{
			get
			{
				return this._MinCommercialSegmentScenarioId;
			}
			set
			{
				if ((this._MinCommercialSegmentScenarioId != value))
				{
					this.OnMinCommercialSegmentScenarioIdChanging(value);
					this.SendPropertyChanging();
					this._MinCommercialSegmentScenarioId = value;
					this.SendPropertyChanged("MinCommercialSegmentScenarioId");
					this.OnMinCommercialSegmentScenarioIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScenarioName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ScenarioName
		{
			get
			{
				return this._ScenarioName;
			}
			set
			{
				if ((this._ScenarioName != value))
				{
					this.OnScenarioNameChanging(value);
					this.SendPropertyChanging();
					this._ScenarioName = value;
					this.SendPropertyChanged("ScenarioName");
					this.OnScenarioNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(1000)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryId", DbType="Int NOT NULL")]
		public int CountryId
		{
			get
			{
				return this._CountryId;
			}
			set
			{
				if ((this._CountryId != value))
				{
					if (this._COUNTRy.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCountryIdChanging(value);
					this.SendPropertyChanging();
					this._CountryId = value;
					this.SendPropertyChanged("CountryId");
					this.OnCountryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MinCommercialSegmentScenario_MinCommercialSegment", Storage="_MinCommercialSegments", ThisKey="MinCommercialSegmentScenarioId", OtherKey="MinCommercialSegmentScenarioId")]
		public EntitySet<MinCommercialSegment> MinCommercialSegments
		{
			get
			{
				return this._MinCommercialSegments;
			}
			set
			{
				this._MinCommercialSegments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="COUNTRy_MinCommercialSegmentScenario", Storage="_COUNTRy", ThisKey="CountryId", OtherKey="CountryId", IsForeignKey=true)]
		public COUNTRy COUNTRy
		{
			get
			{
				return this._COUNTRy.Entity;
			}
			set
			{
				COUNTRy previousValue = this._COUNTRy.Entity;
				if (((previousValue != value) 
							|| (this._COUNTRy.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._COUNTRy.Entity = null;
						previousValue.MinCommercialSegmentScenarios.Remove(this);
					}
					this._COUNTRy.Entity = value;
					if ((value != null))
					{
						value.MinCommercialSegmentScenarios.Add(this);
						this._CountryId = value.CountryId;
					}
					else
					{
						this._CountryId = default(int);
					}
					this.SendPropertyChanged("COUNTRy");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MinCommercialSegments(MinCommercialSegment entity)
		{
			this.SendPropertyChanging();
			entity.MinCommercialSegmentScenario = this;
		}
		
		private void detach_MinCommercialSegments(MinCommercialSegment entity)
		{
			this.SendPropertyChanging();
			entity.MinCommercialSegmentScenario = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Fao.MaxFleetFactorScenario")]
	public partial class MaxFleetFactorScenario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaxFleetFactorScenarioId;
		
		private string _ScenarioName;
		
		private string _Description;
		
		private int _CountryId;
		
		private EntitySet<MaxFleetFactor> _MaxFleetFactors;
		
		private EntityRef<COUNTRy> _COUNTRy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaxFleetFactorScenarioIdChanging(int value);
    partial void OnMaxFleetFactorScenarioIdChanged();
    partial void OnScenarioNameChanging(string value);
    partial void OnScenarioNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCountryIdChanging(int value);
    partial void OnCountryIdChanged();
    #endregion
		
		public MaxFleetFactorScenario()
		{
			this._MaxFleetFactors = new EntitySet<MaxFleetFactor>(new Action<MaxFleetFactor>(this.attach_MaxFleetFactors), new Action<MaxFleetFactor>(this.detach_MaxFleetFactors));
			this._COUNTRy = default(EntityRef<COUNTRy>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxFleetFactorScenarioId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaxFleetFactorScenarioId
		{
			get
			{
				return this._MaxFleetFactorScenarioId;
			}
			set
			{
				if ((this._MaxFleetFactorScenarioId != value))
				{
					this.OnMaxFleetFactorScenarioIdChanging(value);
					this.SendPropertyChanging();
					this._MaxFleetFactorScenarioId = value;
					this.SendPropertyChanged("MaxFleetFactorScenarioId");
					this.OnMaxFleetFactorScenarioIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScenarioName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ScenarioName
		{
			get
			{
				return this._ScenarioName;
			}
			set
			{
				if ((this._ScenarioName != value))
				{
					this.OnScenarioNameChanging(value);
					this.SendPropertyChanging();
					this._ScenarioName = value;
					this.SendPropertyChanged("ScenarioName");
					this.OnScenarioNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(1000)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryId", DbType="Int NOT NULL")]
		public int CountryId
		{
			get
			{
				return this._CountryId;
			}
			set
			{
				if ((this._CountryId != value))
				{
					if (this._COUNTRy.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCountryIdChanging(value);
					this.SendPropertyChanging();
					this._CountryId = value;
					this.SendPropertyChanged("CountryId");
					this.OnCountryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MaxFleetFactorScenario_MaxFleetFactor", Storage="_MaxFleetFactors", ThisKey="MaxFleetFactorScenarioId", OtherKey="MaxFleetFactorScenarioId")]
		public EntitySet<MaxFleetFactor> MaxFleetFactors
		{
			get
			{
				return this._MaxFleetFactors;
			}
			set
			{
				this._MaxFleetFactors.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="COUNTRy_MaxFleetFactorScenario", Storage="_COUNTRy", ThisKey="CountryId", OtherKey="CountryId", IsForeignKey=true)]
		public COUNTRy COUNTRy
		{
			get
			{
				return this._COUNTRy.Entity;
			}
			set
			{
				COUNTRy previousValue = this._COUNTRy.Entity;
				if (((previousValue != value) 
							|| (this._COUNTRy.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._COUNTRy.Entity = null;
						previousValue.MaxFleetFactorScenarios.Remove(this);
					}
					this._COUNTRy.Entity = value;
					if ((value != null))
					{
						value.MaxFleetFactorScenarios.Add(this);
						this._CountryId = value.CountryId;
					}
					else
					{
						this._CountryId = default(int);
					}
					this.SendPropertyChanged("COUNTRy");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MaxFleetFactors(MaxFleetFactor entity)
		{
			this.SendPropertyChanging();
			entity.MaxFleetFactorScenario = this;
		}
		
		private void detach_MaxFleetFactors(MaxFleetFactor entity)
		{
			this.SendPropertyChanging();
			entity.MaxFleetFactorScenario = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MarsUser")]
	public partial class MarsUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MarsUserId;
		
		private string _EmployeeId;
		
		private System.Nullable<int> _CompanyId;
		
		private int _CompanyTypeId;
		
		private EntitySet<MinCommercialSegment> _MinCommercialSegments;
		
		private EntitySet<MaxFleetFactor> _MaxFleetFactors;
		
		private EntitySet<AdditionPlan> _AdditionPlans;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMarsUserIdChanging(int value);
    partial void OnMarsUserIdChanged();
    partial void OnEmployeeIdChanging(string value);
    partial void OnEmployeeIdChanged();
    partial void OnCompanyIdChanging(System.Nullable<int> value);
    partial void OnCompanyIdChanged();
    partial void OnCompanyTypeIdChanging(int value);
    partial void OnCompanyTypeIdChanged();
    #endregion
		
		public MarsUser()
		{
			this._MinCommercialSegments = new EntitySet<MinCommercialSegment>(new Action<MinCommercialSegment>(this.attach_MinCommercialSegments), new Action<MinCommercialSegment>(this.detach_MinCommercialSegments));
			this._MaxFleetFactors = new EntitySet<MaxFleetFactor>(new Action<MaxFleetFactor>(this.attach_MaxFleetFactors), new Action<MaxFleetFactor>(this.detach_MaxFleetFactors));
			this._AdditionPlans = new EntitySet<AdditionPlan>(new Action<AdditionPlan>(this.attach_AdditionPlans), new Action<AdditionPlan>(this.detach_AdditionPlans));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarsUserId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MarsUserId
		{
			get
			{
				return this._MarsUserId;
			}
			set
			{
				if ((this._MarsUserId != value))
				{
					this.OnMarsUserIdChanging(value);
					this.SendPropertyChanging();
					this._MarsUserId = value;
					this.SendPropertyChanged("MarsUserId");
					this.OnMarsUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeId", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string EmployeeId
		{
			get
			{
				return this._EmployeeId;
			}
			set
			{
				if ((this._EmployeeId != value))
				{
					this.OnEmployeeIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeeId = value;
					this.SendPropertyChanged("EmployeeId");
					this.OnEmployeeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", DbType="Int")]
		public System.Nullable<int> CompanyId
		{
			get
			{
				return this._CompanyId;
			}
			set
			{
				if ((this._CompanyId != value))
				{
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._CompanyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyTypeId", DbType="Int NOT NULL")]
		public int CompanyTypeId
		{
			get
			{
				return this._CompanyTypeId;
			}
			set
			{
				if ((this._CompanyTypeId != value))
				{
					this.OnCompanyTypeIdChanging(value);
					this.SendPropertyChanging();
					this._CompanyTypeId = value;
					this.SendPropertyChanged("CompanyTypeId");
					this.OnCompanyTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MarsUser_MinCommercialSegment", Storage="_MinCommercialSegments", ThisKey="MarsUserId", OtherKey="MarsUserId")]
		public EntitySet<MinCommercialSegment> MinCommercialSegments
		{
			get
			{
				return this._MinCommercialSegments;
			}
			set
			{
				this._MinCommercialSegments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MarsUser_MaxFleetFactor", Storage="_MaxFleetFactors", ThisKey="MarsUserId", OtherKey="MarsUserId")]
		public EntitySet<MaxFleetFactor> MaxFleetFactors
		{
			get
			{
				return this._MaxFleetFactors;
			}
			set
			{
				this._MaxFleetFactors.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MarsUser_AdditionPlan", Storage="_AdditionPlans", ThisKey="MarsUserId", OtherKey="MarsUserId")]
		public EntitySet<AdditionPlan> AdditionPlans
		{
			get
			{
				return this._AdditionPlans;
			}
			set
			{
				this._AdditionPlans.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MinCommercialSegments(MinCommercialSegment entity)
		{
			this.SendPropertyChanging();
			entity.MarsUser = this;
		}
		
		private void detach_MinCommercialSegments(MinCommercialSegment entity)
		{
			this.SendPropertyChanging();
			entity.MarsUser = null;
		}
		
		private void attach_MaxFleetFactors(MaxFleetFactor entity)
		{
			this.SendPropertyChanging();
			entity.MarsUser = this;
		}
		
		private void detach_MaxFleetFactors(MaxFleetFactor entity)
		{
			this.SendPropertyChanging();
			entity.MarsUser = null;
		}
		
		private void attach_AdditionPlans(AdditionPlan entity)
		{
			this.SendPropertyChanging();
			entity.MarsUser = this;
		}
		
		private void detach_AdditionPlans(AdditionPlan entity)
		{
			this.SendPropertyChanging();
			entity.MarsUser = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Fao.MinCommercialSegment")]
	public partial class MinCommercialSegment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MinCommercialSegmentId;
		
		private int _MinCommercialSegmentScenarioId;
		
		private int _LocationId;
		
		private int _CarSegmentId;
		
		private int _CommercialCarSegmentId;
		
		private double _Percentage;
		
		private System.DateTime _UpdatedOn;
		
		private int _MarsUserId;
		
		private EntityRef<CAR_SEGMENT> _CAR_SEGMENT;
		
		private EntityRef<CommercialCarSegment> _CommercialCarSegment;
		
		private EntityRef<LOCATION> _LOCATION;
		
		private EntityRef<MarsUser> _MarsUser;
		
		private EntityRef<MinCommercialSegmentScenario> _MinCommercialSegmentScenario;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMinCommercialSegmentIdChanging(int value);
    partial void OnMinCommercialSegmentIdChanged();
    partial void OnMinCommercialSegmentScenarioIdChanging(int value);
    partial void OnMinCommercialSegmentScenarioIdChanged();
    partial void OnLocationIdChanging(int value);
    partial void OnLocationIdChanged();
    partial void OnCarSegmentIdChanging(int value);
    partial void OnCarSegmentIdChanged();
    partial void OnCommercialCarSegmentIdChanging(int value);
    partial void OnCommercialCarSegmentIdChanged();
    partial void OnPercentageChanging(double value);
    partial void OnPercentageChanged();
    partial void OnUpdatedOnChanging(System.DateTime value);
    partial void OnUpdatedOnChanged();
    partial void OnMarsUserIdChanging(int value);
    partial void OnMarsUserIdChanged();
    #endregion
		
		public MinCommercialSegment()
		{
			this._CAR_SEGMENT = default(EntityRef<CAR_SEGMENT>);
			this._CommercialCarSegment = default(EntityRef<CommercialCarSegment>);
			this._LOCATION = default(EntityRef<LOCATION>);
			this._MarsUser = default(EntityRef<MarsUser>);
			this._MinCommercialSegmentScenario = default(EntityRef<MinCommercialSegmentScenario>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinCommercialSegmentId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MinCommercialSegmentId
		{
			get
			{
				return this._MinCommercialSegmentId;
			}
			set
			{
				if ((this._MinCommercialSegmentId != value))
				{
					this.OnMinCommercialSegmentIdChanging(value);
					this.SendPropertyChanging();
					this._MinCommercialSegmentId = value;
					this.SendPropertyChanged("MinCommercialSegmentId");
					this.OnMinCommercialSegmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinCommercialSegmentScenarioId", DbType="Int NOT NULL")]
		public int MinCommercialSegmentScenarioId
		{
			get
			{
				return this._MinCommercialSegmentScenarioId;
			}
			set
			{
				if ((this._MinCommercialSegmentScenarioId != value))
				{
					if (this._MinCommercialSegmentScenario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMinCommercialSegmentScenarioIdChanging(value);
					this.SendPropertyChanging();
					this._MinCommercialSegmentScenarioId = value;
					this.SendPropertyChanged("MinCommercialSegmentScenarioId");
					this.OnMinCommercialSegmentScenarioIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationId", DbType="Int NOT NULL")]
		public int LocationId
		{
			get
			{
				return this._LocationId;
			}
			set
			{
				if ((this._LocationId != value))
				{
					if (this._LOCATION.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLocationIdChanging(value);
					this.SendPropertyChanging();
					this._LocationId = value;
					this.SendPropertyChanged("LocationId");
					this.OnLocationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarSegmentId", DbType="Int NOT NULL")]
		public int CarSegmentId
		{
			get
			{
				return this._CarSegmentId;
			}
			set
			{
				if ((this._CarSegmentId != value))
				{
					if (this._CAR_SEGMENT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCarSegmentIdChanging(value);
					this.SendPropertyChanging();
					this._CarSegmentId = value;
					this.SendPropertyChanged("CarSegmentId");
					this.OnCarSegmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommercialCarSegmentId", DbType="Int NOT NULL")]
		public int CommercialCarSegmentId
		{
			get
			{
				return this._CommercialCarSegmentId;
			}
			set
			{
				if ((this._CommercialCarSegmentId != value))
				{
					if (this._CommercialCarSegment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCommercialCarSegmentIdChanging(value);
					this.SendPropertyChanging();
					this._CommercialCarSegmentId = value;
					this.SendPropertyChanged("CommercialCarSegmentId");
					this.OnCommercialCarSegmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Percentage", DbType="Float NOT NULL")]
		public double Percentage
		{
			get
			{
				return this._Percentage;
			}
			set
			{
				if ((this._Percentage != value))
				{
					this.OnPercentageChanging(value);
					this.SendPropertyChanging();
					this._Percentage = value;
					this.SendPropertyChanged("Percentage");
					this.OnPercentageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedOn", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedOn
		{
			get
			{
				return this._UpdatedOn;
			}
			set
			{
				if ((this._UpdatedOn != value))
				{
					this.OnUpdatedOnChanging(value);
					this.SendPropertyChanging();
					this._UpdatedOn = value;
					this.SendPropertyChanged("UpdatedOn");
					this.OnUpdatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarsUserId", DbType="Int NOT NULL")]
		public int MarsUserId
		{
			get
			{
				return this._MarsUserId;
			}
			set
			{
				if ((this._MarsUserId != value))
				{
					if (this._MarsUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMarsUserIdChanging(value);
					this.SendPropertyChanging();
					this._MarsUserId = value;
					this.SendPropertyChanged("MarsUserId");
					this.OnMarsUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CAR_SEGMENT_MinCommercialSegment", Storage="_CAR_SEGMENT", ThisKey="CarSegmentId", OtherKey="car_segment_id", IsForeignKey=true)]
		public CAR_SEGMENT CAR_SEGMENT
		{
			get
			{
				return this._CAR_SEGMENT.Entity;
			}
			set
			{
				CAR_SEGMENT previousValue = this._CAR_SEGMENT.Entity;
				if (((previousValue != value) 
							|| (this._CAR_SEGMENT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CAR_SEGMENT.Entity = null;
						previousValue.MinCommercialSegments.Remove(this);
					}
					this._CAR_SEGMENT.Entity = value;
					if ((value != null))
					{
						value.MinCommercialSegments.Add(this);
						this._CarSegmentId = value.car_segment_id;
					}
					else
					{
						this._CarSegmentId = default(int);
					}
					this.SendPropertyChanged("CAR_SEGMENT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CommercialCarSegment_MinCommercialSegment", Storage="_CommercialCarSegment", ThisKey="CommercialCarSegmentId", OtherKey="CommercialCarSegmentId", IsForeignKey=true)]
		public CommercialCarSegment CommercialCarSegment
		{
			get
			{
				return this._CommercialCarSegment.Entity;
			}
			set
			{
				CommercialCarSegment previousValue = this._CommercialCarSegment.Entity;
				if (((previousValue != value) 
							|| (this._CommercialCarSegment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CommercialCarSegment.Entity = null;
						previousValue.MinCommercialSegments.Remove(this);
					}
					this._CommercialCarSegment.Entity = value;
					if ((value != null))
					{
						value.MinCommercialSegments.Add(this);
						this._CommercialCarSegmentId = value.CommercialCarSegmentId;
					}
					else
					{
						this._CommercialCarSegmentId = default(int);
					}
					this.SendPropertyChanged("CommercialCarSegment");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOCATION_MinCommercialSegment", Storage="_LOCATION", ThisKey="LocationId", OtherKey="dim_Location_id", IsForeignKey=true)]
		public LOCATION LOCATION
		{
			get
			{
				return this._LOCATION.Entity;
			}
			set
			{
				LOCATION previousValue = this._LOCATION.Entity;
				if (((previousValue != value) 
							|| (this._LOCATION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOCATION.Entity = null;
						previousValue.MinCommercialSegments.Remove(this);
					}
					this._LOCATION.Entity = value;
					if ((value != null))
					{
						value.MinCommercialSegments.Add(this);
						this._LocationId = value.dim_Location_id;
					}
					else
					{
						this._LocationId = default(int);
					}
					this.SendPropertyChanged("LOCATION");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MarsUser_MinCommercialSegment", Storage="_MarsUser", ThisKey="MarsUserId", OtherKey="MarsUserId", IsForeignKey=true)]
		public MarsUser MarsUser
		{
			get
			{
				return this._MarsUser.Entity;
			}
			set
			{
				MarsUser previousValue = this._MarsUser.Entity;
				if (((previousValue != value) 
							|| (this._MarsUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MarsUser.Entity = null;
						previousValue.MinCommercialSegments.Remove(this);
					}
					this._MarsUser.Entity = value;
					if ((value != null))
					{
						value.MinCommercialSegments.Add(this);
						this._MarsUserId = value.MarsUserId;
					}
					else
					{
						this._MarsUserId = default(int);
					}
					this.SendPropertyChanged("MarsUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MinCommercialSegmentScenario_MinCommercialSegment", Storage="_MinCommercialSegmentScenario", ThisKey="MinCommercialSegmentScenarioId", OtherKey="MinCommercialSegmentScenarioId", IsForeignKey=true)]
		public MinCommercialSegmentScenario MinCommercialSegmentScenario
		{
			get
			{
				return this._MinCommercialSegmentScenario.Entity;
			}
			set
			{
				MinCommercialSegmentScenario previousValue = this._MinCommercialSegmentScenario.Entity;
				if (((previousValue != value) 
							|| (this._MinCommercialSegmentScenario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MinCommercialSegmentScenario.Entity = null;
						previousValue.MinCommercialSegments.Remove(this);
					}
					this._MinCommercialSegmentScenario.Entity = value;
					if ((value != null))
					{
						value.MinCommercialSegments.Add(this);
						this._MinCommercialSegmentScenarioId = value.MinCommercialSegmentScenarioId;
					}
					else
					{
						this._MinCommercialSegmentScenarioId = default(int);
					}
					this.SendPropertyChanged("MinCommercialSegmentScenario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Fao.MaxFleetFactor")]
	public partial class MaxFleetFactor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaxFleetFactorId;
		
		private int _MaxFleetFactorScenarioId;
		
		private int _LocationId;
		
		private int _CarGroupId;
		
		private byte _DayOfWeekId;
		
		private System.Nullable<double> _NonRevPercentage;
		
		private System.Nullable<double> _UtilizationPercentage;
		
		private System.DateTime _UpdatedOn;
		
		private int _MarsUserId;
		
		private EntityRef<CAR_GROUP> _CAR_GROUP;
		
		private EntityRef<LOCATION> _LOCATION;
		
		private EntityRef<MarsUser> _MarsUser;
		
		private EntityRef<MaxFleetFactorScenario> _MaxFleetFactorScenario;
		
		private EntityRef<WeekDay> _WeekDay;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaxFleetFactorIdChanging(int value);
    partial void OnMaxFleetFactorIdChanged();
    partial void OnMaxFleetFactorScenarioIdChanging(int value);
    partial void OnMaxFleetFactorScenarioIdChanged();
    partial void OnLocationIdChanging(int value);
    partial void OnLocationIdChanged();
    partial void OnCarGroupIdChanging(int value);
    partial void OnCarGroupIdChanged();
    partial void OnDayOfWeekIdChanging(byte value);
    partial void OnDayOfWeekIdChanged();
    partial void OnNonRevPercentageChanging(System.Nullable<double> value);
    partial void OnNonRevPercentageChanged();
    partial void OnUtilizationPercentageChanging(System.Nullable<double> value);
    partial void OnUtilizationPercentageChanged();
    partial void OnUpdatedOnChanging(System.DateTime value);
    partial void OnUpdatedOnChanged();
    partial void OnMarsUserIdChanging(int value);
    partial void OnMarsUserIdChanged();
    #endregion
		
		public MaxFleetFactor()
		{
			this._CAR_GROUP = default(EntityRef<CAR_GROUP>);
			this._LOCATION = default(EntityRef<LOCATION>);
			this._MarsUser = default(EntityRef<MarsUser>);
			this._MaxFleetFactorScenario = default(EntityRef<MaxFleetFactorScenario>);
			this._WeekDay = default(EntityRef<WeekDay>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxFleetFactorId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaxFleetFactorId
		{
			get
			{
				return this._MaxFleetFactorId;
			}
			set
			{
				if ((this._MaxFleetFactorId != value))
				{
					this.OnMaxFleetFactorIdChanging(value);
					this.SendPropertyChanging();
					this._MaxFleetFactorId = value;
					this.SendPropertyChanged("MaxFleetFactorId");
					this.OnMaxFleetFactorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxFleetFactorScenarioId", DbType="Int NOT NULL")]
		public int MaxFleetFactorScenarioId
		{
			get
			{
				return this._MaxFleetFactorScenarioId;
			}
			set
			{
				if ((this._MaxFleetFactorScenarioId != value))
				{
					if (this._MaxFleetFactorScenario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaxFleetFactorScenarioIdChanging(value);
					this.SendPropertyChanging();
					this._MaxFleetFactorScenarioId = value;
					this.SendPropertyChanged("MaxFleetFactorScenarioId");
					this.OnMaxFleetFactorScenarioIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationId", DbType="Int NOT NULL")]
		public int LocationId
		{
			get
			{
				return this._LocationId;
			}
			set
			{
				if ((this._LocationId != value))
				{
					if (this._LOCATION.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLocationIdChanging(value);
					this.SendPropertyChanging();
					this._LocationId = value;
					this.SendPropertyChanged("LocationId");
					this.OnLocationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarGroupId", DbType="Int NOT NULL")]
		public int CarGroupId
		{
			get
			{
				return this._CarGroupId;
			}
			set
			{
				if ((this._CarGroupId != value))
				{
					if (this._CAR_GROUP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCarGroupIdChanging(value);
					this.SendPropertyChanging();
					this._CarGroupId = value;
					this.SendPropertyChanged("CarGroupId");
					this.OnCarGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DayOfWeekId", DbType="TinyInt NOT NULL")]
		public byte DayOfWeekId
		{
			get
			{
				return this._DayOfWeekId;
			}
			set
			{
				if ((this._DayOfWeekId != value))
				{
					if (this._WeekDay.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDayOfWeekIdChanging(value);
					this.SendPropertyChanging();
					this._DayOfWeekId = value;
					this.SendPropertyChanged("DayOfWeekId");
					this.OnDayOfWeekIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NonRevPercentage", DbType="Float")]
		public System.Nullable<double> NonRevPercentage
		{
			get
			{
				return this._NonRevPercentage;
			}
			set
			{
				if ((this._NonRevPercentage != value))
				{
					this.OnNonRevPercentageChanging(value);
					this.SendPropertyChanging();
					this._NonRevPercentage = value;
					this.SendPropertyChanged("NonRevPercentage");
					this.OnNonRevPercentageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UtilizationPercentage", DbType="Float")]
		public System.Nullable<double> UtilizationPercentage
		{
			get
			{
				return this._UtilizationPercentage;
			}
			set
			{
				if ((this._UtilizationPercentage != value))
				{
					this.OnUtilizationPercentageChanging(value);
					this.SendPropertyChanging();
					this._UtilizationPercentage = value;
					this.SendPropertyChanged("UtilizationPercentage");
					this.OnUtilizationPercentageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedOn", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedOn
		{
			get
			{
				return this._UpdatedOn;
			}
			set
			{
				if ((this._UpdatedOn != value))
				{
					this.OnUpdatedOnChanging(value);
					this.SendPropertyChanging();
					this._UpdatedOn = value;
					this.SendPropertyChanged("UpdatedOn");
					this.OnUpdatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarsUserId", DbType="Int NOT NULL")]
		public int MarsUserId
		{
			get
			{
				return this._MarsUserId;
			}
			set
			{
				if ((this._MarsUserId != value))
				{
					if (this._MarsUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMarsUserIdChanging(value);
					this.SendPropertyChanging();
					this._MarsUserId = value;
					this.SendPropertyChanged("MarsUserId");
					this.OnMarsUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CAR_GROUP_MaxFleetFactor", Storage="_CAR_GROUP", ThisKey="CarGroupId", OtherKey="car_group_id", IsForeignKey=true)]
		public CAR_GROUP CAR_GROUP
		{
			get
			{
				return this._CAR_GROUP.Entity;
			}
			set
			{
				CAR_GROUP previousValue = this._CAR_GROUP.Entity;
				if (((previousValue != value) 
							|| (this._CAR_GROUP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CAR_GROUP.Entity = null;
						previousValue.MaxFleetFactors.Remove(this);
					}
					this._CAR_GROUP.Entity = value;
					if ((value != null))
					{
						value.MaxFleetFactors.Add(this);
						this._CarGroupId = value.car_group_id;
					}
					else
					{
						this._CarGroupId = default(int);
					}
					this.SendPropertyChanged("CAR_GROUP");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOCATION_MaxFleetFactor", Storage="_LOCATION", ThisKey="LocationId", OtherKey="dim_Location_id", IsForeignKey=true)]
		public LOCATION LOCATION
		{
			get
			{
				return this._LOCATION.Entity;
			}
			set
			{
				LOCATION previousValue = this._LOCATION.Entity;
				if (((previousValue != value) 
							|| (this._LOCATION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOCATION.Entity = null;
						previousValue.MaxFleetFactors.Remove(this);
					}
					this._LOCATION.Entity = value;
					if ((value != null))
					{
						value.MaxFleetFactors.Add(this);
						this._LocationId = value.dim_Location_id;
					}
					else
					{
						this._LocationId = default(int);
					}
					this.SendPropertyChanged("LOCATION");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MarsUser_MaxFleetFactor", Storage="_MarsUser", ThisKey="MarsUserId", OtherKey="MarsUserId", IsForeignKey=true)]
		public MarsUser MarsUser
		{
			get
			{
				return this._MarsUser.Entity;
			}
			set
			{
				MarsUser previousValue = this._MarsUser.Entity;
				if (((previousValue != value) 
							|| (this._MarsUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MarsUser.Entity = null;
						previousValue.MaxFleetFactors.Remove(this);
					}
					this._MarsUser.Entity = value;
					if ((value != null))
					{
						value.MaxFleetFactors.Add(this);
						this._MarsUserId = value.MarsUserId;
					}
					else
					{
						this._MarsUserId = default(int);
					}
					this.SendPropertyChanged("MarsUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MaxFleetFactorScenario_MaxFleetFactor", Storage="_MaxFleetFactorScenario", ThisKey="MaxFleetFactorScenarioId", OtherKey="MaxFleetFactorScenarioId", IsForeignKey=true)]
		public MaxFleetFactorScenario MaxFleetFactorScenario
		{
			get
			{
				return this._MaxFleetFactorScenario.Entity;
			}
			set
			{
				MaxFleetFactorScenario previousValue = this._MaxFleetFactorScenario.Entity;
				if (((previousValue != value) 
							|| (this._MaxFleetFactorScenario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MaxFleetFactorScenario.Entity = null;
						previousValue.MaxFleetFactors.Remove(this);
					}
					this._MaxFleetFactorScenario.Entity = value;
					if ((value != null))
					{
						value.MaxFleetFactors.Add(this);
						this._MaxFleetFactorScenarioId = value.MaxFleetFactorScenarioId;
					}
					else
					{
						this._MaxFleetFactorScenarioId = default(int);
					}
					this.SendPropertyChanged("MaxFleetFactorScenario");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WeekDay_MaxFleetFactor", Storage="_WeekDay", ThisKey="DayOfWeekId", OtherKey="DayOfWeekId", IsForeignKey=true)]
		public WeekDay WeekDay
		{
			get
			{
				return this._WeekDay.Entity;
			}
			set
			{
				WeekDay previousValue = this._WeekDay.Entity;
				if (((previousValue != value) 
							|| (this._WeekDay.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WeekDay.Entity = null;
						previousValue.MaxFleetFactors.Remove(this);
					}
					this._WeekDay.Entity = value;
					if ((value != null))
					{
						value.MaxFleetFactors.Add(this);
						this._DayOfWeekId = value.DayOfWeekId;
					}
					else
					{
						this._DayOfWeekId = default(byte);
					}
					this.SendPropertyChanged("WeekDay");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CurrencyUsdRate")]
	public partial class CurrencyUsdRate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CurrencyUsdRateId;
		
		private short _Year;
		
		private double _Eur;
		
		private double _Gbp;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCurrencyUsdRateIdChanging(int value);
    partial void OnCurrencyUsdRateIdChanged();
    partial void OnYearChanging(short value);
    partial void OnYearChanged();
    partial void OnEurChanging(double value);
    partial void OnEurChanged();
    partial void OnGbpChanging(double value);
    partial void OnGbpChanged();
    #endregion
		
		public CurrencyUsdRate()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyUsdRateId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CurrencyUsdRateId
		{
			get
			{
				return this._CurrencyUsdRateId;
			}
			set
			{
				if ((this._CurrencyUsdRateId != value))
				{
					this.OnCurrencyUsdRateIdChanging(value);
					this.SendPropertyChanging();
					this._CurrencyUsdRateId = value;
					this.SendPropertyChanged("CurrencyUsdRateId");
					this.OnCurrencyUsdRateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="SmallInt NOT NULL")]
		public short Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Eur", DbType="Float NOT NULL")]
		public double Eur
		{
			get
			{
				return this._Eur;
			}
			set
			{
				if ((this._Eur != value))
				{
					this.OnEurChanging(value);
					this.SendPropertyChanging();
					this._Eur = value;
					this.SendPropertyChanged("Eur");
					this.OnEurChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gbp", DbType="Float NOT NULL")]
		public double Gbp
		{
			get
			{
				return this._Gbp;
			}
			set
			{
				if ((this._Gbp != value))
				{
					this.OnGbpChanging(value);
					this.SendPropertyChanging();
					this._Gbp = value;
					this.SendPropertyChanged("Gbp");
					this.OnGbpChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Fao.AdditionPlan")]
	public partial class AdditionPlan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AdditionPlanId;
		
		private string _MinComSegScenarioName;
		
		private string _MaxFleetScenarioName;
		
		private string _MinComSegSccenarioDescription;
		
		private string _MaxFleetScenarioDescription;
		
		private System.DateTime _StartRevenueDate;
		
		private System.DateTime _EndRevenueDate;
		
		private System.DateTime _CurrentDate;
		
		private int _WeeksCalculated;
		
		private System.DateTime _DateCreated;
		
		private string _CreatedBy;
		
		private string _Name;
		
		private int _CountryId;
		
		private int _MarsUserId;
		
		private bool _Applied;
		
		private string _LessonLearnt;
		
		private EntitySet<AdditionPlanMinMaxValue> _AdditionPlanMinMaxValues;
		
		private EntitySet<AdditionPlanEntry> _AdditionPlanEntries;
		
		private EntityRef<COUNTRy> _COUNTRy;
		
		private EntityRef<MarsUser> _MarsUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAdditionPlanIdChanging(int value);
    partial void OnAdditionPlanIdChanged();
    partial void OnMinComSegScenarioNameChanging(string value);
    partial void OnMinComSegScenarioNameChanged();
    partial void OnMaxFleetScenarioNameChanging(string value);
    partial void OnMaxFleetScenarioNameChanged();
    partial void OnMinComSegSccenarioDescriptionChanging(string value);
    partial void OnMinComSegSccenarioDescriptionChanged();
    partial void OnMaxFleetScenarioDescriptionChanging(string value);
    partial void OnMaxFleetScenarioDescriptionChanged();
    partial void OnStartRevenueDateChanging(System.DateTime value);
    partial void OnStartRevenueDateChanged();
    partial void OnEndRevenueDateChanging(System.DateTime value);
    partial void OnEndRevenueDateChanged();
    partial void OnCurrentDateChanging(System.DateTime value);
    partial void OnCurrentDateChanged();
    partial void OnWeeksCalculatedChanging(int value);
    partial void OnWeeksCalculatedChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCountryIdChanging(int value);
    partial void OnCountryIdChanged();
    partial void OnMarsUserIdChanging(int value);
    partial void OnMarsUserIdChanged();
    partial void OnAppliedChanging(bool value);
    partial void OnAppliedChanged();
    partial void OnLessonLearntChanging(string value);
    partial void OnLessonLearntChanged();
    #endregion
		
		public AdditionPlan()
		{
			this._AdditionPlanMinMaxValues = new EntitySet<AdditionPlanMinMaxValue>(new Action<AdditionPlanMinMaxValue>(this.attach_AdditionPlanMinMaxValues), new Action<AdditionPlanMinMaxValue>(this.detach_AdditionPlanMinMaxValues));
			this._AdditionPlanEntries = new EntitySet<AdditionPlanEntry>(new Action<AdditionPlanEntry>(this.attach_AdditionPlanEntries), new Action<AdditionPlanEntry>(this.detach_AdditionPlanEntries));
			this._COUNTRy = default(EntityRef<COUNTRy>);
			this._MarsUser = default(EntityRef<MarsUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdditionPlanId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AdditionPlanId
		{
			get
			{
				return this._AdditionPlanId;
			}
			set
			{
				if ((this._AdditionPlanId != value))
				{
					this.OnAdditionPlanIdChanging(value);
					this.SendPropertyChanging();
					this._AdditionPlanId = value;
					this.SendPropertyChanged("AdditionPlanId");
					this.OnAdditionPlanIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinComSegScenarioName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MinComSegScenarioName
		{
			get
			{
				return this._MinComSegScenarioName;
			}
			set
			{
				if ((this._MinComSegScenarioName != value))
				{
					this.OnMinComSegScenarioNameChanging(value);
					this.SendPropertyChanging();
					this._MinComSegScenarioName = value;
					this.SendPropertyChanged("MinComSegScenarioName");
					this.OnMinComSegScenarioNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxFleetScenarioName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MaxFleetScenarioName
		{
			get
			{
				return this._MaxFleetScenarioName;
			}
			set
			{
				if ((this._MaxFleetScenarioName != value))
				{
					this.OnMaxFleetScenarioNameChanging(value);
					this.SendPropertyChanging();
					this._MaxFleetScenarioName = value;
					this.SendPropertyChanged("MaxFleetScenarioName");
					this.OnMaxFleetScenarioNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinComSegSccenarioDescription", DbType="VarChar(1000) NOT NULL", CanBeNull=false)]
		public string MinComSegSccenarioDescription
		{
			get
			{
				return this._MinComSegSccenarioDescription;
			}
			set
			{
				if ((this._MinComSegSccenarioDescription != value))
				{
					this.OnMinComSegSccenarioDescriptionChanging(value);
					this.SendPropertyChanging();
					this._MinComSegSccenarioDescription = value;
					this.SendPropertyChanged("MinComSegSccenarioDescription");
					this.OnMinComSegSccenarioDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxFleetScenarioDescription", DbType="VarChar(1000) NOT NULL", CanBeNull=false)]
		public string MaxFleetScenarioDescription
		{
			get
			{
				return this._MaxFleetScenarioDescription;
			}
			set
			{
				if ((this._MaxFleetScenarioDescription != value))
				{
					this.OnMaxFleetScenarioDescriptionChanging(value);
					this.SendPropertyChanging();
					this._MaxFleetScenarioDescription = value;
					this.SendPropertyChanged("MaxFleetScenarioDescription");
					this.OnMaxFleetScenarioDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartRevenueDate", DbType="Date NOT NULL")]
		public System.DateTime StartRevenueDate
		{
			get
			{
				return this._StartRevenueDate;
			}
			set
			{
				if ((this._StartRevenueDate != value))
				{
					this.OnStartRevenueDateChanging(value);
					this.SendPropertyChanging();
					this._StartRevenueDate = value;
					this.SendPropertyChanged("StartRevenueDate");
					this.OnStartRevenueDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndRevenueDate", DbType="Date NOT NULL")]
		public System.DateTime EndRevenueDate
		{
			get
			{
				return this._EndRevenueDate;
			}
			set
			{
				if ((this._EndRevenueDate != value))
				{
					this.OnEndRevenueDateChanging(value);
					this.SendPropertyChanging();
					this._EndRevenueDate = value;
					this.SendPropertyChanged("EndRevenueDate");
					this.OnEndRevenueDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentDate", DbType="Date NOT NULL")]
		public System.DateTime CurrentDate
		{
			get
			{
				return this._CurrentDate;
			}
			set
			{
				if ((this._CurrentDate != value))
				{
					this.OnCurrentDateChanging(value);
					this.SendPropertyChanging();
					this._CurrentDate = value;
					this.SendPropertyChanged("CurrentDate");
					this.OnCurrentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeeksCalculated", DbType="Int NOT NULL")]
		public int WeeksCalculated
		{
			get
			{
				return this._WeeksCalculated;
			}
			set
			{
				if ((this._WeeksCalculated != value))
				{
					this.OnWeeksCalculatedChanging(value);
					this.SendPropertyChanging();
					this._WeeksCalculated = value;
					this.SendPropertyChanged("WeeksCalculated");
					this.OnWeeksCalculatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="VarChar(20)")]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryId", DbType="Int NOT NULL")]
		public int CountryId
		{
			get
			{
				return this._CountryId;
			}
			set
			{
				if ((this._CountryId != value))
				{
					if (this._COUNTRy.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCountryIdChanging(value);
					this.SendPropertyChanging();
					this._CountryId = value;
					this.SendPropertyChanged("CountryId");
					this.OnCountryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarsUserId", DbType="Int NOT NULL")]
		public int MarsUserId
		{
			get
			{
				return this._MarsUserId;
			}
			set
			{
				if ((this._MarsUserId != value))
				{
					if (this._MarsUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMarsUserIdChanging(value);
					this.SendPropertyChanging();
					this._MarsUserId = value;
					this.SendPropertyChanged("MarsUserId");
					this.OnMarsUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Applied", DbType="Bit NOT NULL")]
		public bool Applied
		{
			get
			{
				return this._Applied;
			}
			set
			{
				if ((this._Applied != value))
				{
					this.OnAppliedChanging(value);
					this.SendPropertyChanging();
					this._Applied = value;
					this.SendPropertyChanged("Applied");
					this.OnAppliedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LessonLearnt", DbType="VarChar(1000)")]
		public string LessonLearnt
		{
			get
			{
				return this._LessonLearnt;
			}
			set
			{
				if ((this._LessonLearnt != value))
				{
					this.OnLessonLearntChanging(value);
					this.SendPropertyChanging();
					this._LessonLearnt = value;
					this.SendPropertyChanged("LessonLearnt");
					this.OnLessonLearntChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdditionPlan_AdditionPlanMinMaxValue", Storage="_AdditionPlanMinMaxValues", ThisKey="AdditionPlanId", OtherKey="AdditionPlanId")]
		public EntitySet<AdditionPlanMinMaxValue> AdditionPlanMinMaxValues
		{
			get
			{
				return this._AdditionPlanMinMaxValues;
			}
			set
			{
				this._AdditionPlanMinMaxValues.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdditionPlan_AdditionPlanEntry", Storage="_AdditionPlanEntries", ThisKey="AdditionPlanId", OtherKey="AdditionPlanId")]
		public EntitySet<AdditionPlanEntry> AdditionPlanEntries
		{
			get
			{
				return this._AdditionPlanEntries;
			}
			set
			{
				this._AdditionPlanEntries.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="COUNTRy_AdditionPlan", Storage="_COUNTRy", ThisKey="CountryId", OtherKey="CountryId", IsForeignKey=true)]
		public COUNTRy COUNTRy
		{
			get
			{
				return this._COUNTRy.Entity;
			}
			set
			{
				COUNTRy previousValue = this._COUNTRy.Entity;
				if (((previousValue != value) 
							|| (this._COUNTRy.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._COUNTRy.Entity = null;
						previousValue.AdditionPlans.Remove(this);
					}
					this._COUNTRy.Entity = value;
					if ((value != null))
					{
						value.AdditionPlans.Add(this);
						this._CountryId = value.CountryId;
					}
					else
					{
						this._CountryId = default(int);
					}
					this.SendPropertyChanged("COUNTRy");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MarsUser_AdditionPlan", Storage="_MarsUser", ThisKey="MarsUserId", OtherKey="MarsUserId", IsForeignKey=true)]
		public MarsUser MarsUser
		{
			get
			{
				return this._MarsUser.Entity;
			}
			set
			{
				MarsUser previousValue = this._MarsUser.Entity;
				if (((previousValue != value) 
							|| (this._MarsUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MarsUser.Entity = null;
						previousValue.AdditionPlans.Remove(this);
					}
					this._MarsUser.Entity = value;
					if ((value != null))
					{
						value.AdditionPlans.Add(this);
						this._MarsUserId = value.MarsUserId;
					}
					else
					{
						this._MarsUserId = default(int);
					}
					this.SendPropertyChanged("MarsUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AdditionPlanMinMaxValues(AdditionPlanMinMaxValue entity)
		{
			this.SendPropertyChanging();
			entity.AdditionPlan = this;
		}
		
		private void detach_AdditionPlanMinMaxValues(AdditionPlanMinMaxValue entity)
		{
			this.SendPropertyChanging();
			entity.AdditionPlan = null;
		}
		
		private void attach_AdditionPlanEntries(AdditionPlanEntry entity)
		{
			this.SendPropertyChanging();
			entity.AdditionPlan = this;
		}
		
		private void detach_AdditionPlanEntries(AdditionPlanEntry entity)
		{
			this.SendPropertyChanging();
			entity.AdditionPlan = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Fao.AdditionPlanMinMaxValue")]
	public partial class AdditionPlanMinMaxValue : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AdditionPlanMinMaxValueId;
		
		private int _AdditionPlanId;
		
		private short _Year;
		
		private byte _Week;
		
		private int _CarGroupId;
		
		private int _LocationId;
		
		private int _Rank;
		
		private int _TotalFleet;
		
		private int _AdditionsAndDeletions;
		
		private int _MinFleet;
		
		private int _MaxFleet;
		
		private decimal _Contribution;
		
		private EntityRef<AdditionPlan> _AdditionPlan;
		
		private EntityRef<CAR_GROUP> _CAR_GROUP;
		
		private EntityRef<LOCATION> _LOCATION;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAdditionPlanMinMaxValueIdChanging(int value);
    partial void OnAdditionPlanMinMaxValueIdChanged();
    partial void OnAdditionPlanIdChanging(int value);
    partial void OnAdditionPlanIdChanged();
    partial void OnYearChanging(short value);
    partial void OnYearChanged();
    partial void OnWeekChanging(byte value);
    partial void OnWeekChanged();
    partial void OnCarGroupIdChanging(int value);
    partial void OnCarGroupIdChanged();
    partial void OnLocationIdChanging(int value);
    partial void OnLocationIdChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnTotalFleetChanging(int value);
    partial void OnTotalFleetChanged();
    partial void OnAdditionsAndDeletionsChanging(int value);
    partial void OnAdditionsAndDeletionsChanged();
    partial void OnMinFleetChanging(int value);
    partial void OnMinFleetChanged();
    partial void OnMaxFleetChanging(int value);
    partial void OnMaxFleetChanged();
    partial void OnContributionChanging(decimal value);
    partial void OnContributionChanged();
    #endregion
		
		public AdditionPlanMinMaxValue()
		{
			this._AdditionPlan = default(EntityRef<AdditionPlan>);
			this._CAR_GROUP = default(EntityRef<CAR_GROUP>);
			this._LOCATION = default(EntityRef<LOCATION>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdditionPlanMinMaxValueId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AdditionPlanMinMaxValueId
		{
			get
			{
				return this._AdditionPlanMinMaxValueId;
			}
			set
			{
				if ((this._AdditionPlanMinMaxValueId != value))
				{
					this.OnAdditionPlanMinMaxValueIdChanging(value);
					this.SendPropertyChanging();
					this._AdditionPlanMinMaxValueId = value;
					this.SendPropertyChanged("AdditionPlanMinMaxValueId");
					this.OnAdditionPlanMinMaxValueIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdditionPlanId", DbType="Int NOT NULL")]
		public int AdditionPlanId
		{
			get
			{
				return this._AdditionPlanId;
			}
			set
			{
				if ((this._AdditionPlanId != value))
				{
					if (this._AdditionPlan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdditionPlanIdChanging(value);
					this.SendPropertyChanging();
					this._AdditionPlanId = value;
					this.SendPropertyChanged("AdditionPlanId");
					this.OnAdditionPlanIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="SmallInt NOT NULL")]
		public short Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Week", DbType="TinyInt NOT NULL")]
		public byte Week
		{
			get
			{
				return this._Week;
			}
			set
			{
				if ((this._Week != value))
				{
					this.OnWeekChanging(value);
					this.SendPropertyChanging();
					this._Week = value;
					this.SendPropertyChanged("Week");
					this.OnWeekChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarGroupId", DbType="Int NOT NULL")]
		public int CarGroupId
		{
			get
			{
				return this._CarGroupId;
			}
			set
			{
				if ((this._CarGroupId != value))
				{
					if (this._CAR_GROUP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCarGroupIdChanging(value);
					this.SendPropertyChanging();
					this._CarGroupId = value;
					this.SendPropertyChanged("CarGroupId");
					this.OnCarGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationId", DbType="Int NOT NULL")]
		public int LocationId
		{
			get
			{
				return this._LocationId;
			}
			set
			{
				if ((this._LocationId != value))
				{
					if (this._LOCATION.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLocationIdChanging(value);
					this.SendPropertyChanging();
					this._LocationId = value;
					this.SendPropertyChanged("LocationId");
					this.OnLocationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalFleet", DbType="Int NOT NULL")]
		public int TotalFleet
		{
			get
			{
				return this._TotalFleet;
			}
			set
			{
				if ((this._TotalFleet != value))
				{
					this.OnTotalFleetChanging(value);
					this.SendPropertyChanging();
					this._TotalFleet = value;
					this.SendPropertyChanged("TotalFleet");
					this.OnTotalFleetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdditionsAndDeletions", DbType="Int NOT NULL")]
		public int AdditionsAndDeletions
		{
			get
			{
				return this._AdditionsAndDeletions;
			}
			set
			{
				if ((this._AdditionsAndDeletions != value))
				{
					this.OnAdditionsAndDeletionsChanging(value);
					this.SendPropertyChanging();
					this._AdditionsAndDeletions = value;
					this.SendPropertyChanged("AdditionsAndDeletions");
					this.OnAdditionsAndDeletionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinFleet", DbType="Int NOT NULL")]
		public int MinFleet
		{
			get
			{
				return this._MinFleet;
			}
			set
			{
				if ((this._MinFleet != value))
				{
					this.OnMinFleetChanging(value);
					this.SendPropertyChanging();
					this._MinFleet = value;
					this.SendPropertyChanged("MinFleet");
					this.OnMinFleetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxFleet", DbType="Int NOT NULL")]
		public int MaxFleet
		{
			get
			{
				return this._MaxFleet;
			}
			set
			{
				if ((this._MaxFleet != value))
				{
					this.OnMaxFleetChanging(value);
					this.SendPropertyChanging();
					this._MaxFleet = value;
					this.SendPropertyChanged("MaxFleet");
					this.OnMaxFleetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contribution", DbType="Decimal(18,2) NOT NULL")]
		public decimal Contribution
		{
			get
			{
				return this._Contribution;
			}
			set
			{
				if ((this._Contribution != value))
				{
					this.OnContributionChanging(value);
					this.SendPropertyChanging();
					this._Contribution = value;
					this.SendPropertyChanged("Contribution");
					this.OnContributionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdditionPlan_AdditionPlanMinMaxValue", Storage="_AdditionPlan", ThisKey="AdditionPlanId", OtherKey="AdditionPlanId", IsForeignKey=true)]
		public AdditionPlan AdditionPlan
		{
			get
			{
				return this._AdditionPlan.Entity;
			}
			set
			{
				AdditionPlan previousValue = this._AdditionPlan.Entity;
				if (((previousValue != value) 
							|| (this._AdditionPlan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AdditionPlan.Entity = null;
						previousValue.AdditionPlanMinMaxValues.Remove(this);
					}
					this._AdditionPlan.Entity = value;
					if ((value != null))
					{
						value.AdditionPlanMinMaxValues.Add(this);
						this._AdditionPlanId = value.AdditionPlanId;
					}
					else
					{
						this._AdditionPlanId = default(int);
					}
					this.SendPropertyChanged("AdditionPlan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CAR_GROUP_AdditionPlanMinMaxValue", Storage="_CAR_GROUP", ThisKey="CarGroupId", OtherKey="car_group_id", IsForeignKey=true)]
		public CAR_GROUP CAR_GROUP
		{
			get
			{
				return this._CAR_GROUP.Entity;
			}
			set
			{
				CAR_GROUP previousValue = this._CAR_GROUP.Entity;
				if (((previousValue != value) 
							|| (this._CAR_GROUP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CAR_GROUP.Entity = null;
						previousValue.AdditionPlanMinMaxValues.Remove(this);
					}
					this._CAR_GROUP.Entity = value;
					if ((value != null))
					{
						value.AdditionPlanMinMaxValues.Add(this);
						this._CarGroupId = value.car_group_id;
					}
					else
					{
						this._CarGroupId = default(int);
					}
					this.SendPropertyChanged("CAR_GROUP");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOCATION_AdditionPlanMinMaxValue", Storage="_LOCATION", ThisKey="LocationId", OtherKey="dim_Location_id", IsForeignKey=true)]
		public LOCATION LOCATION
		{
			get
			{
				return this._LOCATION.Entity;
			}
			set
			{
				LOCATION previousValue = this._LOCATION.Entity;
				if (((previousValue != value) 
							|| (this._LOCATION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOCATION.Entity = null;
						previousValue.AdditionPlanMinMaxValues.Remove(this);
					}
					this._LOCATION.Entity = value;
					if ((value != null))
					{
						value.AdditionPlanMinMaxValues.Add(this);
						this._LocationId = value.dim_Location_id;
					}
					else
					{
						this._LocationId = default(int);
					}
					this.SendPropertyChanged("LOCATION");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Fao.AdditionPlanEntry")]
	public partial class AdditionPlanEntry : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AdditionPlanEntryId;
		
		private int _AdditionPlanId;
		
		private short _Year;
		
		private byte _Week;
		
		private int _CarGroupId;
		
		private int _LocationId;
		
		private int _Additions;
		
		private decimal _ContributionPerUnit;
		
		private EntityRef<AdditionPlan> _AdditionPlan;
		
		private EntityRef<CAR_GROUP> _CAR_GROUP;
		
		private EntityRef<LOCATION> _LOCATION;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAdditionPlanEntryIdChanging(int value);
    partial void OnAdditionPlanEntryIdChanged();
    partial void OnAdditionPlanIdChanging(int value);
    partial void OnAdditionPlanIdChanged();
    partial void OnYearChanging(short value);
    partial void OnYearChanged();
    partial void OnWeekChanging(byte value);
    partial void OnWeekChanged();
    partial void OnCarGroupIdChanging(int value);
    partial void OnCarGroupIdChanged();
    partial void OnLocationIdChanging(int value);
    partial void OnLocationIdChanged();
    partial void OnAdditionsChanging(int value);
    partial void OnAdditionsChanged();
    partial void OnContributionPerUnitChanging(decimal value);
    partial void OnContributionPerUnitChanged();
    #endregion
		
		public AdditionPlanEntry()
		{
			this._AdditionPlan = default(EntityRef<AdditionPlan>);
			this._CAR_GROUP = default(EntityRef<CAR_GROUP>);
			this._LOCATION = default(EntityRef<LOCATION>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdditionPlanEntryId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AdditionPlanEntryId
		{
			get
			{
				return this._AdditionPlanEntryId;
			}
			set
			{
				if ((this._AdditionPlanEntryId != value))
				{
					this.OnAdditionPlanEntryIdChanging(value);
					this.SendPropertyChanging();
					this._AdditionPlanEntryId = value;
					this.SendPropertyChanged("AdditionPlanEntryId");
					this.OnAdditionPlanEntryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdditionPlanId", DbType="Int NOT NULL")]
		public int AdditionPlanId
		{
			get
			{
				return this._AdditionPlanId;
			}
			set
			{
				if ((this._AdditionPlanId != value))
				{
					if (this._AdditionPlan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdditionPlanIdChanging(value);
					this.SendPropertyChanging();
					this._AdditionPlanId = value;
					this.SendPropertyChanged("AdditionPlanId");
					this.OnAdditionPlanIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="SmallInt NOT NULL")]
		public short Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Week", DbType="TinyInt NOT NULL")]
		public byte Week
		{
			get
			{
				return this._Week;
			}
			set
			{
				if ((this._Week != value))
				{
					this.OnWeekChanging(value);
					this.SendPropertyChanging();
					this._Week = value;
					this.SendPropertyChanged("Week");
					this.OnWeekChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarGroupId", DbType="Int NOT NULL")]
		public int CarGroupId
		{
			get
			{
				return this._CarGroupId;
			}
			set
			{
				if ((this._CarGroupId != value))
				{
					if (this._CAR_GROUP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCarGroupIdChanging(value);
					this.SendPropertyChanging();
					this._CarGroupId = value;
					this.SendPropertyChanged("CarGroupId");
					this.OnCarGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationId", DbType="Int NOT NULL")]
		public int LocationId
		{
			get
			{
				return this._LocationId;
			}
			set
			{
				if ((this._LocationId != value))
				{
					if (this._LOCATION.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLocationIdChanging(value);
					this.SendPropertyChanging();
					this._LocationId = value;
					this.SendPropertyChanged("LocationId");
					this.OnLocationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Additions", DbType="Int NOT NULL")]
		public int Additions
		{
			get
			{
				return this._Additions;
			}
			set
			{
				if ((this._Additions != value))
				{
					this.OnAdditionsChanging(value);
					this.SendPropertyChanging();
					this._Additions = value;
					this.SendPropertyChanged("Additions");
					this.OnAdditionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContributionPerUnit", DbType="Decimal(18,2) NOT NULL")]
		public decimal ContributionPerUnit
		{
			get
			{
				return this._ContributionPerUnit;
			}
			set
			{
				if ((this._ContributionPerUnit != value))
				{
					this.OnContributionPerUnitChanging(value);
					this.SendPropertyChanging();
					this._ContributionPerUnit = value;
					this.SendPropertyChanged("ContributionPerUnit");
					this.OnContributionPerUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdditionPlan_AdditionPlanEntry", Storage="_AdditionPlan", ThisKey="AdditionPlanId", OtherKey="AdditionPlanId", IsForeignKey=true)]
		public AdditionPlan AdditionPlan
		{
			get
			{
				return this._AdditionPlan.Entity;
			}
			set
			{
				AdditionPlan previousValue = this._AdditionPlan.Entity;
				if (((previousValue != value) 
							|| (this._AdditionPlan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AdditionPlan.Entity = null;
						previousValue.AdditionPlanEntries.Remove(this);
					}
					this._AdditionPlan.Entity = value;
					if ((value != null))
					{
						value.AdditionPlanEntries.Add(this);
						this._AdditionPlanId = value.AdditionPlanId;
					}
					else
					{
						this._AdditionPlanId = default(int);
					}
					this.SendPropertyChanged("AdditionPlan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CAR_GROUP_AdditionPlanEntry", Storage="_CAR_GROUP", ThisKey="CarGroupId", OtherKey="car_group_id", IsForeignKey=true)]
		public CAR_GROUP CAR_GROUP
		{
			get
			{
				return this._CAR_GROUP.Entity;
			}
			set
			{
				CAR_GROUP previousValue = this._CAR_GROUP.Entity;
				if (((previousValue != value) 
							|| (this._CAR_GROUP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CAR_GROUP.Entity = null;
						previousValue.AdditionPlanEntries.Remove(this);
					}
					this._CAR_GROUP.Entity = value;
					if ((value != null))
					{
						value.AdditionPlanEntries.Add(this);
						this._CarGroupId = value.car_group_id;
					}
					else
					{
						this._CarGroupId = default(int);
					}
					this.SendPropertyChanged("CAR_GROUP");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOCATION_AdditionPlanEntry", Storage="_LOCATION", ThisKey="LocationId", OtherKey="dim_Location_id", IsForeignKey=true)]
		public LOCATION LOCATION
		{
			get
			{
				return this._LOCATION.Entity;
			}
			set
			{
				LOCATION previousValue = this._LOCATION.Entity;
				if (((previousValue != value) 
							|| (this._LOCATION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOCATION.Entity = null;
						previousValue.AdditionPlanEntries.Remove(this);
					}
					this._LOCATION.Entity = value;
					if ((value != null))
					{
						value.AdditionPlanEntries.Add(this);
						this._LocationId = value.dim_Location_id;
					}
					else
					{
						this._LocationId = default(int);
					}
					this.SendPropertyChanged("LOCATION");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
