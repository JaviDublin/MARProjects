#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18052
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mars.App.Classes.DAL.Pooling.PoolingDataContext
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="MarsPortal")]
	public partial class PoolingDataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertLOCATION(LOCATION instance);
    partial void UpdateLOCATION(LOCATION instance);
    partial void DeleteLOCATION(LOCATION instance);
    partial void InsertCAR_CLASS(CAR_CLASS instance);
    partial void UpdateCAR_CLASS(CAR_CLASS instance);
    partial void DeleteCAR_CLASS(CAR_CLASS instance);
    partial void InsertCAR_SEGMENT(CAR_SEGMENT instance);
    partial void UpdateCAR_SEGMENT(CAR_SEGMENT instance);
    partial void DeleteCAR_SEGMENT(CAR_SEGMENT instance);
    partial void InsertCOUNTRy(COUNTRy instance);
    partial void UpdateCOUNTRy(COUNTRy instance);
    partial void DeleteCOUNTRy(COUNTRy instance);
    partial void InsertCMS_LOCATION_GROUP(CMS_LOCATION_GROUP instance);
    partial void UpdateCMS_LOCATION_GROUP(CMS_LOCATION_GROUP instance);
    partial void DeleteCMS_LOCATION_GROUP(CMS_LOCATION_GROUP instance);
    partial void InsertCMS_POOL(CMS_POOL instance);
    partial void UpdateCMS_POOL(CMS_POOL instance);
    partial void DeleteCMS_POOL(CMS_POOL instance);
    partial void InsertOPS_AREA(OPS_AREA instance);
    partial void UpdateOPS_AREA(OPS_AREA instance);
    partial void DeleteOPS_AREA(OPS_AREA instance);
    partial void InsertOPS_REGION(OPS_REGION instance);
    partial void UpdateOPS_REGION(OPS_REGION instance);
    partial void DeleteOPS_REGION(OPS_REGION instance);
    partial void InsertResTopic(ResTopic instance);
    partial void UpdateResTopic(ResTopic instance);
    partial void DeleteResTopic(ResTopic instance);
    partial void InsertResAddition(ResAddition instance);
    partial void UpdateResAddition(ResAddition instance);
    partial void DeleteResAddition(ResAddition instance);
    partial void InsertResBuffer(ResBuffer instance);
    partial void UpdateResBuffer(ResBuffer instance);
    partial void DeleteResBuffer(ResBuffer instance);
    partial void InsertResDeletion(ResDeletion instance);
    partial void UpdateResDeletion(ResDeletion instance);
    partial void DeleteResDeletion(ResDeletion instance);
    partial void InsertResControl(ResControl instance);
    partial void UpdateResControl(ResControl instance);
    partial void DeleteResControl(ResControl instance);
    partial void InsertResContCondition(ResContCondition instance);
    partial void UpdateResContCondition(ResContCondition instance);
    partial void DeleteResContCondition(ResContCondition instance);
    partial void InsertCAR_GROUP(CAR_GROUP instance);
    partial void UpdateCAR_GROUP(CAR_GROUP instance);
    partial void DeleteCAR_GROUP(CAR_GROUP instance);
    partial void InsertReservationTeradataControlLog(ReservationTeradataControlLog instance);
    partial void UpdateReservationTeradataControlLog(ReservationTeradataControlLog instance);
    partial void DeleteReservationTeradataControlLog(ReservationTeradataControlLog instance);
    partial void InsertResGoldLevel(ResGoldLevel instance);
    partial void UpdateResGoldLevel(ResGoldLevel instance);
    partial void DeleteResGoldLevel(ResGoldLevel instance);
    partial void InsertResLoyaltyProgram(ResLoyaltyProgram instance);
    partial void UpdateResLoyaltyProgram(ResLoyaltyProgram instance);
    partial void DeleteResLoyaltyProgram(ResLoyaltyProgram instance);
    partial void InsertResRemark(ResRemark instance);
    partial void UpdateResRemark(ResRemark instance);
    partial void DeleteResRemark(ResRemark instance);
    partial void InsertReservation(Reservation instance);
    partial void UpdateReservation(Reservation instance);
    partial void DeleteReservation(Reservation instance);
    #endregion
		
		public PoolingDataClassesDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["Rad.Properties.Settings.ApplicationDataBase"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public PoolingDataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PoolingDataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PoolingDataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PoolingDataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<vw_Pooling_FEA> vw_Pooling_FEAs
		{
			get
			{
				return this.GetTable<vw_Pooling_FEA>();
			}
		}
		
		public System.Data.Linq.Table<LOCATION> LOCATIONs
		{
			get
			{
				return this.GetTable<LOCATION>();
			}
		}
		
		public System.Data.Linq.Table<CAR_CLASS> CAR_CLASSes
		{
			get
			{
				return this.GetTable<CAR_CLASS>();
			}
		}
		
		public System.Data.Linq.Table<CAR_SEGMENT> CAR_SEGMENTs
		{
			get
			{
				return this.GetTable<CAR_SEGMENT>();
			}
		}
		
		public System.Data.Linq.Table<COUNTRy> COUNTRies
		{
			get
			{
				return this.GetTable<COUNTRy>();
			}
		}
		
		public System.Data.Linq.Table<CMS_LOCATION_GROUP> CMS_LOCATION_GROUPs
		{
			get
			{
				return this.GetTable<CMS_LOCATION_GROUP>();
			}
		}
		
		public System.Data.Linq.Table<CMS_POOL> CMS_POOLs
		{
			get
			{
				return this.GetTable<CMS_POOL>();
			}
		}
		
		public System.Data.Linq.Table<OPS_AREA> OPS_AREAs
		{
			get
			{
				return this.GetTable<OPS_AREA>();
			}
		}
		
		public System.Data.Linq.Table<OPS_REGION> OPS_REGIONs
		{
			get
			{
				return this.GetTable<OPS_REGION>();
			}
		}
		
		public System.Data.Linq.Table<ResTopic> ResTopics
		{
			get
			{
				return this.GetTable<ResTopic>();
			}
		}
		
		public System.Data.Linq.Table<ResAddition> ResAdditions
		{
			get
			{
				return this.GetTable<ResAddition>();
			}
		}
		
		public System.Data.Linq.Table<ResBuffer> ResBuffers
		{
			get
			{
				return this.GetTable<ResBuffer>();
			}
		}
		
		public System.Data.Linq.Table<ResDeletion> ResDeletions
		{
			get
			{
				return this.GetTable<ResDeletion>();
			}
		}
		
		public System.Data.Linq.Table<ResControl> ResControls
		{
			get
			{
				return this.GetTable<ResControl>();
			}
		}
		
		public System.Data.Linq.Table<ResContCondition> ResContConditions
		{
			get
			{
				return this.GetTable<ResContCondition>();
			}
		}
		
		public System.Data.Linq.Table<CAR_GROUP> CAR_GROUPs
		{
			get
			{
				return this.GetTable<CAR_GROUP>();
			}
		}
		
		public System.Data.Linq.Table<ReservationTeradataControlLog> ReservationTeradataControlLogs
		{
			get
			{
				return this.GetTable<ReservationTeradataControlLog>();
			}
		}
		
		public System.Data.Linq.Table<ResGoldLevel> ResGoldLevels
		{
			get
			{
				return this.GetTable<ResGoldLevel>();
			}
		}
		
		public System.Data.Linq.Table<ResLoyaltyProgram> ResLoyaltyPrograms
		{
			get
			{
				return this.GetTable<ResLoyaltyProgram>();
			}
		}
		
		public System.Data.Linq.Table<ResRemark> ResRemarks
		{
			get
			{
				return this.GetTable<ResRemark>();
			}
		}
		
		public System.Data.Linq.Table<Reservation> Reservations
		{
			get
			{
				return this.GetTable<Reservation>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vw_Pooling_FEA")]
	public partial class vw_Pooling_FEA
	{
		
		private int _car_group_id;
		
		private int _car_class_id;
		
		private int _car_segment_id;
		
		private int _RT;
		
		private System.Nullable<int> _CI_HOURS;
		
		private System.Nullable<int> _CI_HOURS_OFFSET;
		
		private System.Nullable<int> _ON_RENT;
		
		private System.Nullable<int> _CI_DAYS;
		
		private string _DUEWWD;
		
		private string _LSTWWD;
		
		private string _MOVETYPE;
		
		private System.Nullable<int> _TOTAL_FLEET;
		
		private System.Nullable<int> _OVERDUE;
		
		private string _VC;
		
		private string _car_group;
		
		private string _car_class;
		
		private string _car_segment;
		
		private string _location;
		
		private string _country;
		
		private int _cms_location_group_id;
		
		private string _cms_location_group;
		
		private string _cms_pool;
		
		private string _country_description;
		
		private string _ops_area;
		
		private string _ops_region;
		
		public vw_Pooling_FEA()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_car_group_id", DbType="Int NOT NULL")]
		public int car_group_id
		{
			get
			{
				return this._car_group_id;
			}
			set
			{
				if ((this._car_group_id != value))
				{
					this._car_group_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_car_class_id", DbType="Int NOT NULL")]
		public int car_class_id
		{
			get
			{
				return this._car_class_id;
			}
			set
			{
				if ((this._car_class_id != value))
				{
					this._car_class_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_car_segment_id", DbType="Int NOT NULL")]
		public int car_segment_id
		{
			get
			{
				return this._car_segment_id;
			}
			set
			{
				if ((this._car_segment_id != value))
				{
					this._car_segment_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RT", DbType="Int NOT NULL")]
		public int RT
		{
			get
			{
				return this._RT;
			}
			set
			{
				if ((this._RT != value))
				{
					this._RT = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CI_HOURS", DbType="Int")]
		public System.Nullable<int> CI_HOURS
		{
			get
			{
				return this._CI_HOURS;
			}
			set
			{
				if ((this._CI_HOURS != value))
				{
					this._CI_HOURS = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CI_HOURS_OFFSET", DbType="Int")]
		public System.Nullable<int> CI_HOURS_OFFSET
		{
			get
			{
				return this._CI_HOURS_OFFSET;
			}
			set
			{
				if ((this._CI_HOURS_OFFSET != value))
				{
					this._CI_HOURS_OFFSET = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ON_RENT", DbType="Int")]
		public System.Nullable<int> ON_RENT
		{
			get
			{
				return this._ON_RENT;
			}
			set
			{
				if ((this._ON_RENT != value))
				{
					this._ON_RENT = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CI_DAYS", DbType="Int")]
		public System.Nullable<int> CI_DAYS
		{
			get
			{
				return this._CI_DAYS;
			}
			set
			{
				if ((this._CI_DAYS != value))
				{
					this._CI_DAYS = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DUEWWD", DbType="VarChar(10)")]
		public string DUEWWD
		{
			get
			{
				return this._DUEWWD;
			}
			set
			{
				if ((this._DUEWWD != value))
				{
					this._DUEWWD = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LSTWWD", DbType="VarChar(10)")]
		public string LSTWWD
		{
			get
			{
				return this._LSTWWD;
			}
			set
			{
				if ((this._LSTWWD != value))
				{
					this._LSTWWD = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MOVETYPE", DbType="VarChar(10)")]
		public string MOVETYPE
		{
			get
			{
				return this._MOVETYPE;
			}
			set
			{
				if ((this._MOVETYPE != value))
				{
					this._MOVETYPE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TOTAL_FLEET", DbType="Int")]
		public System.Nullable<int> TOTAL_FLEET
		{
			get
			{
				return this._TOTAL_FLEET;
			}
			set
			{
				if ((this._TOTAL_FLEET != value))
				{
					this._TOTAL_FLEET = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OVERDUE", DbType="Int")]
		public System.Nullable<int> OVERDUE
		{
			get
			{
				return this._OVERDUE;
			}
			set
			{
				if ((this._OVERDUE != value))
				{
					this._OVERDUE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VC", DbType="VarChar(5)")]
		public string VC
		{
			get
			{
				return this._VC;
			}
			set
			{
				if ((this._VC != value))
				{
					this._VC = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_car_group", DbType="VarChar(3) NOT NULL", CanBeNull=false)]
		public string car_group
		{
			get
			{
				return this._car_group;
			}
			set
			{
				if ((this._car_group != value))
				{
					this._car_group = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_car_class", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string car_class
		{
			get
			{
				return this._car_class;
			}
			set
			{
				if ((this._car_class != value))
				{
					this._car_class = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_car_segment", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string car_segment
		{
			get
			{
				return this._car_segment;
			}
			set
			{
				if ((this._car_segment != value))
				{
					this._car_segment = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_location", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string location
		{
			get
			{
				return this._location;
			}
			set
			{
				if ((this._location != value))
				{
					this._location = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_country", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string country
		{
			get
			{
				return this._country;
			}
			set
			{
				if ((this._country != value))
				{
					this._country = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cms_location_group_id", DbType="Int NOT NULL")]
		public int cms_location_group_id
		{
			get
			{
				return this._cms_location_group_id;
			}
			set
			{
				if ((this._cms_location_group_id != value))
				{
					this._cms_location_group_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cms_location_group", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string cms_location_group
		{
			get
			{
				return this._cms_location_group;
			}
			set
			{
				if ((this._cms_location_group != value))
				{
					this._cms_location_group = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cms_pool", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string cms_pool
		{
			get
			{
				return this._cms_pool;
			}
			set
			{
				if ((this._cms_pool != value))
				{
					this._cms_pool = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_country_description", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string country_description
		{
			get
			{
				return this._country_description;
			}
			set
			{
				if ((this._country_description != value))
				{
					this._country_description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ops_area", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ops_area
		{
			get
			{
				return this._ops_area;
			}
			set
			{
				if ((this._ops_area != value))
				{
					this._ops_area = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ops_region", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ops_region
		{
			get
			{
				return this._ops_region;
			}
			set
			{
				if ((this._ops_region != value))
				{
					this._ops_region = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOCATIONS")]
	public partial class LOCATION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _location1;
		
		private string _location_dw;
		
		private string _real_location_name;
		
		private string _location_name;
		
		private string _location_name_dw;
		
		private bool _active;
		
		private string _ap_dt_rr;
		
		private string _cal;
		
		private System.Nullable<int> _cms_location_group_id;
		
		private int _ops_area_id;
		
		private string _served_by_locn;
		
		private System.Nullable<int> _turnaround_hours;
		
		private string _ownarea;
		
		private string _location_area_id;
		
		private string _city_desc;
		
		private string _country;
		
		private int _dim_Location_id;
		
		private EntitySet<ResAddition> _ResAdditions;
		
		private EntitySet<ResBuffer> _ResBuffers;
		
		private EntitySet<Reservation> _Reservations;
		
		private EntitySet<Reservation> _Reservations1;
		
		private EntityRef<COUNTRy> _COUNTRy1;
		
		private EntityRef<CMS_LOCATION_GROUP> _CMS_LOCATION_GROUP;
		
		private EntityRef<OPS_AREA> _OPS_AREA;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onlocation1Changing(string value);
    partial void Onlocation1Changed();
    partial void Onlocation_dwChanging(string value);
    partial void Onlocation_dwChanged();
    partial void Onreal_location_nameChanging(string value);
    partial void Onreal_location_nameChanged();
    partial void Onlocation_nameChanging(string value);
    partial void Onlocation_nameChanged();
    partial void Onlocation_name_dwChanging(string value);
    partial void Onlocation_name_dwChanged();
    partial void OnactiveChanging(bool value);
    partial void OnactiveChanged();
    partial void Onap_dt_rrChanging(string value);
    partial void Onap_dt_rrChanged();
    partial void OncalChanging(string value);
    partial void OncalChanged();
    partial void Oncms_location_group_idChanging(System.Nullable<int> value);
    partial void Oncms_location_group_idChanged();
    partial void Onops_area_idChanging(int value);
    partial void Onops_area_idChanged();
    partial void Onserved_by_locnChanging(string value);
    partial void Onserved_by_locnChanged();
    partial void Onturnaround_hoursChanging(System.Nullable<int> value);
    partial void Onturnaround_hoursChanged();
    partial void OnownareaChanging(string value);
    partial void OnownareaChanged();
    partial void Onlocation_area_idChanging(string value);
    partial void Onlocation_area_idChanged();
    partial void Oncity_descChanging(string value);
    partial void Oncity_descChanged();
    partial void OncountryChanging(string value);
    partial void OncountryChanged();
    partial void Ondim_Location_idChanging(int value);
    partial void Ondim_Location_idChanged();
    #endregion
		
		public LOCATION()
		{
			this._ResAdditions = new EntitySet<ResAddition>(new Action<ResAddition>(this.attach_ResAdditions), new Action<ResAddition>(this.detach_ResAdditions));
			this._ResBuffers = new EntitySet<ResBuffer>(new Action<ResBuffer>(this.attach_ResBuffers), new Action<ResBuffer>(this.detach_ResBuffers));
			this._Reservations = new EntitySet<Reservation>(new Action<Reservation>(this.attach_Reservations), new Action<Reservation>(this.detach_Reservations));
			this._Reservations1 = new EntitySet<Reservation>(new Action<Reservation>(this.attach_Reservations1), new Action<Reservation>(this.detach_Reservations1));
			this._COUNTRy1 = default(EntityRef<COUNTRy>);
			this._CMS_LOCATION_GROUP = default(EntityRef<CMS_LOCATION_GROUP>);
			this._OPS_AREA = default(EntityRef<OPS_AREA>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="location", Storage="_location1", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string location1
		{
			get
			{
				return this._location1;
			}
			set
			{
				if ((this._location1 != value))
				{
					this.Onlocation1Changing(value);
					this.SendPropertyChanging();
					this._location1 = value;
					this.SendPropertyChanged("location1");
					this.Onlocation1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_location_dw", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string location_dw
		{
			get
			{
				return this._location_dw;
			}
			set
			{
				if ((this._location_dw != value))
				{
					this.Onlocation_dwChanging(value);
					this.SendPropertyChanging();
					this._location_dw = value;
					this.SendPropertyChanged("location_dw");
					this.Onlocation_dwChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_real_location_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string real_location_name
		{
			get
			{
				return this._real_location_name;
			}
			set
			{
				if ((this._real_location_name != value))
				{
					this.Onreal_location_nameChanging(value);
					this.SendPropertyChanging();
					this._real_location_name = value;
					this.SendPropertyChanged("real_location_name");
					this.Onreal_location_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_location_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string location_name
		{
			get
			{
				return this._location_name;
			}
			set
			{
				if ((this._location_name != value))
				{
					this.Onlocation_nameChanging(value);
					this.SendPropertyChanging();
					this._location_name = value;
					this.SendPropertyChanged("location_name");
					this.Onlocation_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_location_name_dw", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string location_name_dw
		{
			get
			{
				return this._location_name_dw;
			}
			set
			{
				if ((this._location_name_dw != value))
				{
					this.Onlocation_name_dwChanging(value);
					this.SendPropertyChanging();
					this._location_name_dw = value;
					this.SendPropertyChanged("location_name_dw");
					this.Onlocation_name_dwChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_active", DbType="Bit NOT NULL")]
		public bool active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ap_dt_rr", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		public string ap_dt_rr
		{
			get
			{
				return this._ap_dt_rr;
			}
			set
			{
				if ((this._ap_dt_rr != value))
				{
					this.Onap_dt_rrChanging(value);
					this.SendPropertyChanging();
					this._ap_dt_rr = value;
					this.SendPropertyChanged("ap_dt_rr");
					this.Onap_dt_rrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cal", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string cal
		{
			get
			{
				return this._cal;
			}
			set
			{
				if ((this._cal != value))
				{
					this.OncalChanging(value);
					this.SendPropertyChanging();
					this._cal = value;
					this.SendPropertyChanged("cal");
					this.OncalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cms_location_group_id", DbType="Int")]
		public System.Nullable<int> cms_location_group_id
		{
			get
			{
				return this._cms_location_group_id;
			}
			set
			{
				if ((this._cms_location_group_id != value))
				{
					if (this._CMS_LOCATION_GROUP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncms_location_group_idChanging(value);
					this.SendPropertyChanging();
					this._cms_location_group_id = value;
					this.SendPropertyChanged("cms_location_group_id");
					this.Oncms_location_group_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ops_area_id", DbType="Int NOT NULL")]
		public int ops_area_id
		{
			get
			{
				return this._ops_area_id;
			}
			set
			{
				if ((this._ops_area_id != value))
				{
					if (this._OPS_AREA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onops_area_idChanging(value);
					this.SendPropertyChanging();
					this._ops_area_id = value;
					this.SendPropertyChanged("ops_area_id");
					this.Onops_area_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_served_by_locn", DbType="VarChar(50)")]
		public string served_by_locn
		{
			get
			{
				return this._served_by_locn;
			}
			set
			{
				if ((this._served_by_locn != value))
				{
					this.Onserved_by_locnChanging(value);
					this.SendPropertyChanging();
					this._served_by_locn = value;
					this.SendPropertyChanged("served_by_locn");
					this.Onserved_by_locnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_turnaround_hours", DbType="Int")]
		public System.Nullable<int> turnaround_hours
		{
			get
			{
				return this._turnaround_hours;
			}
			set
			{
				if ((this._turnaround_hours != value))
				{
					this.Onturnaround_hoursChanging(value);
					this.SendPropertyChanging();
					this._turnaround_hours = value;
					this.SendPropertyChanged("turnaround_hours");
					this.Onturnaround_hoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ownarea", DbType="VarChar(5)")]
		public string ownarea
		{
			get
			{
				return this._ownarea;
			}
			set
			{
				if ((this._ownarea != value))
				{
					this.OnownareaChanging(value);
					this.SendPropertyChanging();
					this._ownarea = value;
					this.SendPropertyChanged("ownarea");
					this.OnownareaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_location_area_id", DbType="VarChar(10)")]
		public string location_area_id
		{
			get
			{
				return this._location_area_id;
			}
			set
			{
				if ((this._location_area_id != value))
				{
					this.Onlocation_area_idChanging(value);
					this.SendPropertyChanging();
					this._location_area_id = value;
					this.SendPropertyChanged("location_area_id");
					this.Onlocation_area_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city_desc", DbType="VarChar(50)")]
		public string city_desc
		{
			get
			{
				return this._city_desc;
			}
			set
			{
				if ((this._city_desc != value))
				{
					this.Oncity_descChanging(value);
					this.SendPropertyChanging();
					this._city_desc = value;
					this.SendPropertyChanged("city_desc");
					this.Oncity_descChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_country", DbType="VarChar(10)")]
		public string country
		{
			get
			{
				return this._country;
			}
			set
			{
				if ((this._country != value))
				{
					if (this._COUNTRy1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncountryChanging(value);
					this.SendPropertyChanging();
					this._country = value;
					this.SendPropertyChanged("country");
					this.OncountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dim_Location_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int dim_Location_id
		{
			get
			{
				return this._dim_Location_id;
			}
			set
			{
				if ((this._dim_Location_id != value))
				{
					this.Ondim_Location_idChanging(value);
					this.SendPropertyChanging();
					this._dim_Location_id = value;
					this.SendPropertyChanged("dim_Location_id");
					this.Ondim_Location_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOCATION_ResAddition", Storage="_ResAdditions", ThisKey="dim_Location_id", OtherKey="LocId")]
		public EntitySet<ResAddition> ResAdditions
		{
			get
			{
				return this._ResAdditions;
			}
			set
			{
				this._ResAdditions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOCATION_ResBuffer", Storage="_ResBuffers", ThisKey="dim_Location_id", OtherKey="LocId")]
		public EntitySet<ResBuffer> ResBuffers
		{
			get
			{
				return this._ResBuffers;
			}
			set
			{
				this._ResBuffers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOCATION_Reservation", Storage="_Reservations", ThisKey="dim_Location_id", OtherKey="RTRN_LOC")]
		public EntitySet<Reservation> Reservations
		{
			get
			{
				return this._Reservations;
			}
			set
			{
				this._Reservations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOCATION_Reservation1", Storage="_Reservations1", ThisKey="dim_Location_id", OtherKey="RENT_LOC")]
		public EntitySet<Reservation> Reservations1
		{
			get
			{
				return this._Reservations1;
			}
			set
			{
				this._Reservations1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="COUNTRy_LOCATION", Storage="_COUNTRy1", ThisKey="country", OtherKey="country1", IsForeignKey=true)]
		public COUNTRy COUNTRy1
		{
			get
			{
				return this._COUNTRy1.Entity;
			}
			set
			{
				COUNTRy previousValue = this._COUNTRy1.Entity;
				if (((previousValue != value) 
							|| (this._COUNTRy1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._COUNTRy1.Entity = null;
						previousValue.LOCATIONs.Remove(this);
					}
					this._COUNTRy1.Entity = value;
					if ((value != null))
					{
						value.LOCATIONs.Add(this);
						this._country = value.country1;
					}
					else
					{
						this._country = default(string);
					}
					this.SendPropertyChanged("COUNTRy1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CMS_LOCATION_GROUP_LOCATION", Storage="_CMS_LOCATION_GROUP", ThisKey="cms_location_group_id", OtherKey="cms_location_group_id", IsForeignKey=true)]
		public CMS_LOCATION_GROUP CMS_LOCATION_GROUP
		{
			get
			{
				return this._CMS_LOCATION_GROUP.Entity;
			}
			set
			{
				CMS_LOCATION_GROUP previousValue = this._CMS_LOCATION_GROUP.Entity;
				if (((previousValue != value) 
							|| (this._CMS_LOCATION_GROUP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CMS_LOCATION_GROUP.Entity = null;
						previousValue.LOCATIONs.Remove(this);
					}
					this._CMS_LOCATION_GROUP.Entity = value;
					if ((value != null))
					{
						value.LOCATIONs.Add(this);
						this._cms_location_group_id = value.cms_location_group_id;
					}
					else
					{
						this._cms_location_group_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("CMS_LOCATION_GROUP");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OPS_AREA_LOCATION", Storage="_OPS_AREA", ThisKey="ops_area_id", OtherKey="ops_area_id", IsForeignKey=true)]
		public OPS_AREA OPS_AREA
		{
			get
			{
				return this._OPS_AREA.Entity;
			}
			set
			{
				OPS_AREA previousValue = this._OPS_AREA.Entity;
				if (((previousValue != value) 
							|| (this._OPS_AREA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OPS_AREA.Entity = null;
						previousValue.LOCATIONs.Remove(this);
					}
					this._OPS_AREA.Entity = value;
					if ((value != null))
					{
						value.LOCATIONs.Add(this);
						this._ops_area_id = value.ops_area_id;
					}
					else
					{
						this._ops_area_id = default(int);
					}
					this.SendPropertyChanged("OPS_AREA");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ResAdditions(ResAddition entity)
		{
			this.SendPropertyChanging();
			entity.LOCATION = this;
		}
		
		private void detach_ResAdditions(ResAddition entity)
		{
			this.SendPropertyChanging();
			entity.LOCATION = null;
		}
		
		private void attach_ResBuffers(ResBuffer entity)
		{
			this.SendPropertyChanging();
			entity.LOCATION = this;
		}
		
		private void detach_ResBuffers(ResBuffer entity)
		{
			this.SendPropertyChanging();
			entity.LOCATION = null;
		}
		
		private void attach_Reservations(Reservation entity)
		{
			this.SendPropertyChanging();
			entity.LOCATION = this;
		}
		
		private void detach_Reservations(Reservation entity)
		{
			this.SendPropertyChanging();
			entity.LOCATION = null;
		}
		
		private void attach_Reservations1(Reservation entity)
		{
			this.SendPropertyChanging();
			entity.LOCATION1 = this;
		}
		
		private void detach_Reservations1(Reservation entity)
		{
			this.SendPropertyChanging();
			entity.LOCATION1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CAR_CLASSES")]
	public partial class CAR_CLASS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _car_class_id;
		
		private string _car_class1;
		
		private int _car_segment_id;
		
		private int _sort_car_class;
		
		private EntitySet<CAR_GROUP> _CAR_GROUPs;
		
		private EntityRef<CAR_SEGMENT> _CAR_SEGMENT;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncar_class_idChanging(int value);
    partial void Oncar_class_idChanged();
    partial void Oncar_class1Changing(string value);
    partial void Oncar_class1Changed();
    partial void Oncar_segment_idChanging(int value);
    partial void Oncar_segment_idChanged();
    partial void Onsort_car_classChanging(int value);
    partial void Onsort_car_classChanged();
    #endregion
		
		public CAR_CLASS()
		{
			this._CAR_GROUPs = new EntitySet<CAR_GROUP>(new Action<CAR_GROUP>(this.attach_CAR_GROUPs), new Action<CAR_GROUP>(this.detach_CAR_GROUPs));
			this._CAR_SEGMENT = default(EntityRef<CAR_SEGMENT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_car_class_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int car_class_id
		{
			get
			{
				return this._car_class_id;
			}
			set
			{
				if ((this._car_class_id != value))
				{
					this.Oncar_class_idChanging(value);
					this.SendPropertyChanging();
					this._car_class_id = value;
					this.SendPropertyChanged("car_class_id");
					this.Oncar_class_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="car_class", Storage="_car_class1", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string car_class1
		{
			get
			{
				return this._car_class1;
			}
			set
			{
				if ((this._car_class1 != value))
				{
					this.Oncar_class1Changing(value);
					this.SendPropertyChanging();
					this._car_class1 = value;
					this.SendPropertyChanged("car_class1");
					this.Oncar_class1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_car_segment_id", DbType="Int NOT NULL")]
		public int car_segment_id
		{
			get
			{
				return this._car_segment_id;
			}
			set
			{
				if ((this._car_segment_id != value))
				{
					if (this._CAR_SEGMENT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncar_segment_idChanging(value);
					this.SendPropertyChanging();
					this._car_segment_id = value;
					this.SendPropertyChanged("car_segment_id");
					this.Oncar_segment_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sort_car_class", DbType="Int NOT NULL")]
		public int sort_car_class
		{
			get
			{
				return this._sort_car_class;
			}
			set
			{
				if ((this._sort_car_class != value))
				{
					this.Onsort_car_classChanging(value);
					this.SendPropertyChanging();
					this._sort_car_class = value;
					this.SendPropertyChanged("sort_car_class");
					this.Onsort_car_classChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CAR_CLASS_CAR_GROUP", Storage="_CAR_GROUPs", ThisKey="car_class_id", OtherKey="car_class_id")]
		public EntitySet<CAR_GROUP> CAR_GROUPs
		{
			get
			{
				return this._CAR_GROUPs;
			}
			set
			{
				this._CAR_GROUPs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CAR_SEGMENT_CAR_CLASS", Storage="_CAR_SEGMENT", ThisKey="car_segment_id", OtherKey="car_segment_id", IsForeignKey=true)]
		public CAR_SEGMENT CAR_SEGMENT
		{
			get
			{
				return this._CAR_SEGMENT.Entity;
			}
			set
			{
				CAR_SEGMENT previousValue = this._CAR_SEGMENT.Entity;
				if (((previousValue != value) 
							|| (this._CAR_SEGMENT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CAR_SEGMENT.Entity = null;
						previousValue.CAR_CLASSes.Remove(this);
					}
					this._CAR_SEGMENT.Entity = value;
					if ((value != null))
					{
						value.CAR_CLASSes.Add(this);
						this._car_segment_id = value.car_segment_id;
					}
					else
					{
						this._car_segment_id = default(int);
					}
					this.SendPropertyChanged("CAR_SEGMENT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CAR_GROUPs(CAR_GROUP entity)
		{
			this.SendPropertyChanging();
			entity.CAR_CLASS = this;
		}
		
		private void detach_CAR_GROUPs(CAR_GROUP entity)
		{
			this.SendPropertyChanging();
			entity.CAR_CLASS = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CAR_SEGMENTS")]
	public partial class CAR_SEGMENT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _car_segment_id;
		
		private string _car_segment1;
		
		private string _country;
		
		private int _sort_car_segment;
		
		private EntitySet<CAR_CLASS> _CAR_CLASSes;
		
		private EntityRef<COUNTRy> _COUNTRy1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncar_segment_idChanging(int value);
    partial void Oncar_segment_idChanged();
    partial void Oncar_segment1Changing(string value);
    partial void Oncar_segment1Changed();
    partial void OncountryChanging(string value);
    partial void OncountryChanged();
    partial void Onsort_car_segmentChanging(int value);
    partial void Onsort_car_segmentChanged();
    #endregion
		
		public CAR_SEGMENT()
		{
			this._CAR_CLASSes = new EntitySet<CAR_CLASS>(new Action<CAR_CLASS>(this.attach_CAR_CLASSes), new Action<CAR_CLASS>(this.detach_CAR_CLASSes));
			this._COUNTRy1 = default(EntityRef<COUNTRy>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_car_segment_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int car_segment_id
		{
			get
			{
				return this._car_segment_id;
			}
			set
			{
				if ((this._car_segment_id != value))
				{
					this.Oncar_segment_idChanging(value);
					this.SendPropertyChanging();
					this._car_segment_id = value;
					this.SendPropertyChanged("car_segment_id");
					this.Oncar_segment_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="car_segment", Storage="_car_segment1", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string car_segment1
		{
			get
			{
				return this._car_segment1;
			}
			set
			{
				if ((this._car_segment1 != value))
				{
					this.Oncar_segment1Changing(value);
					this.SendPropertyChanging();
					this._car_segment1 = value;
					this.SendPropertyChanged("car_segment1");
					this.Oncar_segment1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_country", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string country
		{
			get
			{
				return this._country;
			}
			set
			{
				if ((this._country != value))
				{
					if (this._COUNTRy1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncountryChanging(value);
					this.SendPropertyChanging();
					this._country = value;
					this.SendPropertyChanged("country");
					this.OncountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sort_car_segment", DbType="Int NOT NULL")]
		public int sort_car_segment
		{
			get
			{
				return this._sort_car_segment;
			}
			set
			{
				if ((this._sort_car_segment != value))
				{
					this.Onsort_car_segmentChanging(value);
					this.SendPropertyChanging();
					this._sort_car_segment = value;
					this.SendPropertyChanged("sort_car_segment");
					this.Onsort_car_segmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CAR_SEGMENT_CAR_CLASS", Storage="_CAR_CLASSes", ThisKey="car_segment_id", OtherKey="car_segment_id")]
		public EntitySet<CAR_CLASS> CAR_CLASSes
		{
			get
			{
				return this._CAR_CLASSes;
			}
			set
			{
				this._CAR_CLASSes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="COUNTRy_CAR_SEGMENT", Storage="_COUNTRy1", ThisKey="country", OtherKey="country1", IsForeignKey=true)]
		public COUNTRy COUNTRy1
		{
			get
			{
				return this._COUNTRy1.Entity;
			}
			set
			{
				COUNTRy previousValue = this._COUNTRy1.Entity;
				if (((previousValue != value) 
							|| (this._COUNTRy1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._COUNTRy1.Entity = null;
						previousValue.CAR_SEGMENTs.Remove(this);
					}
					this._COUNTRy1.Entity = value;
					if ((value != null))
					{
						value.CAR_SEGMENTs.Add(this);
						this._country = value.country1;
					}
					else
					{
						this._country = default(string);
					}
					this.SendPropertyChanged("COUNTRy1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CAR_CLASSes(CAR_CLASS entity)
		{
			this.SendPropertyChanging();
			entity.CAR_SEGMENT = this;
		}
		
		private void detach_CAR_CLASSes(CAR_CLASS entity)
		{
			this.SendPropertyChanging();
			entity.CAR_SEGMENT = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.COUNTRIES")]
	public partial class COUNTRy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _country1;
		
		private string _country_dw;
		
		private string _country_description;
		
		private bool _active;
		
		private EntitySet<LOCATION> _LOCATIONs;
		
		private EntitySet<CAR_SEGMENT> _CAR_SEGMENTs;
		
		private EntitySet<CMS_POOL> _CMS_POOLs;
		
		private EntitySet<OPS_REGION> _OPS_REGIONs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncountry1Changing(string value);
    partial void Oncountry1Changed();
    partial void Oncountry_dwChanging(string value);
    partial void Oncountry_dwChanged();
    partial void Oncountry_descriptionChanging(string value);
    partial void Oncountry_descriptionChanged();
    partial void OnactiveChanging(bool value);
    partial void OnactiveChanged();
    #endregion
		
		public COUNTRy()
		{
			this._LOCATIONs = new EntitySet<LOCATION>(new Action<LOCATION>(this.attach_LOCATIONs), new Action<LOCATION>(this.detach_LOCATIONs));
			this._CAR_SEGMENTs = new EntitySet<CAR_SEGMENT>(new Action<CAR_SEGMENT>(this.attach_CAR_SEGMENTs), new Action<CAR_SEGMENT>(this.detach_CAR_SEGMENTs));
			this._CMS_POOLs = new EntitySet<CMS_POOL>(new Action<CMS_POOL>(this.attach_CMS_POOLs), new Action<CMS_POOL>(this.detach_CMS_POOLs));
			this._OPS_REGIONs = new EntitySet<OPS_REGION>(new Action<OPS_REGION>(this.attach_OPS_REGIONs), new Action<OPS_REGION>(this.detach_OPS_REGIONs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="country", Storage="_country1", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string country1
		{
			get
			{
				return this._country1;
			}
			set
			{
				if ((this._country1 != value))
				{
					this.Oncountry1Changing(value);
					this.SendPropertyChanging();
					this._country1 = value;
					this.SendPropertyChanged("country1");
					this.Oncountry1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_country_dw", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string country_dw
		{
			get
			{
				return this._country_dw;
			}
			set
			{
				if ((this._country_dw != value))
				{
					this.Oncountry_dwChanging(value);
					this.SendPropertyChanging();
					this._country_dw = value;
					this.SendPropertyChanged("country_dw");
					this.Oncountry_dwChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_country_description", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string country_description
		{
			get
			{
				return this._country_description;
			}
			set
			{
				if ((this._country_description != value))
				{
					this.Oncountry_descriptionChanging(value);
					this.SendPropertyChanging();
					this._country_description = value;
					this.SendPropertyChanged("country_description");
					this.Oncountry_descriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_active", DbType="Bit NOT NULL")]
		public bool active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="COUNTRy_LOCATION", Storage="_LOCATIONs", ThisKey="country1", OtherKey="country")]
		public EntitySet<LOCATION> LOCATIONs
		{
			get
			{
				return this._LOCATIONs;
			}
			set
			{
				this._LOCATIONs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="COUNTRy_CAR_SEGMENT", Storage="_CAR_SEGMENTs", ThisKey="country1", OtherKey="country")]
		public EntitySet<CAR_SEGMENT> CAR_SEGMENTs
		{
			get
			{
				return this._CAR_SEGMENTs;
			}
			set
			{
				this._CAR_SEGMENTs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="COUNTRy_CMS_POOL", Storage="_CMS_POOLs", ThisKey="country1", OtherKey="country")]
		public EntitySet<CMS_POOL> CMS_POOLs
		{
			get
			{
				return this._CMS_POOLs;
			}
			set
			{
				this._CMS_POOLs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="COUNTRy_OPS_REGION", Storage="_OPS_REGIONs", ThisKey="country1", OtherKey="country")]
		public EntitySet<OPS_REGION> OPS_REGIONs
		{
			get
			{
				return this._OPS_REGIONs;
			}
			set
			{
				this._OPS_REGIONs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LOCATIONs(LOCATION entity)
		{
			this.SendPropertyChanging();
			entity.COUNTRy1 = this;
		}
		
		private void detach_LOCATIONs(LOCATION entity)
		{
			this.SendPropertyChanging();
			entity.COUNTRy1 = null;
		}
		
		private void attach_CAR_SEGMENTs(CAR_SEGMENT entity)
		{
			this.SendPropertyChanging();
			entity.COUNTRy1 = this;
		}
		
		private void detach_CAR_SEGMENTs(CAR_SEGMENT entity)
		{
			this.SendPropertyChanging();
			entity.COUNTRy1 = null;
		}
		
		private void attach_CMS_POOLs(CMS_POOL entity)
		{
			this.SendPropertyChanging();
			entity.COUNTRy1 = this;
		}
		
		private void detach_CMS_POOLs(CMS_POOL entity)
		{
			this.SendPropertyChanging();
			entity.COUNTRy1 = null;
		}
		
		private void attach_OPS_REGIONs(OPS_REGION entity)
		{
			this.SendPropertyChanging();
			entity.COUNTRy1 = this;
		}
		
		private void detach_OPS_REGIONs(OPS_REGION entity)
		{
			this.SendPropertyChanging();
			entity.COUNTRy1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CMS_LOCATION_GROUPS")]
	public partial class CMS_LOCATION_GROUP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _cms_location_group_id;
		
		private string _cms_location_group_code_dw;
		
		private string _cms_location_group1;
		
		private int _cms_pool_id;
		
		private EntitySet<LOCATION> _LOCATIONs;
		
		private EntityRef<CMS_POOL> _CMS_POOL;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncms_location_group_idChanging(int value);
    partial void Oncms_location_group_idChanged();
    partial void Oncms_location_group_code_dwChanging(string value);
    partial void Oncms_location_group_code_dwChanged();
    partial void Oncms_location_group1Changing(string value);
    partial void Oncms_location_group1Changed();
    partial void Oncms_pool_idChanging(int value);
    partial void Oncms_pool_idChanged();
    #endregion
		
		public CMS_LOCATION_GROUP()
		{
			this._LOCATIONs = new EntitySet<LOCATION>(new Action<LOCATION>(this.attach_LOCATIONs), new Action<LOCATION>(this.detach_LOCATIONs));
			this._CMS_POOL = default(EntityRef<CMS_POOL>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cms_location_group_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int cms_location_group_id
		{
			get
			{
				return this._cms_location_group_id;
			}
			set
			{
				if ((this._cms_location_group_id != value))
				{
					this.Oncms_location_group_idChanging(value);
					this.SendPropertyChanging();
					this._cms_location_group_id = value;
					this.SendPropertyChanged("cms_location_group_id");
					this.Oncms_location_group_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cms_location_group_code_dw", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string cms_location_group_code_dw
		{
			get
			{
				return this._cms_location_group_code_dw;
			}
			set
			{
				if ((this._cms_location_group_code_dw != value))
				{
					this.Oncms_location_group_code_dwChanging(value);
					this.SendPropertyChanging();
					this._cms_location_group_code_dw = value;
					this.SendPropertyChanged("cms_location_group_code_dw");
					this.Oncms_location_group_code_dwChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="cms_location_group", Storage="_cms_location_group1", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string cms_location_group1
		{
			get
			{
				return this._cms_location_group1;
			}
			set
			{
				if ((this._cms_location_group1 != value))
				{
					this.Oncms_location_group1Changing(value);
					this.SendPropertyChanging();
					this._cms_location_group1 = value;
					this.SendPropertyChanged("cms_location_group1");
					this.Oncms_location_group1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cms_pool_id", DbType="Int NOT NULL")]
		public int cms_pool_id
		{
			get
			{
				return this._cms_pool_id;
			}
			set
			{
				if ((this._cms_pool_id != value))
				{
					if (this._CMS_POOL.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncms_pool_idChanging(value);
					this.SendPropertyChanging();
					this._cms_pool_id = value;
					this.SendPropertyChanged("cms_pool_id");
					this.Oncms_pool_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CMS_LOCATION_GROUP_LOCATION", Storage="_LOCATIONs", ThisKey="cms_location_group_id", OtherKey="cms_location_group_id")]
		public EntitySet<LOCATION> LOCATIONs
		{
			get
			{
				return this._LOCATIONs;
			}
			set
			{
				this._LOCATIONs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CMS_POOL_CMS_LOCATION_GROUP", Storage="_CMS_POOL", ThisKey="cms_pool_id", OtherKey="cms_pool_id", IsForeignKey=true)]
		public CMS_POOL CMS_POOL
		{
			get
			{
				return this._CMS_POOL.Entity;
			}
			set
			{
				CMS_POOL previousValue = this._CMS_POOL.Entity;
				if (((previousValue != value) 
							|| (this._CMS_POOL.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CMS_POOL.Entity = null;
						previousValue.CMS_LOCATION_GROUPs.Remove(this);
					}
					this._CMS_POOL.Entity = value;
					if ((value != null))
					{
						value.CMS_LOCATION_GROUPs.Add(this);
						this._cms_pool_id = value.cms_pool_id;
					}
					else
					{
						this._cms_pool_id = default(int);
					}
					this.SendPropertyChanged("CMS_POOL");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LOCATIONs(LOCATION entity)
		{
			this.SendPropertyChanging();
			entity.CMS_LOCATION_GROUP = this;
		}
		
		private void detach_LOCATIONs(LOCATION entity)
		{
			this.SendPropertyChanging();
			entity.CMS_LOCATION_GROUP = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CMS_POOLS")]
	public partial class CMS_POOL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _cms_pool_id;
		
		private string _cms_pool1;
		
		private string _country;
		
		private EntitySet<CMS_LOCATION_GROUP> _CMS_LOCATION_GROUPs;
		
		private EntityRef<COUNTRy> _COUNTRy1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncms_pool_idChanging(int value);
    partial void Oncms_pool_idChanged();
    partial void Oncms_pool1Changing(string value);
    partial void Oncms_pool1Changed();
    partial void OncountryChanging(string value);
    partial void OncountryChanged();
    #endregion
		
		public CMS_POOL()
		{
			this._CMS_LOCATION_GROUPs = new EntitySet<CMS_LOCATION_GROUP>(new Action<CMS_LOCATION_GROUP>(this.attach_CMS_LOCATION_GROUPs), new Action<CMS_LOCATION_GROUP>(this.detach_CMS_LOCATION_GROUPs));
			this._COUNTRy1 = default(EntityRef<COUNTRy>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cms_pool_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int cms_pool_id
		{
			get
			{
				return this._cms_pool_id;
			}
			set
			{
				if ((this._cms_pool_id != value))
				{
					this.Oncms_pool_idChanging(value);
					this.SendPropertyChanging();
					this._cms_pool_id = value;
					this.SendPropertyChanged("cms_pool_id");
					this.Oncms_pool_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="cms_pool", Storage="_cms_pool1", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string cms_pool1
		{
			get
			{
				return this._cms_pool1;
			}
			set
			{
				if ((this._cms_pool1 != value))
				{
					this.Oncms_pool1Changing(value);
					this.SendPropertyChanging();
					this._cms_pool1 = value;
					this.SendPropertyChanged("cms_pool1");
					this.Oncms_pool1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_country", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string country
		{
			get
			{
				return this._country;
			}
			set
			{
				if ((this._country != value))
				{
					if (this._COUNTRy1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncountryChanging(value);
					this.SendPropertyChanging();
					this._country = value;
					this.SendPropertyChanged("country");
					this.OncountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CMS_POOL_CMS_LOCATION_GROUP", Storage="_CMS_LOCATION_GROUPs", ThisKey="cms_pool_id", OtherKey="cms_pool_id")]
		public EntitySet<CMS_LOCATION_GROUP> CMS_LOCATION_GROUPs
		{
			get
			{
				return this._CMS_LOCATION_GROUPs;
			}
			set
			{
				this._CMS_LOCATION_GROUPs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="COUNTRy_CMS_POOL", Storage="_COUNTRy1", ThisKey="country", OtherKey="country1", IsForeignKey=true)]
		public COUNTRy COUNTRy1
		{
			get
			{
				return this._COUNTRy1.Entity;
			}
			set
			{
				COUNTRy previousValue = this._COUNTRy1.Entity;
				if (((previousValue != value) 
							|| (this._COUNTRy1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._COUNTRy1.Entity = null;
						previousValue.CMS_POOLs.Remove(this);
					}
					this._COUNTRy1.Entity = value;
					if ((value != null))
					{
						value.CMS_POOLs.Add(this);
						this._country = value.country1;
					}
					else
					{
						this._country = default(string);
					}
					this.SendPropertyChanged("COUNTRy1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CMS_LOCATION_GROUPs(CMS_LOCATION_GROUP entity)
		{
			this.SendPropertyChanging();
			entity.CMS_POOL = this;
		}
		
		private void detach_CMS_LOCATION_GROUPs(CMS_LOCATION_GROUP entity)
		{
			this.SendPropertyChanging();
			entity.CMS_POOL = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OPS_AREAS")]
	public partial class OPS_AREA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ops_area_id;
		
		private string _ops_area1;
		
		private int _ops_region_id;
		
		private System.Nullable<bool> _isActive;
		
		private EntitySet<LOCATION> _LOCATIONs;
		
		private EntityRef<OPS_REGION> _OPS_REGION;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onops_area_idChanging(int value);
    partial void Onops_area_idChanged();
    partial void Onops_area1Changing(string value);
    partial void Onops_area1Changed();
    partial void Onops_region_idChanging(int value);
    partial void Onops_region_idChanged();
    partial void OnisActiveChanging(System.Nullable<bool> value);
    partial void OnisActiveChanged();
    #endregion
		
		public OPS_AREA()
		{
			this._LOCATIONs = new EntitySet<LOCATION>(new Action<LOCATION>(this.attach_LOCATIONs), new Action<LOCATION>(this.detach_LOCATIONs));
			this._OPS_REGION = default(EntityRef<OPS_REGION>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ops_area_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ops_area_id
		{
			get
			{
				return this._ops_area_id;
			}
			set
			{
				if ((this._ops_area_id != value))
				{
					this.Onops_area_idChanging(value);
					this.SendPropertyChanging();
					this._ops_area_id = value;
					this.SendPropertyChanged("ops_area_id");
					this.Onops_area_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ops_area", Storage="_ops_area1", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ops_area1
		{
			get
			{
				return this._ops_area1;
			}
			set
			{
				if ((this._ops_area1 != value))
				{
					this.Onops_area1Changing(value);
					this.SendPropertyChanging();
					this._ops_area1 = value;
					this.SendPropertyChanged("ops_area1");
					this.Onops_area1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ops_region_id", DbType="Int NOT NULL")]
		public int ops_region_id
		{
			get
			{
				return this._ops_region_id;
			}
			set
			{
				if ((this._ops_region_id != value))
				{
					if (this._OPS_REGION.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onops_region_idChanging(value);
					this.SendPropertyChanging();
					this._ops_region_id = value;
					this.SendPropertyChanged("ops_region_id");
					this.Onops_region_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isActive", DbType="Bit")]
		public System.Nullable<bool> isActive
		{
			get
			{
				return this._isActive;
			}
			set
			{
				if ((this._isActive != value))
				{
					this.OnisActiveChanging(value);
					this.SendPropertyChanging();
					this._isActive = value;
					this.SendPropertyChanged("isActive");
					this.OnisActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OPS_AREA_LOCATION", Storage="_LOCATIONs", ThisKey="ops_area_id", OtherKey="ops_area_id")]
		public EntitySet<LOCATION> LOCATIONs
		{
			get
			{
				return this._LOCATIONs;
			}
			set
			{
				this._LOCATIONs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OPS_REGION_OPS_AREA", Storage="_OPS_REGION", ThisKey="ops_region_id", OtherKey="ops_region_id", IsForeignKey=true)]
		public OPS_REGION OPS_REGION
		{
			get
			{
				return this._OPS_REGION.Entity;
			}
			set
			{
				OPS_REGION previousValue = this._OPS_REGION.Entity;
				if (((previousValue != value) 
							|| (this._OPS_REGION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OPS_REGION.Entity = null;
						previousValue.OPS_AREAs.Remove(this);
					}
					this._OPS_REGION.Entity = value;
					if ((value != null))
					{
						value.OPS_AREAs.Add(this);
						this._ops_region_id = value.ops_region_id;
					}
					else
					{
						this._ops_region_id = default(int);
					}
					this.SendPropertyChanged("OPS_REGION");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LOCATIONs(LOCATION entity)
		{
			this.SendPropertyChanging();
			entity.OPS_AREA = this;
		}
		
		private void detach_LOCATIONs(LOCATION entity)
		{
			this.SendPropertyChanging();
			entity.OPS_AREA = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OPS_REGIONS")]
	public partial class OPS_REGION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ops_region_id;
		
		private string _ops_region1;
		
		private string _country;
		
		private System.Nullable<bool> _isActive;
		
		private EntitySet<OPS_AREA> _OPS_AREAs;
		
		private EntityRef<COUNTRy> _COUNTRy1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onops_region_idChanging(int value);
    partial void Onops_region_idChanged();
    partial void Onops_region1Changing(string value);
    partial void Onops_region1Changed();
    partial void OncountryChanging(string value);
    partial void OncountryChanged();
    partial void OnisActiveChanging(System.Nullable<bool> value);
    partial void OnisActiveChanged();
    #endregion
		
		public OPS_REGION()
		{
			this._OPS_AREAs = new EntitySet<OPS_AREA>(new Action<OPS_AREA>(this.attach_OPS_AREAs), new Action<OPS_AREA>(this.detach_OPS_AREAs));
			this._COUNTRy1 = default(EntityRef<COUNTRy>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ops_region_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ops_region_id
		{
			get
			{
				return this._ops_region_id;
			}
			set
			{
				if ((this._ops_region_id != value))
				{
					this.Onops_region_idChanging(value);
					this.SendPropertyChanging();
					this._ops_region_id = value;
					this.SendPropertyChanged("ops_region_id");
					this.Onops_region_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ops_region", Storage="_ops_region1", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ops_region1
		{
			get
			{
				return this._ops_region1;
			}
			set
			{
				if ((this._ops_region1 != value))
				{
					this.Onops_region1Changing(value);
					this.SendPropertyChanging();
					this._ops_region1 = value;
					this.SendPropertyChanged("ops_region1");
					this.Onops_region1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_country", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string country
		{
			get
			{
				return this._country;
			}
			set
			{
				if ((this._country != value))
				{
					if (this._COUNTRy1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncountryChanging(value);
					this.SendPropertyChanging();
					this._country = value;
					this.SendPropertyChanged("country");
					this.OncountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isActive", DbType="Bit")]
		public System.Nullable<bool> isActive
		{
			get
			{
				return this._isActive;
			}
			set
			{
				if ((this._isActive != value))
				{
					this.OnisActiveChanging(value);
					this.SendPropertyChanging();
					this._isActive = value;
					this.SendPropertyChanged("isActive");
					this.OnisActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OPS_REGION_OPS_AREA", Storage="_OPS_AREAs", ThisKey="ops_region_id", OtherKey="ops_region_id")]
		public EntitySet<OPS_AREA> OPS_AREAs
		{
			get
			{
				return this._OPS_AREAs;
			}
			set
			{
				this._OPS_AREAs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="COUNTRy_OPS_REGION", Storage="_COUNTRy1", ThisKey="country", OtherKey="country1", IsForeignKey=true)]
		public COUNTRy COUNTRy1
		{
			get
			{
				return this._COUNTRy1.Entity;
			}
			set
			{
				COUNTRy previousValue = this._COUNTRy1.Entity;
				if (((previousValue != value) 
							|| (this._COUNTRy1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._COUNTRy1.Entity = null;
						previousValue.OPS_REGIONs.Remove(this);
					}
					this._COUNTRy1.Entity = value;
					if ((value != null))
					{
						value.OPS_REGIONs.Add(this);
						this._country = value.country1;
					}
					else
					{
						this._country = default(string);
					}
					this.SendPropertyChanged("COUNTRy1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OPS_AREAs(OPS_AREA entity)
		{
			this.SendPropertyChanging();
			entity.OPS_REGION = this;
		}
		
		private void detach_OPS_AREAs(OPS_AREA entity)
		{
			this.SendPropertyChanging();
			entity.OPS_REGION = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ResTopics")]
	public partial class ResTopic : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public ResTopic()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ResAdditions")]
	public partial class ResAddition : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _LocId;
		
		private int _CarGrpId;
		
		private System.DateTime _RepDate;
		
		private int _Value;
		
		private EntityRef<LOCATION> _LOCATION;
		
		private EntityRef<CAR_GROUP> _CAR_GROUP;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnLocIdChanging(int value);
    partial void OnLocIdChanged();
    partial void OnCarGrpIdChanging(int value);
    partial void OnCarGrpIdChanged();
    partial void OnRepDateChanging(System.DateTime value);
    partial void OnRepDateChanged();
    partial void OnValueChanging(int value);
    partial void OnValueChanged();
    #endregion
		
		public ResAddition()
		{
			this._LOCATION = default(EntityRef<LOCATION>);
			this._CAR_GROUP = default(EntityRef<CAR_GROUP>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocId", DbType="Int NOT NULL")]
		public int LocId
		{
			get
			{
				return this._LocId;
			}
			set
			{
				if ((this._LocId != value))
				{
					if (this._LOCATION.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLocIdChanging(value);
					this.SendPropertyChanging();
					this._LocId = value;
					this.SendPropertyChanged("LocId");
					this.OnLocIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarGrpId", DbType="Int NOT NULL")]
		public int CarGrpId
		{
			get
			{
				return this._CarGrpId;
			}
			set
			{
				if ((this._CarGrpId != value))
				{
					if (this._CAR_GROUP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCarGrpIdChanging(value);
					this.SendPropertyChanging();
					this._CarGrpId = value;
					this.SendPropertyChanged("CarGrpId");
					this.OnCarGrpIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RepDate", DbType="DateTime NOT NULL")]
		public System.DateTime RepDate
		{
			get
			{
				return this._RepDate;
			}
			set
			{
				if ((this._RepDate != value))
				{
					this.OnRepDateChanging(value);
					this.SendPropertyChanging();
					this._RepDate = value;
					this.SendPropertyChanged("RepDate");
					this.OnRepDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="Int NOT NULL")]
		public int Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOCATION_ResAddition", Storage="_LOCATION", ThisKey="LocId", OtherKey="dim_Location_id", IsForeignKey=true)]
		public LOCATION LOCATION
		{
			get
			{
				return this._LOCATION.Entity;
			}
			set
			{
				LOCATION previousValue = this._LOCATION.Entity;
				if (((previousValue != value) 
							|| (this._LOCATION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOCATION.Entity = null;
						previousValue.ResAdditions.Remove(this);
					}
					this._LOCATION.Entity = value;
					if ((value != null))
					{
						value.ResAdditions.Add(this);
						this._LocId = value.dim_Location_id;
					}
					else
					{
						this._LocId = default(int);
					}
					this.SendPropertyChanged("LOCATION");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CAR_GROUP_ResAddition", Storage="_CAR_GROUP", ThisKey="CarGrpId", OtherKey="car_group_id", IsForeignKey=true)]
		public CAR_GROUP CAR_GROUP
		{
			get
			{
				return this._CAR_GROUP.Entity;
			}
			set
			{
				CAR_GROUP previousValue = this._CAR_GROUP.Entity;
				if (((previousValue != value) 
							|| (this._CAR_GROUP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CAR_GROUP.Entity = null;
						previousValue.ResAdditions.Remove(this);
					}
					this._CAR_GROUP.Entity = value;
					if ((value != null))
					{
						value.ResAdditions.Add(this);
						this._CarGrpId = value.car_group_id;
					}
					else
					{
						this._CarGrpId = default(int);
					}
					this.SendPropertyChanged("CAR_GROUP");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ResBuffer")]
	public partial class ResBuffer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _LocId;
		
		private int _CarGrpId;
		
		private int _Value;
		
		private EntityRef<LOCATION> _LOCATION;
		
		private EntityRef<CAR_GROUP> _CAR_GROUP;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnLocIdChanging(int value);
    partial void OnLocIdChanged();
    partial void OnCarGrpIdChanging(int value);
    partial void OnCarGrpIdChanged();
    partial void OnValueChanging(int value);
    partial void OnValueChanged();
    #endregion
		
		public ResBuffer()
		{
			this._LOCATION = default(EntityRef<LOCATION>);
			this._CAR_GROUP = default(EntityRef<CAR_GROUP>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocId", DbType="Int NOT NULL")]
		public int LocId
		{
			get
			{
				return this._LocId;
			}
			set
			{
				if ((this._LocId != value))
				{
					if (this._LOCATION.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLocIdChanging(value);
					this.SendPropertyChanging();
					this._LocId = value;
					this.SendPropertyChanged("LocId");
					this.OnLocIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarGrpId", DbType="Int NOT NULL")]
		public int CarGrpId
		{
			get
			{
				return this._CarGrpId;
			}
			set
			{
				if ((this._CarGrpId != value))
				{
					if (this._CAR_GROUP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCarGrpIdChanging(value);
					this.SendPropertyChanging();
					this._CarGrpId = value;
					this.SendPropertyChanged("CarGrpId");
					this.OnCarGrpIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="Int NOT NULL")]
		public int Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOCATION_ResBuffer", Storage="_LOCATION", ThisKey="LocId", OtherKey="dim_Location_id", IsForeignKey=true)]
		public LOCATION LOCATION
		{
			get
			{
				return this._LOCATION.Entity;
			}
			set
			{
				LOCATION previousValue = this._LOCATION.Entity;
				if (((previousValue != value) 
							|| (this._LOCATION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOCATION.Entity = null;
						previousValue.ResBuffers.Remove(this);
					}
					this._LOCATION.Entity = value;
					if ((value != null))
					{
						value.ResBuffers.Add(this);
						this._LocId = value.dim_Location_id;
					}
					else
					{
						this._LocId = default(int);
					}
					this.SendPropertyChanged("LOCATION");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CAR_GROUP_ResBuffer", Storage="_CAR_GROUP", ThisKey="CarGrpId", OtherKey="car_group_id", IsForeignKey=true)]
		public CAR_GROUP CAR_GROUP
		{
			get
			{
				return this._CAR_GROUP.Entity;
			}
			set
			{
				CAR_GROUP previousValue = this._CAR_GROUP.Entity;
				if (((previousValue != value) 
							|| (this._CAR_GROUP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CAR_GROUP.Entity = null;
						previousValue.ResBuffers.Remove(this);
					}
					this._CAR_GROUP.Entity = value;
					if ((value != null))
					{
						value.ResBuffers.Add(this);
						this._CarGrpId = value.car_group_id;
					}
					else
					{
						this._CarGrpId = default(int);
					}
					this.SendPropertyChanged("CAR_GROUP");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ResDeletions")]
	public partial class ResDeletion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Serial;
		
		private System.DateTime _RepDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSerialChanging(string value);
    partial void OnSerialChanged();
    partial void OnRepDateChanging(System.DateTime value);
    partial void OnRepDateChanged();
    #endregion
		
		public ResDeletion()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Serial", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string Serial
		{
			get
			{
				return this._Serial;
			}
			set
			{
				if ((this._Serial != value))
				{
					this.OnSerialChanging(value);
					this.SendPropertyChanging();
					this._Serial = value;
					this.SendPropertyChanged("Serial");
					this.OnSerialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RepDate", DbType="DateTime NOT NULL")]
		public System.DateTime RepDate
		{
			get
			{
				return this._RepDate;
			}
			set
			{
				if ((this._RepDate != value))
				{
					this.OnRepDateChanging(value);
					this.SendPropertyChanging();
					this._RepDate = value;
					this.SendPropertyChanged("RepDate");
					this.OnRepDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ResControl")]
	public partial class ResControl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ConditionId;
		
		private string _Comment;
		
		private System.DateTime _ConDateTime;
		
		private System.Nullable<int> _ErrorLogId;
		
		private System.DateTime _TimeStamp;
		
		private EntityRef<ResContCondition> _ResContCondition;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnConditionIdChanging(int value);
    partial void OnConditionIdChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnConDateTimeChanging(System.DateTime value);
    partial void OnConDateTimeChanged();
    partial void OnErrorLogIdChanging(System.Nullable<int> value);
    partial void OnErrorLogIdChanged();
    partial void OnTimeStampChanging(System.DateTime value);
    partial void OnTimeStampChanged();
    #endregion
		
		public ResControl()
		{
			this._ResContCondition = default(EntityRef<ResContCondition>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConditionId", DbType="Int NOT NULL")]
		public int ConditionId
		{
			get
			{
				return this._ConditionId;
			}
			set
			{
				if ((this._ConditionId != value))
				{
					if (this._ResContCondition.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnConditionIdChanging(value);
					this.SendPropertyChanging();
					this._ConditionId = value;
					this.SendPropertyChanged("ConditionId");
					this.OnConditionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="VarChar(MAX)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime ConDateTime
		{
			get
			{
				return this._ConDateTime;
			}
			set
			{
				if ((this._ConDateTime != value))
				{
					this.OnConDateTimeChanging(value);
					this.SendPropertyChanging();
					this._ConDateTime = value;
					this.SendPropertyChanged("ConDateTime");
					this.OnConDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorLogId", DbType="Int")]
		public System.Nullable<int> ErrorLogId
		{
			get
			{
				return this._ErrorLogId;
			}
			set
			{
				if ((this._ErrorLogId != value))
				{
					this.OnErrorLogIdChanging(value);
					this.SendPropertyChanging();
					this._ErrorLogId = value;
					this.SendPropertyChanged("ErrorLogId");
					this.OnErrorLogIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", DbType="DateTime NOT NULL")]
		public System.DateTime TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ResContCondition_ResControl", Storage="_ResContCondition", ThisKey="ConditionId", OtherKey="Id", IsForeignKey=true)]
		public ResContCondition ResContCondition
		{
			get
			{
				return this._ResContCondition.Entity;
			}
			set
			{
				ResContCondition previousValue = this._ResContCondition.Entity;
				if (((previousValue != value) 
							|| (this._ResContCondition.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ResContCondition.Entity = null;
						previousValue.ResControls.Remove(this);
					}
					this._ResContCondition.Entity = value;
					if ((value != null))
					{
						value.ResControls.Add(this);
						this._ConditionId = value.Id;
					}
					else
					{
						this._ConditionId = default(int);
					}
					this.SendPropertyChanged("ResContCondition");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ResContCondition")]
	public partial class ResContCondition : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private EntitySet<ResControl> _ResControls;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public ResContCondition()
		{
			this._ResControls = new EntitySet<ResControl>(new Action<ResControl>(this.attach_ResControls), new Action<ResControl>(this.detach_ResControls));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ResContCondition_ResControl", Storage="_ResControls", ThisKey="Id", OtherKey="ConditionId")]
		public EntitySet<ResControl> ResControls
		{
			get
			{
				return this._ResControls;
			}
			set
			{
				this._ResControls.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ResControls(ResControl entity)
		{
			this.SendPropertyChanging();
			entity.ResContCondition = this;
		}
		
		private void detach_ResControls(ResControl entity)
		{
			this.SendPropertyChanging();
			entity.ResContCondition = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CAR_GROUPS")]
	public partial class CAR_GROUP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _car_group_id;
		
		private string _car_group1;
		
		private string _car_group_gold;
		
		private int _car_class_id;
		
		private int _sort_car_group;
		
		private string _car_group_fivestar;
		
		private string _car_group_presidentCircle;
		
		private string _car_group_platinum;
		
		private EntitySet<ResAddition> _ResAdditions;
		
		private EntitySet<ResBuffer> _ResBuffers;
		
		private EntitySet<Reservation> _Reservations;
		
		private EntityRef<CAR_CLASS> _CAR_CLASS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncar_group_idChanging(int value);
    partial void Oncar_group_idChanged();
    partial void Oncar_group1Changing(string value);
    partial void Oncar_group1Changed();
    partial void Oncar_group_goldChanging(string value);
    partial void Oncar_group_goldChanged();
    partial void Oncar_class_idChanging(int value);
    partial void Oncar_class_idChanged();
    partial void Onsort_car_groupChanging(int value);
    partial void Onsort_car_groupChanged();
    partial void Oncar_group_fivestarChanging(string value);
    partial void Oncar_group_fivestarChanged();
    partial void Oncar_group_presidentCircleChanging(string value);
    partial void Oncar_group_presidentCircleChanged();
    partial void Oncar_group_platinumChanging(string value);
    partial void Oncar_group_platinumChanged();
    #endregion
		
		public CAR_GROUP()
		{
			this._ResAdditions = new EntitySet<ResAddition>(new Action<ResAddition>(this.attach_ResAdditions), new Action<ResAddition>(this.detach_ResAdditions));
			this._ResBuffers = new EntitySet<ResBuffer>(new Action<ResBuffer>(this.attach_ResBuffers), new Action<ResBuffer>(this.detach_ResBuffers));
			this._Reservations = new EntitySet<Reservation>(new Action<Reservation>(this.attach_Reservations), new Action<Reservation>(this.detach_Reservations));
			this._CAR_CLASS = default(EntityRef<CAR_CLASS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_car_group_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int car_group_id
		{
			get
			{
				return this._car_group_id;
			}
			set
			{
				if ((this._car_group_id != value))
				{
					this.Oncar_group_idChanging(value);
					this.SendPropertyChanging();
					this._car_group_id = value;
					this.SendPropertyChanged("car_group_id");
					this.Oncar_group_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="car_group", Storage="_car_group1", DbType="VarChar(3) NOT NULL", CanBeNull=false)]
		public string car_group1
		{
			get
			{
				return this._car_group1;
			}
			set
			{
				if ((this._car_group1 != value))
				{
					this.Oncar_group1Changing(value);
					this.SendPropertyChanging();
					this._car_group1 = value;
					this.SendPropertyChanged("car_group1");
					this.Oncar_group1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_car_group_gold", DbType="VarChar(3)")]
		public string car_group_gold
		{
			get
			{
				return this._car_group_gold;
			}
			set
			{
				if ((this._car_group_gold != value))
				{
					this.Oncar_group_goldChanging(value);
					this.SendPropertyChanging();
					this._car_group_gold = value;
					this.SendPropertyChanged("car_group_gold");
					this.Oncar_group_goldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_car_class_id", DbType="Int NOT NULL")]
		public int car_class_id
		{
			get
			{
				return this._car_class_id;
			}
			set
			{
				if ((this._car_class_id != value))
				{
					if (this._CAR_CLASS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncar_class_idChanging(value);
					this.SendPropertyChanging();
					this._car_class_id = value;
					this.SendPropertyChanged("car_class_id");
					this.Oncar_class_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sort_car_group", DbType="Int NOT NULL")]
		public int sort_car_group
		{
			get
			{
				return this._sort_car_group;
			}
			set
			{
				if ((this._sort_car_group != value))
				{
					this.Onsort_car_groupChanging(value);
					this.SendPropertyChanging();
					this._sort_car_group = value;
					this.SendPropertyChanged("sort_car_group");
					this.Onsort_car_groupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_car_group_fivestar", DbType="VarChar(3)")]
		public string car_group_fivestar
		{
			get
			{
				return this._car_group_fivestar;
			}
			set
			{
				if ((this._car_group_fivestar != value))
				{
					this.Oncar_group_fivestarChanging(value);
					this.SendPropertyChanging();
					this._car_group_fivestar = value;
					this.SendPropertyChanged("car_group_fivestar");
					this.Oncar_group_fivestarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_car_group_presidentCircle", DbType="VarChar(3)")]
		public string car_group_presidentCircle
		{
			get
			{
				return this._car_group_presidentCircle;
			}
			set
			{
				if ((this._car_group_presidentCircle != value))
				{
					this.Oncar_group_presidentCircleChanging(value);
					this.SendPropertyChanging();
					this._car_group_presidentCircle = value;
					this.SendPropertyChanged("car_group_presidentCircle");
					this.Oncar_group_presidentCircleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_car_group_platinum", DbType="VarChar(3)")]
		public string car_group_platinum
		{
			get
			{
				return this._car_group_platinum;
			}
			set
			{
				if ((this._car_group_platinum != value))
				{
					this.Oncar_group_platinumChanging(value);
					this.SendPropertyChanging();
					this._car_group_platinum = value;
					this.SendPropertyChanged("car_group_platinum");
					this.Oncar_group_platinumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CAR_GROUP_ResAddition", Storage="_ResAdditions", ThisKey="car_group_id", OtherKey="CarGrpId")]
		public EntitySet<ResAddition> ResAdditions
		{
			get
			{
				return this._ResAdditions;
			}
			set
			{
				this._ResAdditions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CAR_GROUP_ResBuffer", Storage="_ResBuffers", ThisKey="car_group_id", OtherKey="CarGrpId")]
		public EntitySet<ResBuffer> ResBuffers
		{
			get
			{
				return this._ResBuffers;
			}
			set
			{
				this._ResBuffers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CAR_GROUP_Reservation", Storage="_Reservations", ThisKey="car_group_id", OtherKey="GR_INCL_GOLDUPGR")]
		public EntitySet<Reservation> Reservations
		{
			get
			{
				return this._Reservations;
			}
			set
			{
				this._Reservations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CAR_CLASS_CAR_GROUP", Storage="_CAR_CLASS", ThisKey="car_class_id", OtherKey="car_class_id", IsForeignKey=true)]
		public CAR_CLASS CAR_CLASS
		{
			get
			{
				return this._CAR_CLASS.Entity;
			}
			set
			{
				CAR_CLASS previousValue = this._CAR_CLASS.Entity;
				if (((previousValue != value) 
							|| (this._CAR_CLASS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CAR_CLASS.Entity = null;
						previousValue.CAR_GROUPs.Remove(this);
					}
					this._CAR_CLASS.Entity = value;
					if ((value != null))
					{
						value.CAR_GROUPs.Add(this);
						this._car_class_id = value.car_class_id;
					}
					else
					{
						this._car_class_id = default(int);
					}
					this.SendPropertyChanged("CAR_CLASS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ResAdditions(ResAddition entity)
		{
			this.SendPropertyChanging();
			entity.CAR_GROUP = this;
		}
		
		private void detach_ResAdditions(ResAddition entity)
		{
			this.SendPropertyChanging();
			entity.CAR_GROUP = null;
		}
		
		private void attach_ResBuffers(ResBuffer entity)
		{
			this.SendPropertyChanging();
			entity.CAR_GROUP = this;
		}
		
		private void detach_ResBuffers(ResBuffer entity)
		{
			this.SendPropertyChanging();
			entity.CAR_GROUP = null;
		}
		
		private void attach_Reservations(Reservation entity)
		{
			this.SendPropertyChanging();
			entity.CAR_GROUP = this;
		}
		
		private void detach_Reservations(Reservation entity)
		{
			this.SendPropertyChanging();
			entity.CAR_GROUP = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ReservationTeradataControlLog")]
	public partial class ReservationTeradataControlLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ReservationTeradataControlLogId;
		
		private System.Nullable<System.DateTime> _HertzTimeStamp;
		
		private System.Nullable<System.DateTime> _TeradataTimeStamp;
		
		private bool _Processed;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnReservationTeradataControlLogIdChanging(int value);
    partial void OnReservationTeradataControlLogIdChanged();
    partial void OnHertzTimeStampChanging(System.Nullable<System.DateTime> value);
    partial void OnHertzTimeStampChanged();
    partial void OnTeradataTimeStampChanging(System.Nullable<System.DateTime> value);
    partial void OnTeradataTimeStampChanged();
    partial void OnProcessedChanging(bool value);
    partial void OnProcessedChanged();
    #endregion
		
		public ReservationTeradataControlLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReservationTeradataControlLogId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ReservationTeradataControlLogId
		{
			get
			{
				return this._ReservationTeradataControlLogId;
			}
			set
			{
				if ((this._ReservationTeradataControlLogId != value))
				{
					this.OnReservationTeradataControlLogIdChanging(value);
					this.SendPropertyChanging();
					this._ReservationTeradataControlLogId = value;
					this.SendPropertyChanged("ReservationTeradataControlLogId");
					this.OnReservationTeradataControlLogIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HertzTimeStamp", DbType="DateTime")]
		public System.Nullable<System.DateTime> HertzTimeStamp
		{
			get
			{
				return this._HertzTimeStamp;
			}
			set
			{
				if ((this._HertzTimeStamp != value))
				{
					this.OnHertzTimeStampChanging(value);
					this.SendPropertyChanging();
					this._HertzTimeStamp = value;
					this.SendPropertyChanged("HertzTimeStamp");
					this.OnHertzTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeradataTimeStamp", DbType="DateTime")]
		public System.Nullable<System.DateTime> TeradataTimeStamp
		{
			get
			{
				return this._TeradataTimeStamp;
			}
			set
			{
				if ((this._TeradataTimeStamp != value))
				{
					this.OnTeradataTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TeradataTimeStamp = value;
					this.SendPropertyChanged("TeradataTimeStamp");
					this.OnTeradataTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Processed", DbType="Bit NOT NULL")]
		public bool Processed
		{
			get
			{
				return this._Processed;
			}
			set
			{
				if ((this._Processed != value))
				{
					this.OnProcessedChanging(value);
					this.SendPropertyChanging();
					this._Processed = value;
					this.SendPropertyChanged("Processed");
					this.OnProcessedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ResGoldLevel")]
	public partial class ResGoldLevel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ResGoldLevelId;
		
		private string _GoldLevelName;
		
		private EntitySet<ResLoyaltyProgram> _ResLoyaltyPrograms;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnResGoldLevelIdChanging(int value);
    partial void OnResGoldLevelIdChanged();
    partial void OnGoldLevelNameChanging(string value);
    partial void OnGoldLevelNameChanged();
    #endregion
		
		public ResGoldLevel()
		{
			this._ResLoyaltyPrograms = new EntitySet<ResLoyaltyProgram>(new Action<ResLoyaltyProgram>(this.attach_ResLoyaltyPrograms), new Action<ResLoyaltyProgram>(this.detach_ResLoyaltyPrograms));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResGoldLevelId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ResGoldLevelId
		{
			get
			{
				return this._ResGoldLevelId;
			}
			set
			{
				if ((this._ResGoldLevelId != value))
				{
					this.OnResGoldLevelIdChanging(value);
					this.SendPropertyChanging();
					this._ResGoldLevelId = value;
					this.SendPropertyChanged("ResGoldLevelId");
					this.OnResGoldLevelIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GoldLevelName", DbType="VarChar(200)")]
		public string GoldLevelName
		{
			get
			{
				return this._GoldLevelName;
			}
			set
			{
				if ((this._GoldLevelName != value))
				{
					this.OnGoldLevelNameChanging(value);
					this.SendPropertyChanging();
					this._GoldLevelName = value;
					this.SendPropertyChanged("GoldLevelName");
					this.OnGoldLevelNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ResGoldLevel_ResLoyaltyProgram", Storage="_ResLoyaltyPrograms", ThisKey="ResGoldLevelId", OtherKey="ResGoldLevelId")]
		public EntitySet<ResLoyaltyProgram> ResLoyaltyPrograms
		{
			get
			{
				return this._ResLoyaltyPrograms;
			}
			set
			{
				this._ResLoyaltyPrograms.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ResLoyaltyPrograms(ResLoyaltyProgram entity)
		{
			this.SendPropertyChanging();
			entity.ResGoldLevel = this;
		}
		
		private void detach_ResLoyaltyPrograms(ResLoyaltyProgram entity)
		{
			this.SendPropertyChanging();
			entity.ResGoldLevel = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ResLoyaltyProgram")]
	public partial class ResLoyaltyProgram : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ResLoyaltyProgramId;
		
		private int _ResGoldLevelId;
		
		private string _LoyaltyProgramName;
		
		private string _N1Type;
		
		private EntityRef<ResGoldLevel> _ResGoldLevel;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnResLoyaltyProgramIdChanging(int value);
    partial void OnResLoyaltyProgramIdChanged();
    partial void OnResGoldLevelIdChanging(int value);
    partial void OnResGoldLevelIdChanged();
    partial void OnLoyaltyProgramNameChanging(string value);
    partial void OnLoyaltyProgramNameChanged();
    partial void OnN1TypeChanging(string value);
    partial void OnN1TypeChanged();
    #endregion
		
		public ResLoyaltyProgram()
		{
			this._ResGoldLevel = default(EntityRef<ResGoldLevel>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResLoyaltyProgramId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ResLoyaltyProgramId
		{
			get
			{
				return this._ResLoyaltyProgramId;
			}
			set
			{
				if ((this._ResLoyaltyProgramId != value))
				{
					this.OnResLoyaltyProgramIdChanging(value);
					this.SendPropertyChanging();
					this._ResLoyaltyProgramId = value;
					this.SendPropertyChanged("ResLoyaltyProgramId");
					this.OnResLoyaltyProgramIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResGoldLevelId", DbType="Int NOT NULL")]
		public int ResGoldLevelId
		{
			get
			{
				return this._ResGoldLevelId;
			}
			set
			{
				if ((this._ResGoldLevelId != value))
				{
					if (this._ResGoldLevel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnResGoldLevelIdChanging(value);
					this.SendPropertyChanging();
					this._ResGoldLevelId = value;
					this.SendPropertyChanged("ResGoldLevelId");
					this.OnResGoldLevelIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoyaltyProgramName", DbType="VarChar(200)")]
		public string LoyaltyProgramName
		{
			get
			{
				return this._LoyaltyProgramName;
			}
			set
			{
				if ((this._LoyaltyProgramName != value))
				{
					this.OnLoyaltyProgramNameChanging(value);
					this.SendPropertyChanging();
					this._LoyaltyProgramName = value;
					this.SendPropertyChanged("LoyaltyProgramName");
					this.OnLoyaltyProgramNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_N1Type", DbType="Char(2)")]
		public string N1Type
		{
			get
			{
				return this._N1Type;
			}
			set
			{
				if ((this._N1Type != value))
				{
					this.OnN1TypeChanging(value);
					this.SendPropertyChanging();
					this._N1Type = value;
					this.SendPropertyChanged("N1Type");
					this.OnN1TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ResGoldLevel_ResLoyaltyProgram", Storage="_ResGoldLevel", ThisKey="ResGoldLevelId", OtherKey="ResGoldLevelId", IsForeignKey=true)]
		public ResGoldLevel ResGoldLevel
		{
			get
			{
				return this._ResGoldLevel.Entity;
			}
			set
			{
				ResGoldLevel previousValue = this._ResGoldLevel.Entity;
				if (((previousValue != value) 
							|| (this._ResGoldLevel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ResGoldLevel.Entity = null;
						previousValue.ResLoyaltyPrograms.Remove(this);
					}
					this._ResGoldLevel.Entity = value;
					if ((value != null))
					{
						value.ResLoyaltyPrograms.Add(this);
						this._ResGoldLevelId = value.ResGoldLevelId;
					}
					else
					{
						this._ResGoldLevelId = default(int);
					}
					this.SendPropertyChanged("ResGoldLevel");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ResRemarks")]
	public partial class ResRemark : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _SeqNbr;
		
		private string _ResRmkType;
		
		private string _Remark;
		
		private string _ResIdNbr;
		
		private EntityRef<Reservation> _Reservation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSeqNbrChanging(System.Nullable<int> value);
    partial void OnSeqNbrChanged();
    partial void OnResRmkTypeChanging(string value);
    partial void OnResRmkTypeChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnResIdNbrChanging(string value);
    partial void OnResIdNbrChanged();
    #endregion
		
		public ResRemark()
		{
			this._Reservation = default(EntityRef<Reservation>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeqNbr", DbType="Int")]
		public System.Nullable<int> SeqNbr
		{
			get
			{
				return this._SeqNbr;
			}
			set
			{
				if ((this._SeqNbr != value))
				{
					this.OnSeqNbrChanging(value);
					this.SendPropertyChanging();
					this._SeqNbr = value;
					this.SendPropertyChanged("SeqNbr");
					this.OnSeqNbrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResRmkType", DbType="VarChar(50)")]
		public string ResRmkType
		{
			get
			{
				return this._ResRmkType;
			}
			set
			{
				if ((this._ResRmkType != value))
				{
					this.OnResRmkTypeChanging(value);
					this.SendPropertyChanging();
					this._ResRmkType = value;
					this.SendPropertyChanged("ResRmkType");
					this.OnResRmkTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="VarChar(MAX)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResIdNbr", DbType="VarChar(14)")]
		public string ResIdNbr
		{
			get
			{
				return this._ResIdNbr;
			}
			set
			{
				if ((this._ResIdNbr != value))
				{
					if (this._Reservation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnResIdNbrChanging(value);
					this.SendPropertyChanging();
					this._ResIdNbr = value;
					this.SendPropertyChanged("ResIdNbr");
					this.OnResIdNbrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Reservation_ResRemark", Storage="_Reservation", ThisKey="ResIdNbr", OtherKey="RES_ID_NBR", IsForeignKey=true)]
		public Reservation Reservation
		{
			get
			{
				return this._Reservation.Entity;
			}
			set
			{
				Reservation previousValue = this._Reservation.Entity;
				if (((previousValue != value) 
							|| (this._Reservation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Reservation.Entity = null;
						previousValue.ResRemarks.Remove(this);
					}
					this._Reservation.Entity = value;
					if ((value != null))
					{
						value.ResRemarks.Add(this);
						this._ResIdNbr = value.RES_ID_NBR;
					}
					else
					{
						this._ResIdNbr = default(string);
					}
					this.SendPropertyChanged("Reservation");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Reservations")]
	public partial class Reservation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _RES_ID_NBR;
		
		private string _COUNTRY;
		
		private System.Nullable<int> _RENT_LOC;
		
		private System.Nullable<int> _RTRN_LOC;
		
		private string _ICIND;
		
		private string _ONEWAY;
		
		private System.Nullable<System.DateTime> _RS_ARRIVAL_DATE;
		
		private System.Nullable<System.DateTime> _RS_ARRIVAL_TIME;
		
		private System.Nullable<System.DateTime> _RTRN_DATE;
		
		private System.Nullable<System.DateTime> _RTRN_TIME;
		
		private System.Nullable<double> _RES_DAYS;
		
		private System.Nullable<int> _GR_INCL_GOLDUPGR;
		
		private string _RATE_QUOTED;
		
		private System.Nullable<double> _SUBTOTAL_2;
		
		private string _MOP;
		
		private string _PREPAID;
		
		private string _NEVERLOST;
		
		private string _PREDELIVERY;
		
		private string _CUST_NAME;
		
		private string _PHONE;
		
		private string _CDPID_NBR;
		
		private string _CNTID_NBR;
		
		private string _NO1_CLUB_GOLD;
		
		private string _TACO;
		
		private string _FLIGHT_NBR;
		
		private string _GS;
		
		private string _N1TYPE;
		
		private System.Nullable<System.DateTime> _DATE_SOLD;
		
		private System.Nullable<int> _CO_HOURS;
		
		private System.Nullable<int> _CO_DAYS;
		
		private System.Nullable<int> _CI_HOURS;
		
		private System.Nullable<int> _CI_HOURS_OFFSET;
		
		private System.Nullable<int> _CI_DAYS;
		
		private System.Nullable<System.DateTime> _ArrivalDateTime;
		
		private System.Nullable<System.DateTime> _ReturnDateTime;
		
		private System.Nullable<System.DateTime> _LastUpdated;
		
		private string _ReservedCarGroup;
		
		private System.Nullable<int> _ReservedCarGroupId;
		
		private EntitySet<ResRemark> _ResRemarks;
		
		private EntityRef<CAR_GROUP> _CAR_GROUP;
		
		private EntityRef<LOCATION> _LOCATION;
		
		private EntityRef<LOCATION> _LOCATION1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRES_ID_NBRChanging(string value);
    partial void OnRES_ID_NBRChanged();
    partial void OnCOUNTRYChanging(string value);
    partial void OnCOUNTRYChanged();
    partial void OnRENT_LOCChanging(System.Nullable<int> value);
    partial void OnRENT_LOCChanged();
    partial void OnRTRN_LOCChanging(System.Nullable<int> value);
    partial void OnRTRN_LOCChanged();
    partial void OnICINDChanging(string value);
    partial void OnICINDChanged();
    partial void OnONEWAYChanging(string value);
    partial void OnONEWAYChanged();
    partial void OnRS_ARRIVAL_DATEChanging(System.Nullable<System.DateTime> value);
    partial void OnRS_ARRIVAL_DATEChanged();
    partial void OnRS_ARRIVAL_TIMEChanging(System.Nullable<System.DateTime> value);
    partial void OnRS_ARRIVAL_TIMEChanged();
    partial void OnRTRN_DATEChanging(System.Nullable<System.DateTime> value);
    partial void OnRTRN_DATEChanged();
    partial void OnRTRN_TIMEChanging(System.Nullable<System.DateTime> value);
    partial void OnRTRN_TIMEChanged();
    partial void OnRES_DAYSChanging(System.Nullable<double> value);
    partial void OnRES_DAYSChanged();
    partial void OnGR_INCL_GOLDUPGRChanging(System.Nullable<int> value);
    partial void OnGR_INCL_GOLDUPGRChanged();
    partial void OnRATE_QUOTEDChanging(string value);
    partial void OnRATE_QUOTEDChanged();
    partial void OnSUBTOTAL_2Changing(System.Nullable<double> value);
    partial void OnSUBTOTAL_2Changed();
    partial void OnMOPChanging(string value);
    partial void OnMOPChanged();
    partial void OnPREPAIDChanging(string value);
    partial void OnPREPAIDChanged();
    partial void OnNEVERLOSTChanging(string value);
    partial void OnNEVERLOSTChanged();
    partial void OnPREDELIVERYChanging(string value);
    partial void OnPREDELIVERYChanged();
    partial void OnCUST_NAMEChanging(string value);
    partial void OnCUST_NAMEChanged();
    partial void OnPHONEChanging(string value);
    partial void OnPHONEChanged();
    partial void OnCDPID_NBRChanging(string value);
    partial void OnCDPID_NBRChanged();
    partial void OnCNTID_NBRChanging(string value);
    partial void OnCNTID_NBRChanged();
    partial void OnNO1_CLUB_GOLDChanging(string value);
    partial void OnNO1_CLUB_GOLDChanged();
    partial void OnTACOChanging(string value);
    partial void OnTACOChanged();
    partial void OnFLIGHT_NBRChanging(string value);
    partial void OnFLIGHT_NBRChanged();
    partial void OnGSChanging(string value);
    partial void OnGSChanged();
    partial void OnN1TYPEChanging(string value);
    partial void OnN1TYPEChanged();
    partial void OnDATE_SOLDChanging(System.Nullable<System.DateTime> value);
    partial void OnDATE_SOLDChanged();
    partial void OnCO_HOURSChanging(System.Nullable<int> value);
    partial void OnCO_HOURSChanged();
    partial void OnCO_DAYSChanging(System.Nullable<int> value);
    partial void OnCO_DAYSChanged();
    partial void OnCI_HOURSChanging(System.Nullable<int> value);
    partial void OnCI_HOURSChanged();
    partial void OnCI_HOURS_OFFSETChanging(System.Nullable<int> value);
    partial void OnCI_HOURS_OFFSETChanged();
    partial void OnCI_DAYSChanging(System.Nullable<int> value);
    partial void OnCI_DAYSChanged();
    partial void OnArrivalDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnArrivalDateTimeChanged();
    partial void OnReturnDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnReturnDateTimeChanged();
    partial void OnLastUpdatedChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdatedChanged();
    partial void OnReservedCarGroupChanging(string value);
    partial void OnReservedCarGroupChanged();
    partial void OnReservedCarGroupIdChanging(System.Nullable<int> value);
    partial void OnReservedCarGroupIdChanged();
    #endregion
		
		public Reservation()
		{
			this._ResRemarks = new EntitySet<ResRemark>(new Action<ResRemark>(this.attach_ResRemarks), new Action<ResRemark>(this.detach_ResRemarks));
			this._CAR_GROUP = default(EntityRef<CAR_GROUP>);
			this._LOCATION = default(EntityRef<LOCATION>);
			this._LOCATION1 = default(EntityRef<LOCATION>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RES_ID_NBR", DbType="VarChar(14) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string RES_ID_NBR
		{
			get
			{
				return this._RES_ID_NBR;
			}
			set
			{
				if ((this._RES_ID_NBR != value))
				{
					this.OnRES_ID_NBRChanging(value);
					this.SendPropertyChanging();
					this._RES_ID_NBR = value;
					this.SendPropertyChanged("RES_ID_NBR");
					this.OnRES_ID_NBRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COUNTRY", DbType="VarChar(10)")]
		public string COUNTRY
		{
			get
			{
				return this._COUNTRY;
			}
			set
			{
				if ((this._COUNTRY != value))
				{
					this.OnCOUNTRYChanging(value);
					this.SendPropertyChanging();
					this._COUNTRY = value;
					this.SendPropertyChanged("COUNTRY");
					this.OnCOUNTRYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RENT_LOC", DbType="Int")]
		public System.Nullable<int> RENT_LOC
		{
			get
			{
				return this._RENT_LOC;
			}
			set
			{
				if ((this._RENT_LOC != value))
				{
					if (this._LOCATION1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRENT_LOCChanging(value);
					this.SendPropertyChanging();
					this._RENT_LOC = value;
					this.SendPropertyChanged("RENT_LOC");
					this.OnRENT_LOCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RTRN_LOC", DbType="Int")]
		public System.Nullable<int> RTRN_LOC
		{
			get
			{
				return this._RTRN_LOC;
			}
			set
			{
				if ((this._RTRN_LOC != value))
				{
					if (this._LOCATION.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRTRN_LOCChanging(value);
					this.SendPropertyChanging();
					this._RTRN_LOC = value;
					this.SendPropertyChanged("RTRN_LOC");
					this.OnRTRN_LOCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ICIND", DbType="VarChar(2)")]
		public string ICIND
		{
			get
			{
				return this._ICIND;
			}
			set
			{
				if ((this._ICIND != value))
				{
					this.OnICINDChanging(value);
					this.SendPropertyChanging();
					this._ICIND = value;
					this.SendPropertyChanged("ICIND");
					this.OnICINDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ONEWAY", DbType="VarChar(2)")]
		public string ONEWAY
		{
			get
			{
				return this._ONEWAY;
			}
			set
			{
				if ((this._ONEWAY != value))
				{
					this.OnONEWAYChanging(value);
					this.SendPropertyChanging();
					this._ONEWAY = value;
					this.SendPropertyChanged("ONEWAY");
					this.OnONEWAYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RS_ARRIVAL_DATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> RS_ARRIVAL_DATE
		{
			get
			{
				return this._RS_ARRIVAL_DATE;
			}
			set
			{
				if ((this._RS_ARRIVAL_DATE != value))
				{
					this.OnRS_ARRIVAL_DATEChanging(value);
					this.SendPropertyChanging();
					this._RS_ARRIVAL_DATE = value;
					this.SendPropertyChanged("RS_ARRIVAL_DATE");
					this.OnRS_ARRIVAL_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RS_ARRIVAL_TIME", DbType="DateTime")]
		public System.Nullable<System.DateTime> RS_ARRIVAL_TIME
		{
			get
			{
				return this._RS_ARRIVAL_TIME;
			}
			set
			{
				if ((this._RS_ARRIVAL_TIME != value))
				{
					this.OnRS_ARRIVAL_TIMEChanging(value);
					this.SendPropertyChanging();
					this._RS_ARRIVAL_TIME = value;
					this.SendPropertyChanged("RS_ARRIVAL_TIME");
					this.OnRS_ARRIVAL_TIMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RTRN_DATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> RTRN_DATE
		{
			get
			{
				return this._RTRN_DATE;
			}
			set
			{
				if ((this._RTRN_DATE != value))
				{
					this.OnRTRN_DATEChanging(value);
					this.SendPropertyChanging();
					this._RTRN_DATE = value;
					this.SendPropertyChanged("RTRN_DATE");
					this.OnRTRN_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RTRN_TIME", DbType="DateTime")]
		public System.Nullable<System.DateTime> RTRN_TIME
		{
			get
			{
				return this._RTRN_TIME;
			}
			set
			{
				if ((this._RTRN_TIME != value))
				{
					this.OnRTRN_TIMEChanging(value);
					this.SendPropertyChanging();
					this._RTRN_TIME = value;
					this.SendPropertyChanged("RTRN_TIME");
					this.OnRTRN_TIMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RES_DAYS", DbType="Float")]
		public System.Nullable<double> RES_DAYS
		{
			get
			{
				return this._RES_DAYS;
			}
			set
			{
				if ((this._RES_DAYS != value))
				{
					this.OnRES_DAYSChanging(value);
					this.SendPropertyChanging();
					this._RES_DAYS = value;
					this.SendPropertyChanged("RES_DAYS");
					this.OnRES_DAYSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GR_INCL_GOLDUPGR", DbType="Int")]
		public System.Nullable<int> GR_INCL_GOLDUPGR
		{
			get
			{
				return this._GR_INCL_GOLDUPGR;
			}
			set
			{
				if ((this._GR_INCL_GOLDUPGR != value))
				{
					if (this._CAR_GROUP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGR_INCL_GOLDUPGRChanging(value);
					this.SendPropertyChanging();
					this._GR_INCL_GOLDUPGR = value;
					this.SendPropertyChanged("GR_INCL_GOLDUPGR");
					this.OnGR_INCL_GOLDUPGRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RATE_QUOTED", DbType="VarChar(15)")]
		public string RATE_QUOTED
		{
			get
			{
				return this._RATE_QUOTED;
			}
			set
			{
				if ((this._RATE_QUOTED != value))
				{
					this.OnRATE_QUOTEDChanging(value);
					this.SendPropertyChanging();
					this._RATE_QUOTED = value;
					this.SendPropertyChanged("RATE_QUOTED");
					this.OnRATE_QUOTEDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SUBTOTAL_2", DbType="Float")]
		public System.Nullable<double> SUBTOTAL_2
		{
			get
			{
				return this._SUBTOTAL_2;
			}
			set
			{
				if ((this._SUBTOTAL_2 != value))
				{
					this.OnSUBTOTAL_2Changing(value);
					this.SendPropertyChanging();
					this._SUBTOTAL_2 = value;
					this.SendPropertyChanged("SUBTOTAL_2");
					this.OnSUBTOTAL_2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MOP", DbType="VarChar(10)")]
		public string MOP
		{
			get
			{
				return this._MOP;
			}
			set
			{
				if ((this._MOP != value))
				{
					this.OnMOPChanging(value);
					this.SendPropertyChanging();
					this._MOP = value;
					this.SendPropertyChanged("MOP");
					this.OnMOPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PREPAID", DbType="VarChar(2)")]
		public string PREPAID
		{
			get
			{
				return this._PREPAID;
			}
			set
			{
				if ((this._PREPAID != value))
				{
					this.OnPREPAIDChanging(value);
					this.SendPropertyChanging();
					this._PREPAID = value;
					this.SendPropertyChanged("PREPAID");
					this.OnPREPAIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NEVERLOST", DbType="VarChar(2)")]
		public string NEVERLOST
		{
			get
			{
				return this._NEVERLOST;
			}
			set
			{
				if ((this._NEVERLOST != value))
				{
					this.OnNEVERLOSTChanging(value);
					this.SendPropertyChanging();
					this._NEVERLOST = value;
					this.SendPropertyChanged("NEVERLOST");
					this.OnNEVERLOSTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PREDELIVERY", DbType="VarChar(2)")]
		public string PREDELIVERY
		{
			get
			{
				return this._PREDELIVERY;
			}
			set
			{
				if ((this._PREDELIVERY != value))
				{
					this.OnPREDELIVERYChanging(value);
					this.SendPropertyChanging();
					this._PREDELIVERY = value;
					this.SendPropertyChanged("PREDELIVERY");
					this.OnPREDELIVERYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CUST_NAME", DbType="VarChar(28)")]
		public string CUST_NAME
		{
			get
			{
				return this._CUST_NAME;
			}
			set
			{
				if ((this._CUST_NAME != value))
				{
					this.OnCUST_NAMEChanging(value);
					this.SendPropertyChanging();
					this._CUST_NAME = value;
					this.SendPropertyChanged("CUST_NAME");
					this.OnCUST_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PHONE", DbType="VarChar(25)")]
		public string PHONE
		{
			get
			{
				return this._PHONE;
			}
			set
			{
				if ((this._PHONE != value))
				{
					this.OnPHONEChanging(value);
					this.SendPropertyChanging();
					this._PHONE = value;
					this.SendPropertyChanged("PHONE");
					this.OnPHONEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CDPID_NBR", DbType="VarChar(10)")]
		public string CDPID_NBR
		{
			get
			{
				return this._CDPID_NBR;
			}
			set
			{
				if ((this._CDPID_NBR != value))
				{
					this.OnCDPID_NBRChanging(value);
					this.SendPropertyChanging();
					this._CDPID_NBR = value;
					this.SendPropertyChanged("CDPID_NBR");
					this.OnCDPID_NBRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CNTID_NBR", DbType="VarChar(10)")]
		public string CNTID_NBR
		{
			get
			{
				return this._CNTID_NBR;
			}
			set
			{
				if ((this._CNTID_NBR != value))
				{
					this.OnCNTID_NBRChanging(value);
					this.SendPropertyChanging();
					this._CNTID_NBR = value;
					this.SendPropertyChanged("CNTID_NBR");
					this.OnCNTID_NBRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NO1_CLUB_GOLD", DbType="VarChar(10)")]
		public string NO1_CLUB_GOLD
		{
			get
			{
				return this._NO1_CLUB_GOLD;
			}
			set
			{
				if ((this._NO1_CLUB_GOLD != value))
				{
					this.OnNO1_CLUB_GOLDChanging(value);
					this.SendPropertyChanging();
					this._NO1_CLUB_GOLD = value;
					this.SendPropertyChanged("NO1_CLUB_GOLD");
					this.OnNO1_CLUB_GOLDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TACO", DbType="VarChar(10)")]
		public string TACO
		{
			get
			{
				return this._TACO;
			}
			set
			{
				if ((this._TACO != value))
				{
					this.OnTACOChanging(value);
					this.SendPropertyChanging();
					this._TACO = value;
					this.SendPropertyChanged("TACO");
					this.OnTACOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FLIGHT_NBR", DbType="VarChar(10)")]
		public string FLIGHT_NBR
		{
			get
			{
				return this._FLIGHT_NBR;
			}
			set
			{
				if ((this._FLIGHT_NBR != value))
				{
					this.OnFLIGHT_NBRChanging(value);
					this.SendPropertyChanging();
					this._FLIGHT_NBR = value;
					this.SendPropertyChanged("FLIGHT_NBR");
					this.OnFLIGHT_NBRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GS", DbType="VarChar(2)")]
		public string GS
		{
			get
			{
				return this._GS;
			}
			set
			{
				if ((this._GS != value))
				{
					this.OnGSChanging(value);
					this.SendPropertyChanging();
					this._GS = value;
					this.SendPropertyChanged("GS");
					this.OnGSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_N1TYPE", DbType="VarChar(2)")]
		public string N1TYPE
		{
			get
			{
				return this._N1TYPE;
			}
			set
			{
				if ((this._N1TYPE != value))
				{
					this.OnN1TYPEChanging(value);
					this.SendPropertyChanging();
					this._N1TYPE = value;
					this.SendPropertyChanged("N1TYPE");
					this.OnN1TYPEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATE_SOLD", DbType="DateTime")]
		public System.Nullable<System.DateTime> DATE_SOLD
		{
			get
			{
				return this._DATE_SOLD;
			}
			set
			{
				if ((this._DATE_SOLD != value))
				{
					this.OnDATE_SOLDChanging(value);
					this.SendPropertyChanging();
					this._DATE_SOLD = value;
					this.SendPropertyChanged("DATE_SOLD");
					this.OnDATE_SOLDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CO_HOURS", DbType="Int")]
		public System.Nullable<int> CO_HOURS
		{
			get
			{
				return this._CO_HOURS;
			}
			set
			{
				if ((this._CO_HOURS != value))
				{
					this.OnCO_HOURSChanging(value);
					this.SendPropertyChanging();
					this._CO_HOURS = value;
					this.SendPropertyChanged("CO_HOURS");
					this.OnCO_HOURSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CO_DAYS", DbType="Int")]
		public System.Nullable<int> CO_DAYS
		{
			get
			{
				return this._CO_DAYS;
			}
			set
			{
				if ((this._CO_DAYS != value))
				{
					this.OnCO_DAYSChanging(value);
					this.SendPropertyChanging();
					this._CO_DAYS = value;
					this.SendPropertyChanged("CO_DAYS");
					this.OnCO_DAYSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CI_HOURS", DbType="Int")]
		public System.Nullable<int> CI_HOURS
		{
			get
			{
				return this._CI_HOURS;
			}
			set
			{
				if ((this._CI_HOURS != value))
				{
					this.OnCI_HOURSChanging(value);
					this.SendPropertyChanging();
					this._CI_HOURS = value;
					this.SendPropertyChanged("CI_HOURS");
					this.OnCI_HOURSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CI_HOURS_OFFSET", DbType="Int")]
		public System.Nullable<int> CI_HOURS_OFFSET
		{
			get
			{
				return this._CI_HOURS_OFFSET;
			}
			set
			{
				if ((this._CI_HOURS_OFFSET != value))
				{
					this.OnCI_HOURS_OFFSETChanging(value);
					this.SendPropertyChanging();
					this._CI_HOURS_OFFSET = value;
					this.SendPropertyChanged("CI_HOURS_OFFSET");
					this.OnCI_HOURS_OFFSETChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CI_DAYS", DbType="Int")]
		public System.Nullable<int> CI_DAYS
		{
			get
			{
				return this._CI_DAYS;
			}
			set
			{
				if ((this._CI_DAYS != value))
				{
					this.OnCI_DAYSChanging(value);
					this.SendPropertyChanging();
					this._CI_DAYS = value;
					this.SendPropertyChanged("CI_DAYS");
					this.OnCI_DAYSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArrivalDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ArrivalDateTime
		{
			get
			{
				return this._ArrivalDateTime;
			}
			set
			{
				if ((this._ArrivalDateTime != value))
				{
					this.OnArrivalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._ArrivalDateTime = value;
					this.SendPropertyChanged("ArrivalDateTime");
					this.OnArrivalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReturnDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ReturnDateTime
		{
			get
			{
				return this._ReturnDateTime;
			}
			set
			{
				if ((this._ReturnDateTime != value))
				{
					this.OnReturnDateTimeChanging(value);
					this.SendPropertyChanging();
					this._ReturnDateTime = value;
					this.SendPropertyChanged("ReturnDateTime");
					this.OnReturnDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdated", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdated
		{
			get
			{
				return this._LastUpdated;
			}
			set
			{
				if ((this._LastUpdated != value))
				{
					this.OnLastUpdatedChanging(value);
					this.SendPropertyChanging();
					this._LastUpdated = value;
					this.SendPropertyChanged("LastUpdated");
					this.OnLastUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReservedCarGroup", DbType="Char(2)")]
		public string ReservedCarGroup
		{
			get
			{
				return this._ReservedCarGroup;
			}
			set
			{
				if ((this._ReservedCarGroup != value))
				{
					this.OnReservedCarGroupChanging(value);
					this.SendPropertyChanging();
					this._ReservedCarGroup = value;
					this.SendPropertyChanged("ReservedCarGroup");
					this.OnReservedCarGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReservedCarGroupId", DbType="Int")]
		public System.Nullable<int> ReservedCarGroupId
		{
			get
			{
				return this._ReservedCarGroupId;
			}
			set
			{
				if ((this._ReservedCarGroupId != value))
				{
					this.OnReservedCarGroupIdChanging(value);
					this.SendPropertyChanging();
					this._ReservedCarGroupId = value;
					this.SendPropertyChanged("ReservedCarGroupId");
					this.OnReservedCarGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Reservation_ResRemark", Storage="_ResRemarks", ThisKey="RES_ID_NBR", OtherKey="ResIdNbr")]
		public EntitySet<ResRemark> ResRemarks
		{
			get
			{
				return this._ResRemarks;
			}
			set
			{
				this._ResRemarks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CAR_GROUP_Reservation", Storage="_CAR_GROUP", ThisKey="GR_INCL_GOLDUPGR", OtherKey="car_group_id", IsForeignKey=true)]
		public CAR_GROUP CAR_GROUP
		{
			get
			{
				return this._CAR_GROUP.Entity;
			}
			set
			{
				CAR_GROUP previousValue = this._CAR_GROUP.Entity;
				if (((previousValue != value) 
							|| (this._CAR_GROUP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CAR_GROUP.Entity = null;
						previousValue.Reservations.Remove(this);
					}
					this._CAR_GROUP.Entity = value;
					if ((value != null))
					{
						value.Reservations.Add(this);
						this._GR_INCL_GOLDUPGR = value.car_group_id;
					}
					else
					{
						this._GR_INCL_GOLDUPGR = default(Nullable<int>);
					}
					this.SendPropertyChanged("CAR_GROUP");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOCATION_Reservation", Storage="_LOCATION", ThisKey="RTRN_LOC", OtherKey="dim_Location_id", IsForeignKey=true)]
		public LOCATION LOCATION
		{
			get
			{
				return this._LOCATION.Entity;
			}
			set
			{
				LOCATION previousValue = this._LOCATION.Entity;
				if (((previousValue != value) 
							|| (this._LOCATION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOCATION.Entity = null;
						previousValue.Reservations.Remove(this);
					}
					this._LOCATION.Entity = value;
					if ((value != null))
					{
						value.Reservations.Add(this);
						this._RTRN_LOC = value.dim_Location_id;
					}
					else
					{
						this._RTRN_LOC = default(Nullable<int>);
					}
					this.SendPropertyChanged("LOCATION");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOCATION_Reservation1", Storage="_LOCATION1", ThisKey="RENT_LOC", OtherKey="dim_Location_id", IsForeignKey=true)]
		public LOCATION LOCATION1
		{
			get
			{
				return this._LOCATION1.Entity;
			}
			set
			{
				LOCATION previousValue = this._LOCATION1.Entity;
				if (((previousValue != value) 
							|| (this._LOCATION1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOCATION1.Entity = null;
						previousValue.Reservations1.Remove(this);
					}
					this._LOCATION1.Entity = value;
					if ((value != null))
					{
						value.Reservations1.Add(this);
						this._RENT_LOC = value.dim_Location_id;
					}
					else
					{
						this._RENT_LOC = default(Nullable<int>);
					}
					this.SendPropertyChanged("LOCATION1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ResRemarks(ResRemark entity)
		{
			this.SendPropertyChanging();
			entity.Reservation = this;
		}
		
		private void detach_ResRemarks(ResRemark entity)
		{
			this.SendPropertyChanging();
			entity.Reservation = null;
		}
	}
}
#pragma warning restore 1591
