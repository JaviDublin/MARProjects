-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE procedure [dbo].[spSSISCMSForecastOperationalFleetUpdate]

	@theDay datetime,
	@COUNTRY varchar(5), 
	@fleetPlanID int
		
AS
BEGIN
--	=========================================================================
--	Update four 'Operational_fleet' fields in Forecast table
--	==========================================================================

	SET NOCOUNT ON;

		--set @theDay = '12/jul/2011'	set @COUNTRY = 'GE'	set @fleetPlanID = 1
		
	DECLARE @OP table (REP_DATE smalldatetime, CMS_LOCATION_GROUP_ID int, CAR_CLASS_ID int, OPERATIONAL_FLEET numeric(9,2))

	INSERT INTO @OP
	SELECT FC.REP_DATE, FC.CMS_LOCATION_GROUP_ID, FC.CAR_CLASS_ID, ISNULL(FC.OPERATIONAL_FLEET_AV,0) + SUM(ISNULL(FP.amount,0)) AS 'OPERATIONAL_FLEET_NEW'
	FROM
	(
		SELECT *
		FROM MARS_CMS_FORECAST FC
		WHERE FC.REP_DATE >= @theDay 
			AND (FC.COUNTRY = @COUNTRY OR @COUNTRY IS NULL)
	) FC
	INNER JOIN
	(
		SELECT PD.targetDate, PD.CMS_LOCATION_GROUP_ID, PD.car_class_id, PD.amount
		FROM MARS_CMS_FleetPlanEntry PE
			INNER JOIN MARS_CMS_FleetPlanDetails PD ON PE.PKID = PD.fleetPlanEntryID
		WHERE (PE.Country = @COUNTRY OR @COUNTRY IS NULL)
			AND PE.fleetPlanID = @fleetPlanID
			AND PD.targetDate >= @theDay
	) FP ON FC.REP_DATE > FP.targetDate AND FC.CMS_LOCATION_GROUP_ID = FP.CMS_LOCATION_GROUP_ID AND FC.CAR_CLASS_ID = FP.car_class_id

	GROUP BY FC.REP_DATE, FC.CMS_LOCATION_GROUP_ID, FC.CAR_CLASS_ID, FC.OPERATIONAL_FLEET_AV
	--	order by FC.REP_DATE, CMS_LOCATION_GROUP_ID, car_class_id

			--select * from @OP

	IF @fleetPlanID = 1
	-- Actual
	BEGIN
		UPDATE MARS_CMS_FORECAST
		SET OPERATIONAL_FLEET = OP.OPERATIONAL_FLEET	
		FROM MARS_CMS_FORECAST FC
			INNER JOIN @OP OP ON FC.REP_DATE = OP.REP_DATE AND FC.CMS_LOCATION_GROUP_ID = OP.CMS_LOCATION_GROUP_ID AND FC.CAR_CLASS_ID = OP.CAR_CLASS_ID		
		WHERE FC.OPERATIONAL_FLEET <> OP.OPERATIONAL_FLEET	
	END
	ELSE IF @fleetPlanID = 2
	-- Scenario 1
	BEGIN
		UPDATE MARS_CMS_FORECAST
		SET OPERATIONAL_FLEET_S1 = OP.OPERATIONAL_FLEET	
		FROM MARS_CMS_FORECAST FC
			INNER JOIN @OP OP ON FC.REP_DATE = OP.REP_DATE AND FC.CMS_LOCATION_GROUP_ID = OP.CMS_LOCATION_GROUP_ID AND FC.CAR_CLASS_ID = OP.CAR_CLASS_ID
		WHERE FC.OPERATIONAL_FLEET_S1 <> OP.OPERATIONAL_FLEET	
	END
	ELSE IF @fleetPlanID = 3
	-- Scenario 2
	BEGIN
		UPDATE MARS_CMS_FORECAST
		SET OPERATIONAL_FLEET_S2 = OP.OPERATIONAL_FLEET	
		FROM MARS_CMS_FORECAST FC
			INNER JOIN @OP OP ON FC.REP_DATE = OP.REP_DATE AND FC.CMS_LOCATION_GROUP_ID = OP.CMS_LOCATION_GROUP_ID AND FC.CAR_CLASS_ID = OP.CAR_CLASS_ID
			WHERE FC.OPERATIONAL_FLEET_S2 <> OP.OPERATIONAL_FLEET	
	END
	ELSE IF @fleetPlanID = 4
	-- Scenario 3
	BEGIN
		UPDATE MARS_CMS_FORECAST
		SET OPERATIONAL_FLEET_S3 = OP.OPERATIONAL_FLEET	
		FROM MARS_CMS_FORECAST FC
			INNER JOIN @OP OP ON FC.REP_DATE = OP.REP_DATE AND FC.CMS_LOCATION_GROUP_ID = OP.CMS_LOCATION_GROUP_ID AND FC.CAR_CLASS_ID = OP.CAR_CLASS_ID
		WHERE FC.OPERATIONAL_FLEET_S3 <> OP.OPERATIONAL_FLEET	
	END
	exec [FleetSizeForecastGenerate]
END


-- EXEC [spSSISCMSForecastOperationalFleetUpdate] '12/JUL,2011', 'GE', 1
-- EXEC [spSSISCMSForecastOperationalFleetUpdate] '12/JUL,2011', NULL, 1