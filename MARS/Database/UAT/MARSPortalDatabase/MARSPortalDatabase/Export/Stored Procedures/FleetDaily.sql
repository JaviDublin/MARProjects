CREATE PROCEDURE [Export].[FleetDaily]
	
AS
BEGIN
	
	SET NOCOUNT ON;
	
	DECLARE @theDay datetime
	SET @theDay =GETDATE()


	SELECT COUNTRY,
		REP_YEAR,
		REP_MONTH,
		LOCATION,
		CAR_SEGMENT,
		AVG(TOTAL_FLEET) AS TOTAL_FLEET,
		AVG(WS) AS WHOLESALE,
		AVG(SV) AS SALVAGE,
		AVG(OPERATIONAL_FLEET) AS OPERATIONAL_FLEET,
		AVG(BD) AS BODY_DAMAGE,
		AVG(MM) AS MAINTENANCE,
		AVG(TB) AS TURNBACK,
		AVG(AVAILABLE_FLEET) AS AVAILABLE_FLEET,
		AVG(OVERDUE) AS OVERDUE,
		AVG(ON_RENT) AS ON_RENT
	FROM
		(
		SELECT
			FES.COUNTRY,
			FES.REP_YEAR,
			FES.REP_MONTH,
			FES.REP_DATE,
			FES.LOCATION,
			CASE WHEN CS.car_segment = 'Van' THEN 'VAN' ELSE 'CAR' END AS CAR_SEGMENT,
			SUM(FES.TOTAL_FLEET) AS TOTAL_FLEET,
			SUM(FES.WS) AS WS,
			SUM(FES.SV) AS SV,
			SUM(FES.OPERATIONAL_FLEET) AS OPERATIONAL_FLEET,
			SUM(FES.BD) AS BD,
			SUM(FES.MM) AS MM,
			SUM(FES.TB) AS TB,
			SUM(FES.AVAILABLE_FLEET) AS AVAILABLE_FLEET,
			SUM(FES.OVERDUE) AS OVERDUE,
			SUM(FES.ON_RENT) AS ON_RENT
		FROM
			Inp.FLEET_EUROPE_SUMMARY_HISTORY AS FES
			INNER JOIN dbo.CAR_GROUPS AS CG ON FES.CAR_GROUP = CG.car_group
			INNER JOIN dbo.CAR_CLASSES AS CC ON CG.car_class_id = CC.car_class_id
			INNER JOIN dbo.CAR_SEGMENTS AS CS ON CC.car_segment_id = CS.car_segment_id	 
			inner join LOCATIONS as L on FES.location = L.location 
		WHERE
			(			
				(FES.FLEET_RAC_TTL = 1)
				OR
				(FES.FLEET_CARSALES = 1)		 
			)
			AND
			(FES.COUNTRY = CS.country)
			AND
			(FES.COUNTRY = L.country)
			AND
			(FES.COUNTRY IN ('BE', 'FR', 'GE', 'IT', 'LU', 'NE', 'SP', 'SZ', 'UK'))
			AND
			(FES.REP_YEAR	= YEAR(@theDay))
			AND
			(FES.REP_MONTH	= MONTH(@theDay))			
		GROUP BY
			FES.COUNTRY,
			FES.REP_YEAR,
			FES.REP_MONTH,
			FES.REP_DATE,
			FES.LOCATION,
			(CASE WHEN CS.car_segment = 'Van' THEN 'VAN' ELSE 'CAR' END)
		) AS Q
	GROUP BY
		COUNTRY,
		REP_YEAR,
		REP_MONTH,
		LOCATION,
		CAR_SEGMENT

    
END