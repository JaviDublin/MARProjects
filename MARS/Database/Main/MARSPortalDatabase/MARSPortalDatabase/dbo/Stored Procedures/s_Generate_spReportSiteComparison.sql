CREATE proc [dbo].[s_Generate_spReportSiteComparison]
@proctype varchar(100) = null 
as
/*
exec s_Generate_spReportSiteComparison 'RT'
*/
set nocount on
declare @t table (proctype varchar(100))
--  insert @t select 'AVAILABLE_FLEET'
--  insert @t select 'BD'
--  insert @t select 'CARHOLD_H'
--  insert @t select 'CARHOLD_L'
--  insert @t select 'CARSALES'
	insert @t select 'CU'
	insert @t select 'FS'
	insert @t select 'GOLD'
	insert @t select 'GOLD'
	insert @t select 'HA'
	insert @t select 'HL'
	insert @t select 'LL'
	insert @t select 'MM'
	insert @t select 'NC'
	insert @t select 'ON_RENT'
	insert @t select 'OPERATIONAL_FLEET'
	insert @t select 'OVERDUE'
	insert @t select 'PL'
	insert @t select 'PREDELIVERY'
	insert @t select 'RL'
	insert @t select 'RP'
	insert @t select 'RT'
	insert @t select 'SU'
	insert @t select 'SV'
	insert @t select 'TB'
	insert @t select 'TC'
	insert @t select 'TN'
	insert @t select 'TOTAL_FLEET'
	insert @t select 'TW'
--	insert @t select 'UTILISATION'
--	insert @t select 'UTILISATIONINCOVERDUE'
	insert @t select 'WS'
	insert @t select 'WS_NONRAC'
	insert @t select 'WS_RAC'

	if @proctype is not null
		delete @t where proctype <> @proctype

	create table #sql (seq1 int, seq2 int, s varchar(4000))
	declare @seq1 int=0

declare @type varchar(100) = ''
	while @type < (select MAX(proctype) from @t)
	begin
		select @type = proctype
		from	(	select top 1 *
					from @t
					where proctype > @type
					order by proctype
				) a

	declare @procname varchar(128)	
	select @procname = 'spReportSiteComparison' + @type --+ '_History_Month'

	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N''[dbo].[' + @procname + ']'') AND type in (N''P'', N''PC''))'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'DROP PROCEDURE [dbo].[' + @procname + ']'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'GO'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
''
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'CREATE procedure [dbo].[' + @procname + ']'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'-- Add the parameters for the stored procedure here'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'@country VARCHAR(10) = NULL,'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'@cms_pool_id INT = NULL,'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'@cms_location_group_id int = NULL, --@cms_location_group_code VARCHAR(10) = NULL,'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'@ops_region_id INT = NULL,'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'@ops_area_id INT = NULL,		'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'@fleet_name VARCHAR(50) = NULL,'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'@car_segment_id INT = NULL,'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'@car_class_id INT = NULL,'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'@car_group_id INT = NULL,'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'@start_date DATETIME,'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'@end_date DATETIME,'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'@day_of_week INT = NULL,	'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'@select_by VARCHAR(10),'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'@grouping_criteria VARCHAR(20)'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'AS'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'	-- This SP has been generated by s_Generate_spReportSiteComparison'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'	-- Do not edit the SP - change the generator'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'/*'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'exec ' + @procname + ''
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'@start_date = ''20110120'' ,'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'@end_date = ''20120410'' ,'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'@select_by = ''VALUE'' ,'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'@grouping_criteria = ''LOCATION'''
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
''
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'exec ' + @procname + ''
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'@start_date = ''20120717'' ,'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'@end_date = ''20120717 23:59:59'' ,'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'@country=''GE'' ,'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'@car_segment_id=4 ,'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'@select_by = ''VALUE'' ,'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'@grouping_criteria = ''CMS_POOL'''
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'*/'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'	SET NOCOUNT ON;'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
''
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'begin try'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
''
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'declare @rowcount int, @inserted int, @updated int'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'declare @entity varchar(100)'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'declare @key1 varchar(100)'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'declare @data2 varchar(max)'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
''	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
''
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'	select @entity = OBJECT_NAME(@@PROCID)'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'	select @entity = coalesce(@entity,''test'')'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'	select @key1 = convert(varchar(20),@@spid)'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'	select	@data2	=	  ''@country='' + coalesce(''''''''+@country+'''''''', ''null'')'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'						+ '',@cms_pool_id='' + coalesce(convert(varchar(20),@cms_pool_id), ''null'')'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'						+ '',@cms_location_group_id='' + coalesce(convert(varchar(20),@cms_location_group_id), ''null'')'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'						+ '',@ops_region_id='' + coalesce(convert(varchar(20),@ops_region_id), ''null'')'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'						+ '',@ops_area_id='' + coalesce(convert(varchar(20),@ops_area_id), ''null'')'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'						+ '',@fleet_name='' + coalesce(''''''''+@fleet_name+'''''''', ''null'')'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'						+ '',@car_segment_id='' + coalesce(convert(varchar(20),@car_segment_id), ''null'')'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'						+ '',@car_class_id='' + coalesce(convert(varchar(20),@car_class_id), ''null'')'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'						+ '',@car_group_id='' + coalesce(convert(varchar(20),@car_group_id), ''null'')'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'						+ '',@start_date='' + coalesce(''''''''+convert(varchar(23),@start_date,126)+'''''''', ''null'')'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'						+ '',@end_date='' + coalesce(''''''''+convert(varchar(23),@end_date,126)+'''''''', ''null'')'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'						+ '',@day_of_week='' + coalesce(convert(varchar(20),@day_of_week), ''null'')'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'						+ '',@select_by='' + coalesce(''''''''+@select_by+'''''''', ''null'')'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'						+ '',@grouping_criteria='' + coalesce(''''''''+@grouping_criteria+'''''''', ''null'')'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'	insert trace (entity, key1, key2, data2)'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'	select @entity, @key1, ''start'', @data2'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
''
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'	-- Insert statements for procedure here'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'	CREATE TABLE #TMP_LOCATIONS'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'		('
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'		dim_calendar_id int,'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'		COUNTRY VARCHAR(2) COLLATE Latin1_General_CI_AS,'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'		LOCATION VARCHAR(7) COLLATE Latin1_General_CI_AS,'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'		TOPIC_COUNTER INT, --TOPIC: ' + @type + ''
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'		GROUP_COUNTER INT, --GROUP: TOTAL_FLEET'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'		NumDays				int ,			'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'		rowtype				varchar(1)'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'		)'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
''
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'	CREATE TABLE #TMP_GROUPS('
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'		dim_calendar_id int,'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'		GROUP_ID VARCHAR(10) COLLATE Latin1_General_CI_AS,'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'		GROUP_NAME VARCHAR(50) COLLATE Latin1_General_CI_AS,'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'		TOPIC_COUNTER INT, --TOPIC: RT'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'		GROUP_COUNTER INT, --GROUP: AVAILABLE_FLEET'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'		NumDays				int'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'	)'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
''
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
''
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'-- get start and end months for month table access'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'declare @StartFullPeriod datetime'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'declare @EndFullPeriod datetime'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'declare @StartDateEnd datetime'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'declare @EndDateStart datetime'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
''

	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'		-- get full periods at aggregation level'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'		declare @periods table (dim_calendar_id int, dim_calendar_id_end int, PeriodStart datetime, PeriodEnd datetime, type int)'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'		if @day_of_week is null'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'		begin'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'			declare @type int'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'			select @type = 4  -- do not use 5'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'			while @type > 1'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'			begin'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'				select @type = @type - 1'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
''
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'				select	@StartFullPeriod = MIN(PeriodStart) from @periods		'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'				select	@EndFullPeriod = max(PeriodEnd) from @periods	'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'				select 	@StartFullPeriod = coalesce(@StartFullPeriod,''25000101'')'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'				select 	@EndFullPeriod = coalesce(@EndFullPeriod,''19000101'')'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'				'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'				insert	@periods'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'				select	m.min_dim_calendar_id, m.max_dim_calendar_id, m.PeriodStart, m.PeriodEnd, convert(varchar(20),Type)'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'				from	inp.Data_Aggregate m'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'				where	(	m.PeriodStart between @start_date and @end_date'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'						and m.PeriodEnd between @start_date and @end_date'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'						and	(	m.PeriodEnd < @StartFullPeriod'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'							or	m.PeriodStart > @EndFullPeriod'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'							)'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'						)'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'				and		m.Type = @Type'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'				'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'				select	@StartFullPeriod = MIN(PeriodStart) from @periods		'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'				select	@EndFullPeriod = max(PeriodEnd) from @periods	'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
''
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'				select @data2	=	''@Type='' + coalesce(convert(varchar(20),@Type),''null'')'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'									+ '',@StartFullPeriod='' + '''''''' + coalesce(convert(varchar(19),@StartFullPeriod,126)+'''''''',''null'')'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'									+ '',@EndFullPeriod='' + '''''''' + coalesce(convert(varchar(19),@EndFullPeriod,126)+'''''''',''null'')'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'				insert trace (entity, key1, key2, data2)'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'				select @entity, @key1, ''Aggregate'', @data2'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'			end'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'		end'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'		else'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'		begin'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'			insert	@periods'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'			select	m.min_dim_calendar_id, m.max_dim_calendar_id, m.MonthStart, m.MonthEnd, 999'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'			from	inp.MonthlyData m'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'			where	m.MonthStart >= @start_date'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'			and		m.MonthEnd <= @end_date'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
''
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'		end'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
''
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'		select	@StartFullPeriod = min(PeriodStart) ,'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'				@EndFullPeriod = max(PeriodEnd)'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'		from @periods'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'		'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'		if @StartFullPeriod > @EndFullPeriod or @StartFullPeriod is null or @EndFullPeriod is null'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'			select	@StartDateEnd = @end_date ,'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'					@EndDateStart = null'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'		else'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'			select	@StartDateEnd = @StartFullPeriod - 1 ,'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'					@EndDateStart = @EndFullPeriod + 1'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'		'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'		insert trace (entity, key1, Key2, Data1)'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'		select @entity, @key1, ''Periods'',	''start='' + coalesce(convert(varchar(19),@start_date,126),''null'')'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'											+	'',@StartDateEnd='' + coalesce(convert(varchar(19),@StartDateEnd,126),''null'')'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'											+	'',@EndDateStart='' + coalesce(convert(varchar(19),@EndDateStart,126),''null'')'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'											+ 	'',end='' + coalesce(convert(varchar(19),@end_date,126),''null'')'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'											+ 	'',StartPeriod='' + coalesce(convert(varchar(19),@StartFullPeriod,126),''null'')'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'											+ 	'',EndPeriod='' + coalesce(convert(varchar(19),@EndFullPeriod,126),''null'')'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
''
		
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'	-- Locations'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'	declare @LocationFlag int = 0'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'	select @LocationFlag = 1'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'	where coalesce(@cms_pool_id, @cms_location_group_id, @ops_region_id, @ops_area_id) is not null'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
''
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'	declare @Locations table (dim_Location_id int, Location varchar(100))'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'	if @LocationFlag = 1'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'		insert @Locations (dim_Location_id, Location)'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'		select FES.dim_Location_id, l.location'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'		from inp.dim_Location FES'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'			join inp.dim_Location l'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'				on FES.dim_Location_id = l.dim_Location_id'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'		where ((FES.LOCATION IN (SELECT L.location FROM LOCATIONS AS L INNER JOIN CMS_LOCATION_GROUPS AS CLG ON L.cms_location_group_id = CLG.cms_location_group_id WHERE CLG.cms_pool_id = @cms_pool_id)) OR @cms_pool_id IS NULL) -- CMS_POOLS'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'		AND ((FES.LOCATION IN (SELECT location FROM LOCATIONS WHERE cms_location_group_id = @cms_location_group_id)) OR @cms_location_group_id IS NULL) -- CMS_LOCATION_GROUPS'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'		AND ((FES.LOCATION IN (SELECT L.location FROM LOCATIONS AS L INNER JOIN OPS_AREAS AS OA ON L.ops_area_id = OA.ops_area_id WHERE OA.ops_region_id = @ops_region_id)) OR @ops_region_id IS NULL) -- OPS_REGIONS'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'		AND ((FES.LOCATION IN (SELECT location FROM LOCATIONS WHERE ops_area_id = @ops_area_id)) OR @ops_area_id IS NULL) -- OPS_AREAS			'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'	else'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'		insert @Locations select dim_Location_id, l.location from inp.dim_Location l'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'	'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'	-- Car groups'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'	declare @CarGroupFlag int = 0'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'	select @CarGroupFlag = 1'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'	where coalesce(@car_segment_id, @car_class_id, @car_group_id) is not null'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'	'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'	declare @CarGroups table (CarGroup varchar(10))'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'	if @CarGroupFlag = 1'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'		insert @CarGroups'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'		select distinct CAR_GROUP'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'		from CAR_GROUPS FES'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'		where ((FES.CAR_GROUP IN (SELECT CG.car_group FROM CAR_GROUPS AS CG INNER JOIN CAR_CLASSES AS CC ON CG.car_class_id = CC.car_class_id WHERE CC.car_segment_id = @car_segment_id)) OR @car_segment_id IS NULL) --@car_segment_id'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'		AND ((FES.CAR_GROUP IN (SELECT CG.car_group FROM CAR_GROUPS AS CG WHERE CG.car_class_id = @car_class_id)) OR @car_class_id IS NULL) --@car_class_id'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'		AND ((FES.CAR_GROUP = (SELECT car_group FROM CAR_GROUPS WHERE car_group_id = @car_group_id)) OR @car_group_id IS NULL) --@car_group_id'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'	else'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'		insert @CarGroups select null'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'	'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'	-- daily data'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'	INSERT INTO #TMP_LOCATIONS(dim_calendar_id, COUNTRY, LOCATION, TOPIC_COUNTER, GROUP_COUNTER, NumDays, rowtype)'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'	SELECT '
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'		FES.dim_Calendar_id, FES.COUNTRY, l.LOCATION, SUM(FES.' + @type + '), SUM(FES.TOTAL_FLEET), 1, ''d'' '
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'	FROM '
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'		inp.Fact_FLEET_EUROPE_SUMMARY_HISTORY AS FES'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'			join inp.dim_Calendar d'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'				on d.dim_Calendar_id = FES.dim_Calendar_id'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'				join @Locations l'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'					on l.dim_Location_id = fes.dim_Location_id'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'			join @CarGroups cg'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'				on cg.CarGroup = FES.Car_Group'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'				or cg.CarGroup is null'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'	WHERE'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'		(FES.COUNTRY = @country OR @country IS NULL) -- Country'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
--'	AND ((@fleet_name = ''CARSALES'' AND FES.FLEET_CARSALES > 0) OR (@fleet_name = ''RAC OPS'' AND FES.FLEET_RAC_OPS > 0) OR (@fleet_name = ''RAC TTL'' AND FES.FLEET_RAC_TTL > 0) OR (@fleet_name IS NULL AND (FES.FLEET_CARSALES > 0 OR FES.FLEET_RAC_TTL > 0)))--Fleet'
'	AND ((@fleet_name = ''CARSALES'' AND FES.FLEET_CARSALES > 0) OR (@fleet_name = ''RAC OPS'' AND FES.FLEET_RAC_OPS > 0) OR (@fleet_name = ''RAC TTL'' AND FES.FLEET_RAC_TTL > 0) OR (@fleet_name = ''ADVANTAGE'' AND FES.FLEET_ADV > 0) OR (@fleet_name = ''HERTZ ON DEMAND'' AND FES.FLEET_HOD > 0) OR (@fleet_name = ''LICENSEE'' AND FES.FLEET_LICENSEE > 0) OR (@fleet_name IS NULL AND (FES.FLEET_CARSALES > 0 OR FES.FLEET_RAC_TTL > 0)  AND NOT(FLEET_ADV = 1) AND NOT(FLEET_HOD = 1) AND NOT(FLEET_LICENSEE = 1)))--Fleet'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'	AND (	d.REP_DATE between @start_date and @StartDateEnd '
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'		or  d.REP_DATE between @EndDateStart and @end_date'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'		)'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'	AND (d.Rep_DayOfWeek = @day_of_week OR @day_of_week IS NULL)'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'	GROUP BY '
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'		FES.dim_Calendar_id, l.LOCATION, FES.COUNTRY'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'	'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'	if @day_of_week	is null'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'	begin'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'		INSERT INTO #TMP_LOCATIONS(dim_calendar_id, COUNTRY, LOCATION, TOPIC_COUNTER, GROUP_COUNTER, NumDays, rowtype)'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'		SELECT '
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'			FES.dim_Calendar_id_start, FES.COUNTRY, l.LOCATION, SUM(FES.' + @type + '), SUM(FES.TOTAL_FLEET), max(FES.NumDays), ''m'' '
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'		FROM '
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'			inp.Fact_FLEET_EUROPE_SUMMARY_HISTORY_Aggregate AS FES'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'				join @periods m'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'					on m.dim_Calendar_id = FES.dim_Calendar_id_start'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'					and m.type = FES.Type'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'				join @Locations l'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'					on l.dim_Location_id = fes.dim_Location_id'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'				join @CarGroups cg'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'					on cg.CarGroup = FES.Car_Group'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'					or cg.CarGroup is null'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'		WHERE'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'			(FES.COUNTRY = @country OR @country IS NULL) -- Country'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
--'		AND ((@fleet_name = ''CARSALES'' AND FES.FLEET_CARSALES > 0) OR (@fleet_name = ''RAC OPS'' AND FES.FLEET_RAC_OPS > 0) OR (@fleet_name = ''RAC TTL'' AND FES.FLEET_RAC_TTL > 0) OR (@fleet_name IS NULL AND (FES.FLEET_CARSALES > 0 OR FES.FLEET_RAC_TTL > 0)))--Fleet'
'	    AND ((@fleet_name = ''CARSALES'' AND FES.FLEET_CARSALES > 0) OR (@fleet_name = ''RAC OPS'' AND FES.FLEET_RAC_OPS > 0) OR (@fleet_name = ''RAC TTL'' AND FES.FLEET_RAC_TTL > 0) OR (@fleet_name = ''ADVANTAGE'' AND FES.FLEET_ADV > 0) OR (@fleet_name = ''HERTZ ON DEMAND'' AND FES.FLEET_HOD > 0) OR (@fleet_name = ''LICENSEE'' AND FES.FLEET_LICENSEE > 0) OR (@fleet_name IS NULL AND (FES.FLEET_CARSALES > 0 OR FES.FLEET_RAC_TTL > 0)  AND NOT(FLEET_ADV = 1) AND NOT(FLEET_HOD = 1) AND NOT(FLEET_LICENSEE = 1)))--Fleet'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'		GROUP BY '
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'			FES.dim_Calendar_id_Start, l.LOCATION, FES.COUNTRY'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'	end'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'	else'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'	begin'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'		INSERT INTO #TMP_LOCATIONS(dim_calendar_id, COUNTRY, LOCATION, TOPIC_COUNTER, GROUP_COUNTER, NumDays, rowtype)'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'		SELECT '
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'			FES.dim_Calendar_id, FES.COUNTRY, l.LOCATION, SUM(FES.' + @type + '), SUM(FES.TOTAL_FLEET), max(FES.NumDays), ''m'' '
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'		FROM '
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'			inp.Fact_FLEET_EUROPE_SUMMARY_HISTORY_Month_DOW AS FES'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'				join @periods m'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'					on m.dim_Calendar_id = FES.dim_Calendar_id'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'				join @Locations l'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'					on l.dim_Location_id = fes.dim_Location_id'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'				join @CarGroups cg'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'					on cg.CarGroup = FES.Car_Group'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'					or cg.CarGroup is null'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'		WHERE'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'			(FES.COUNTRY = @country OR @country IS NULL) -- Country'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
--'		AND ((@fleet_name = ''CARSALES'' AND FES.FLEET_CARSALES > 0) OR (@fleet_name = ''RAC OPS'' AND FES.FLEET_RAC_OPS > 0) OR (@fleet_name = ''RAC TTL'' AND FES.FLEET_RAC_TTL > 0) OR (@fleet_name IS NULL AND (FES.FLEET_CARSALES > 0 OR FES.FLEET_RAC_TTL > 0)))--Fleet'
'	    AND ((@fleet_name = ''CARSALES'' AND FES.FLEET_CARSALES > 0) OR (@fleet_name = ''RAC OPS'' AND FES.FLEET_RAC_OPS > 0) OR (@fleet_name = ''RAC TTL'' AND FES.FLEET_RAC_TTL > 0) OR (@fleet_name = ''ADVANTAGE'' AND FES.FLEET_ADV > 0) OR (@fleet_name = ''HERTZ ON DEMAND'' AND FES.FLEET_HOD > 0) OR (@fleet_name = ''LICENSEE'' AND FES.FLEET_LICENSEE > 0) OR (@fleet_name IS NULL AND (FES.FLEET_CARSALES > 0 OR FES.FLEET_RAC_TTL > 0)  AND NOT(FLEET_ADV = 1) AND NOT(FLEET_HOD = 1) AND NOT(FLEET_LICENSEE = 1)))--Fleet'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'		AND FES.Rep_DayOfWeek = @day_of_week'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'		GROUP BY '
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'			FES.dim_Calendar_id, l.LOCATION, FES.COUNTRY'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'	end'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
''
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'	-- CALCULATE sums of cars per group'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'	IF (@grouping_criteria = ''COUNTRY'')'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'	BEGIN'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'		INSERT INTO #TMP_GROUPS(dim_calendar_id, GROUP_ID, GROUP_NAME, TOPIC_COUNTER, GROUP_COUNTER, NumDays)'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'			SELECT dim_calendar_id, #TMP_LOCATIONS.COUNTRY, #TMP_LOCATIONS.COUNTRY AS location, SUM(TOPIC_COUNTER) AS TOPIC_COUNTER, SUM(GROUP_COUNTER) AS GROUP_COUNTER, max(NumDays)'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'			FROM #TMP_LOCATIONS							'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'			LEFT JOIN COUNTRIES ON COUNTRIES.country = #TMP_LOCATIONS.COUNTRY'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'			WHERE COUNTRIES.active = 1'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'			GROUP BY dim_calendar_id, #TMP_LOCATIONS.COUNTRY'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'	END'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'	ELSE '
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'	BEGIN'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'		IF (@grouping_criteria = ''CMS_POOL'')'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'		BEGIN'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'			INSERT INTO #TMP_GROUPS(dim_calendar_id, GROUP_ID, GROUP_NAME, TOPIC_COUNTER, GROUP_COUNTER, NumDays)'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'				SELECT dim_calendar_id, CP.cms_pool_id, CP.cms_pool AS location, SUM(TOPIC_COUNTER) AS TOPIC_COUNTER, SUM(GROUP_COUNTER) AS GROUP_COUNTER, max(NumDays)'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'				FROM #TMP_LOCATIONS'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'				LEFT JOIN LOCATIONS AS L ON L.location = #TMP_LOCATIONS.location'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'				LEFT JOIN CMS_LOCATION_GROUPS AS CLG ON CLG.cms_location_group_id = L.cms_location_group_id		'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'				LEFT JOIN CMS_POOLS AS CP ON CP.cms_pool_id = CLG.cms_pool_id AND CP.country = #TMP_LOCATIONS.COUNTRY						'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'				GROUP BY dim_calendar_id, CP.cms_pool_id, CP.cms_pool'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'		END '
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'		ELSE '
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'		BEGIN				'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'			IF (@grouping_criteria = ''CMS_LOCATION_GROUP'')'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'			BEGIN'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'				INSERT INTO #TMP_GROUPS(dim_calendar_id, GROUP_ID, GROUP_NAME, TOPIC_COUNTER, GROUP_COUNTER, NumDays)'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'					SELECT dim_calendar_id, CLG.cms_location_group_id, CLG.cms_location_group, SUM(TOPIC_COUNTER), SUM(GROUP_COUNTER), max(NumDays)'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'					FROM #TMP_LOCATIONS'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'					LEFT JOIN LOCATIONS AS L ON L.location = #TMP_LOCATIONS.location'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'					LEFT JOIN CMS_LOCATION_GROUPS AS CLG ON CLG.cms_location_group_id = L.cms_location_group_id						'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'					GROUP BY dim_calendar_id, CLG.cms_location_group_id, CLG.cms_location_group'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'			END '
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'			ELSE'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'			BEGIN				'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'				IF (@grouping_criteria = ''LOCATION'')'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'				BEGIN'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'					INSERT INTO #TMP_GROUPS(dim_calendar_id, GROUP_ID, GROUP_NAME, TOPIC_COUNTER, GROUP_COUNTER, NumDays)'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'						SELECT dim_calendar_id, #TMP_LOCATIONS.LOCATION, #TMP_LOCATIONS.LOCATION, SUM(TOPIC_COUNTER), SUM(GROUP_COUNTER), max(NumDays) '
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'						FROM #TMP_LOCATIONS	'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'						GROUP BY dim_calendar_id, #TMP_LOCATIONS.LOCATION'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'				END '
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'				ELSE'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'				BEGIN'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'					IF (@grouping_criteria = ''OPS_REGION'')'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'					BEGIN'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'						INSERT INTO #TMP_GROUPS(dim_calendar_id, GROUP_ID, GROUP_NAME, TOPIC_COUNTER, GROUP_COUNTER, NumDays)'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'							SELECT dim_calendar_id, ORE.ops_region_id, ORE.ops_region, SUM(TOPIC_COUNTER), SUM(GROUP_COUNTER), max(NumDays) '
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'							FROM #TMP_LOCATIONS'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'							LEFT JOIN LOCATIONS AS L ON L.location = #TMP_LOCATIONS.location'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'							LEFT JOIN OPS_AREAS AS OA ON OA.ops_area_id = L.ops_area_id'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'							LEFT JOIN OPS_Regions AS ORE ON ORE.ops_region_id = OA.ops_region_id AND ORE.country = #TMP_LOCATIONS.COUNTRY	'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'							GROUP BY dim_calendar_id, ORE.ops_region_id, ORE.ops_region'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'						'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'					END '
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'					ELSE'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'					BEGIN'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'						IF (@grouping_criteria = ''OPS_AREA'')'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'						BEGIN'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'							INSERT INTO #TMP_GROUPS(dim_calendar_id, GROUP_ID, GROUP_NAME, TOPIC_COUNTER, GROUP_COUNTER, NumDays)'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'								SELECT dim_calendar_id, OA.ops_area_id, OA.ops_area, SUM(TOPIC_COUNTER), SUM(GROUP_COUNTER), max(NumDays) '
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'								FROM #TMP_LOCATIONS'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'								LEFT JOIN LOCATIONS AS L ON L.location = #TMP_LOCATIONS.location'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'								LEFT JOIN OPS_AREAS AS OA ON OA.ops_area_id = L.ops_area_id								'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'								GROUP BY dim_calendar_id, OA.ops_area_id, OA.ops_area'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'						END '
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'					END'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'				END'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'			END					'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'		END'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'	END'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
''
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'	-- DISPLAY NUMBERS OF CARS'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'	IF (@select_by = ''VALUE'')'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'	BEGIN		'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'		SELECT GROUP_NAME AS [location], convert(numeric(18,2),1.0*sum(TOPIC_COUNTER)/sum(NumDays)) AS [car_count]'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'		FROM #TMP_GROUPS'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'		GROUP BY GROUP_ID, GROUP_NAME'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'		ORDER BY GROUP_NAME'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'		select @rowcount = @@rowcount'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'	END'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'	-- Display percentage of cars in the TOPIC'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'	ELSE IF (@select_by = ''PERCENTAGE'')'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'	BEGIN	'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'		SELECT GROUP_NAME AS [location],	case when convert(numeric(18,2),1.0*sum(TOPIC_COUNTER)/sum(NumDays)) = 0'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'													then convert(numeric(18,2),0)'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'													else convert(numeric(18,2),100.0*sum(TOPIC_COUNTER)/sum(GROUP_COUNTER))'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'											end as car_count'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'		FROM #TMP_GROUPS'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'		GROUP BY GROUP_ID, GROUP_NAME'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'		ORDER BY GROUP_NAME'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'		select @rowcount = @@rowcount'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'	END'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'	'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'	-- Drop the tempory table	'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'	DROP TABLE #TMP_GROUPS'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'	-- Drop the tempory table	'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'	DROP TABLE #TMP_LOCATIONS'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
''
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
''
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
''
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'	insert trace (entity, key1, key2, data1)'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'	select @entity, @key1, ''end'', ''returned='' + coalesce(convert(varchar(20),@rowcount),''null'')'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'end try'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'begin catch'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'declare @ErrDesc varchar(max)'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'declare @ErrProc varchar(128)'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'declare @ErrLine varchar(20)'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
''
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'	select 	@ErrProc = ERROR_PROCEDURE() ,'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'		@ErrLine = ERROR_LINE() ,'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'		@ErrDesc = ERROR_MESSAGE()'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'	select	@ErrProc = coalesce(@ErrProc,'''') ,'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'		@ErrLine = coalesce(@ErrLine,'''') ,'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'		@ErrDesc = coalesce(@ErrDesc,'''')'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
''
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'	insert	Trace (Entity, key1, data1, data2)'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'	select	Entity = @entity, key1 = ''Failure'','
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'		data1 = ''<ErrProc='' + @ErrProc + ''>'''
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'			+ ''<ErrLine='' + @ErrLine + ''>'''
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'			+ ''<ErrDesc='' + @ErrDesc + ''>'','
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'		data2 = @key1'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'	raiserror(''Failed %s'', 16, -1, @ErrDesc)'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'end catch'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
''
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
'go'
	select @seq1 = @seq1+1
	insert #sql (seq1, s) select @seq1,
''
	end
select s from #sql order by seq1

drop table #sql