
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE procedure [dbo].[spSSISCMSForecastHistoryUpdateONRENT]
	
	@theDay datetime
	
AS
BEGIN
--	=========================================================================
--	Update OnRent Current, LY and Available/Operational/Total Fleet in MARS_CMS_FORECAST_History table
--	==========================================================================

	SET NOCOUNT ON;
	
	
	-- 1. Update OnRent 
	
	-- set Current_OnRent field to NULL, then update
	UPDATE MARS_CMS_FORECAST_HISTORY
	SET CURRENT_ONRENT = NULL
	WHERE REP_DATE = @theDay
	
	UPDATE MARS_CMS_FORECAST_HISTORY	
	SET CURRENT_ONRENT = FES.ON_RENT		
	FROM MARS_CMS_FORECAST_HISTORY FCH
		INNER JOIN
		(
			SELECT FES.REP_DATE, FES.COUNTRY, L.CMS_LOCATION_GROUP_ID, CC.CAR_CLASS_ID, SUM(FES.ON_RENT_MAX_ABSOLUTE) AS 'ON_RENT'
					, SUM(FES.AVAILABLE_FLEET) AS 'AVAILABLE_FLEET', SUM(FES.OPERATIONAL_FLEET) AS 'OPERATIONAL_FLEET', SUM(FES.TOTAL_FLEET) AS 'TOTAL_FLEET'
			FROM FLEET_EUROPE_SUMMARY FES
						INNER JOIN dbo.vw_Mapping_CMS_Location L ON L.COUNTRY = FES.COUNTRY AND L.location = FES.LOCATION
						INNER JOIN dbo.vw_Mapping_CarClass CC ON CC.COUNTRY = FES.COUNTRY AND CC.CAR_CLASS = FES.CAR_GROUP		
			WHERE ((FLEET_RAC_TTL = 1 OR FLEET_CARSALES = 1) AND REP_DATE = @theDay )
			GROUP BY FES.REP_DATE, FES.COUNTRY, L.CMS_LOCATION_GROUP_ID, CC.CAR_CLASS_ID
			
		) FES ON FCH.REP_DATE = FES.REP_DATE AND FCH.CMS_LOCATION_GROUP_ID = FES.CMS_LOCATION_GROUP_ID AND FCH.CAR_CLASS_ID = FES.CAR_CLASS_ID
		
		

	-- 2. UPDATE OnRent LY, Available Fleet, Operational Fleet, Total Fleet
	MERGE MARS_CMS_FORECAST_HISTORY AS [TARGET]
	USING	
	(
		SELECT REP_DATE, COUNTRY, CMS_LOCATION_GROUP_ID, CAR_CLASS_ID
				, CURRENT_ONRENT, ONRENT_LY, AVAILABLE_FLEET, OPERATIONAL_FLEET, TOTAL_FLEET
		FROM MARS_CMS_FORECAST
		WHERE REP_DATE = @theDay
		
	) AS [SOURCE]
	ON ([TARGET].REP_DATE = [SOURCE].REP_DATE AND [TARGET].CMS_LOCATION_GROUP_ID = [SOURCE].CMS_LOCATION_GROUP_ID 
		AND [TARGET].CAR_CLASS_ID = [SOURCE].CAR_CLASS_ID)
	
	-- update ONRENT_LY fro
	WHEN MATCHED THEN
	UPDATE SET [TARGET].ONRENT_LY = [SOURCE].ONRENT_LY	
				--, [TARGET].CURRENT_ONRENT = [SOURCE].CURRENT_ONRENT
				, [TARGET].AVAILABLE_FLEET = [SOURCE].AVAILABLE_FLEET
				, [TARGET].OPERATIONAL_FLEET = [SOURCE].OPERATIONAL_FLEET
				, [TARGET].TOTAL_FLEET = [SOURCE].TOTAL_FLEET
	;
	
	
	-- 3. Update Movement
	UPDATE MARS_CMS_FORECAST_HISTORY
	SET FLEET_MOVEMENT_FROZEN = FP.amount
	FROM MARS_CMS_FORECAST_HISTORY FCH
		LEFT JOIN dbo.FleetPlanSummary(NULL, 1, @theDay, @theDay) FP ON FCH.REP_DATE = FP.targetDate 
		AND FCH.CMS_LOCATION_GROUP_ID = FP.LOCATION_GROUP_ID AND FCH.CAR_CLASS_ID = FP.CAR_CLASS_ID
	WHERE FCH.REP_DATE = @theDay



	-- 4. Update Utilisation and NonRev %
	UPDATE MARS_CMS_FORECAST_HISTORY
	SET	FLEET_UTILISATION_FROZEN = NF.UTILISATION, FLEET_NONREV_FROZEN = NF.NONREV_FLEET
	FROM MARS_CMS_FORECAST_HISTORY FCH
		LEFT JOIN MARS_CMS_NECESSARY_FLEET NF ON FCH.CMS_LOCATION_GROUP_ID = NF.CMS_LOCATION_GROUP_ID AND FCH.CAR_CLASS_ID = NF.CAR_CLASS_ID
	WHERE FCH.REP_DATE = @theDay AND (NF.UTILISATION IS NOT NULL AND NF.NONREV_FLEET IS NOT NULL)
		AND (NF.UTILISATION <> FCH.FLEET_UTILISATION_FROZEN OR NF.NONREV_FLEET <> FCH.FLEET_NONREV_FROZEN)

	
		
	-- 5. update ONRENT_LY from FES History table to fill all entries	
	
	DECLARE @REP_DATE_LY_MIN datetime, @REP_DATE_LY_MAX datetime	
	
	SET @REP_DATE_LY_MAX = (SELECT DATEADD(d, -364, MAX(REP_DATE)) FROM dbo.MARS_CMS_FORECAST_HISTORY)
	SET @REP_DATE_LY_MIN = DATEADD(d, -14, MIN(@REP_DATE_LY_MAX)) 
		
	UPDATE MARS_CMS_FORECAST_HISTORY
	SET ONRENT_LY = FESH.ON_RENT
		--select *
	FROM MARS_CMS_FORECAST_HISTORY FCH
		INNER JOIN
		(
		SELECT FESH.REP_DATE, FESH.COUNTRY, L.CMS_LOCATION_GROUP_ID, CC.CAR_CLASS_ID, SUM(FESH.ON_RENT_MAX) AS 'ON_RENT'
		FROM FLEET_EUROPE_SUMMARY_HISTORY FESH
			INNER JOIN dbo.vw_Mapping_CMS_Location L ON L.COUNTRY = FESH.COUNTRY AND L.location = FESH.LOCATION
			INNER JOIN dbo.vw_Mapping_CarClass CC ON CC.COUNTRY = FESH.COUNTRY AND CC.CAR_CLASS = FESH.CAR_GROUP		
		WHERE ((FLEET_RAC_TTL = 1 OR FLEET_CARSALES = 1) AND REP_DATE BETWEEN @REP_DATE_LY_MIN AND @REP_DATE_LY_MAX)
		GROUP BY FESH.REP_DATE, FESH.COUNTRY, L.CMS_LOCATION_GROUP_ID, CC.CAR_CLASS_ID
		) FESH ON (DATEADD(d, -364, FCH.REP_DATE) = FESH.REP_DATE 
			AND FCH.CMS_LOCATION_GROUP_ID = FESH.CMS_LOCATION_GROUP_ID AND FCH.CAR_CLASS_ID = FESH.CAR_CLASS_ID)
	WHERE FCH.ONRENT_LY IS NULL

	
END


-- exec [spSSISCMSForecastHistoryUpdateONRENT] '10/jul/2011'